.. _coding_guide_datatypes:

Data types
----------

The runtime system defines its own typesystem based on the portable
"ANSI stdint" types. The types are defined in CmpStd.h and starts always
with RTS\_, e.g. **RTS\_UI32**.

Rules:

-  Use always the predefined RTS\_ datatypes in all interfaces!

-  Additionally you must use it in all implementations, where a fix size
   is needed (e.g. L7 service in communication)!

-  For all other internal implementations it is recommended, to use this
   datatypes too. The only exception for using native datatypes is when
   calling native OS- or Firmware functions.

-  | For IEC libraries there are the corresponding IEC type definitions
     in CmpStd.h:
   | e.g. **RTS\_IEC\_BOOL** for an IEC bool value. The types are
     exported automatically of the m4-Export Tool in CODESYS out of a
     library. Use the Systems Hungarian notation! That means the
     datatype of an identifier is described in as a prefix in the name.
   | For example:
   | RTS\_UI32 **ui32**\ NumOfTasks;
   | All prefixes are described in the tables below.

-  static variables with **s\_** as prefix, e.g. static char s\_cTag;

-  | static arrays with **a** as prefix, e.g. static RTS\_UI8
     s­\_\ **a**\ ui8Buffer[100];
   | **Note:** Static arrays have the prefix a to avoid confusing a
     variable with a pointer p!

-  Pointers starts with **p** as prefix, e.g. RTS\_UI8
   \*\ **p**\ ui8Buffer;

-  Function pointers starts with **pf** as prefix, e.g. INT\_HANDLER
   \*\ **pf**\ Handler;

RTS datatypes:

The standard RTS\_ datatypes contains the real size Bits, e.g. RTS\_I8
(8 Bits). So the corresponding size is identical on every platform!

+---------------+----------+----------------+-----------------------------------------------------------------------------------------------------------------+
| Datatype      | Prefix   | Size in Bits   | Usage                                                                                                           |
+===============+==========+================+=================================================================================================================+
| RTS\_I8       | i8       | 8              | Signed values                                                                                                   |
+---------------+----------+----------------+-----------------------------------------------------------------------------------------------------------------+
| RTS\_UI8      | ui8      | 8              | Unsigned values                                                                                                 |
+---------------+----------+----------------+-----------------------------------------------------------------------------------------------------------------+
| RTS\_I16      | i16      | 16             | Signed values                                                                                                   |
+---------------+----------+----------------+-----------------------------------------------------------------------------------------------------------------+
| RTS\_UI16     | ui16     | 16             | Unsigned values                                                                                                 |
+---------------+----------+----------------+-----------------------------------------------------------------------------------------------------------------+
| RTS\_I32      | i32      | 32             | Signed values                                                                                                   |
+---------------+----------+----------------+-----------------------------------------------------------------------------------------------------------------+
| RTS\_UI32     | ui32     | 32             | Unsigned values                                                                                                 |
+---------------+----------+----------------+-----------------------------------------------------------------------------------------------------------------+
| RTS\_I64      | i64      | 64             | Signed values                                                                                                   |
+---------------+----------+----------------+-----------------------------------------------------------------------------------------------------------------+
| RTS\_UI64     | ui64     | 64             | Unsigned values                                                                                                 |
+---------------+----------+----------------+-----------------------------------------------------------------------------------------------------------------+
| RTS\_REAL32   | r32      | 32             | Floating point values                                                                                           |
+---------------+----------+----------------+-----------------------------------------------------------------------------------------------------------------+
| RTS\_REAL64   | r64      | 64             | Floating point values                                                                                           |
+---------------+----------+----------------+-------------------------------+---------------------------------------------------------------------------------+
| RTS\_WCHAR    | wsz      | 16             | 16Bit Unicode character       | The wsz and sz prefixes are for pointers to characters or arrays of characters. |
+---------------+----------+----------------+-------------------------------+                                                                                 |
| RTS\_CSTRING  | sz       | 8              | 8Bit ASCII character          | Examples:                                                                       |
|               |          |                |                               |                                                                                 |
|               |          |                |                               |    .. code-block:: C                                                            |
|               |          |                |                               |                                                                                 |
|               |          |                |                               |       RTS_WCHAR * wszName;                                                      |
|               |          |                |                               |       RTS_CSTRING szName[];                                                     |
+---------------+----------+----------------+-------------------------------+---------------------------------------------------------------------------------+


There are some special datatypes which usage is explained here:

+----------------+-----------+---------------------------------------------------------------+------------------------------------------------------------+
| Datatype       | Prefix    | Size in Bits                                                  | Usage                                                      |
+================+===========+===============================================================+============================================================+
| RTS\_HANDLE    | h         | Size to hold always a pointer                                 | For every handle in the runtime system                     |
+----------------+-----------+---------------------------------------------------------------+------------------------------------------------------------+
| RTS\_RESULT    | r         | 32                                                            | For error codes                                            |
+----------------+-----------+---------------------------------------------------------------+------------------------------------------------------------+
| RTS\_UINTPTR   | uiptr     | Size to hold always the address of a pointer                  | For pointer arithmetic hold in an unsigned integral type   |
+----------------+-----------+---------------------------------------------------------------+------------------------------------------------------------+
| RTS\_INTPTR    | iptr      | Size to hold always the address of a pointer                  | For pointer arithmetic hold in a signed integral type      |
+----------------+-----------+---------------------------------------------------------------+------------------------------------------------------------+
| RTS\_PTRDIFF   | ptrdiff   | Size to hold always a pointer difference for a buffer offset  | Signed integral type that can hold an array index          |
+----------------+-----------+---------------------------------------------------------------+------------------------------------------------------------+
| RTS\_SIZE      | si        | Size to hold always a buffer offset                           | Unsigned integral type that can hold a buffer offset       |
+----------------+-----------+---------------------------------------------------------------+------------------------------------------------------------+
| RTS\_TIME      | t         | dependant on the platform                                     | Time to hold a UTC value                                   | 
|                |           | (e.g. 32Bit on 32Bit platforms, 64Bit on 64Bit platforms)     |                                                            |
+----------------+-----------+---------------------------------------------------------------+------------------------------------------------------------+
| RTS\_INT       | i         | Variant size, typical the platform specific int size          | Data type has no constant size, so be careful, in sharing  |
|                |           |                                                               | such data types with IEC!                                  |
+----------------+-----------+---------------------------------------------------------------+------------------------------------------------------------+
| RTS\_BOOL      | b         | Variant size, typical the platform specific int size          | Boolean value (TRUE or FALSE)                              |
|                |           |                                                               | Data type has no constant size, so be careful, in sharing  |
|                |           |                                                               | with IEC!                                                  | 
+----------------+-----------+---------------------------------------------------------------+------------------------------------------------------------+

