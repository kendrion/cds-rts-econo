.. _dev_io_configuration:

I/O Configuration
=================

As I/O configuration it is called the complete set of mechanisms, to
support all hardware-devices and I/O [2]_ systems that are connected to
a controller (the runtime system). This includes the description of the
hardware hierarchy, description and parameterization of each device and
the support of each device with a driver (I/O-driver).

One of the main aims of the I/O-configuration in CODESYS V3 is internal
standardization of the different device types, so that different field
bus nodes, internal I/Os, extension modules, drives, etc. are basically
treated in the same way. This means that each device is described with
the identical description structure. So a driver can interpret
principally every device description.

The second main issue is that the I/O-configuration is created as an IEC
data-structure and is downloaded to the runtime system with the IEC
application that includes the I/O-configuration.

If you want to access the I/O-configuration from another IEC
application, this application must be a child application of the
application with the I/O-configuration.

In the following chapters, all themes to access devices and IOs are
described in detail.

-  | Version (string): Indicates the version of a device description.
   | Here too the string enables a variable format for importing
     alternative description formats. For all types >= 0x1000 the format
     is specified as follows:
   | 	n.n.n.n
   | with "n" representing any decimal number, e.g. "1.0.17.3".
   | Within a device description it is possible to describe further
     modules that are only used in the context of this device
     description. In principle they are described and used in the same
     way as a device, although they can only be used as a child of the
     main device or another module defined in the main device. Modules
     are identified through the device identification together with an
     additional module Id.

-  | Module Id (string): Identifies a module within a device
     description.
   | The format is not free.

.. toctree::
   :maxdepth: 1

   dev_io_conf_graphical_configuration
   dev_io_conf_devices
   dev_io_conf_device_descriptions
   dev_io_conf_device_administration
   dev_io_conf_save_restore
   
   
.. [2] I/O: Input- and Output-Signals (Digital- or Analog), e.g. Sensor Data      