.. _ov_kernel_online_user_mgmt:

Device User Management
----------------------

In the runtime system, you can use a simple or a usergroup based user management. With this User Management all
access to the runtime system can be resticted and protected.

The so called device user management stores and manages two different kind of elements:

    1. In the users and groups area you can create users, define a password and assign the user to a user group
    
       For details see the Online Help of CODESYS in the chapter:
       | Editors > Device Editors > Generic Device Editor > Users and Groups

    2. The second kind of elements stores all objects of the runtime system, on which access rights should be managed. 
    
       Here you can assign to each group and to each object the appropriate access rights
       For details see the Online Help of CODESYS in the chapter:
       | Editors > Device Editors > Generic Device Editor > Access Rights

To enable the editors to configure both parts on the runtime system you have to enable the corresponding device
editor page in your :ref:`device description <dev_desc_device>`:

.. code-block:: C

    <DeviceDescription
        xmlns="http://www.3s-software.com/schemas/DeviceDescription-1.0.xsd">
        <Device>
            <Connector moduleType="256" interface="Common.PCI" role="parent" explicit="false">
               <Appearance>
                   <ShowEditor>UserManagementPage</ShowEditor>
               </Appearance>
            </Connector>
        </Device>
    </DeviceDescription>

Additionally you have to integrate the following components in your
runtime system:

1. **CmpUserMgr**:
        
        See :ref:`CmpUserMgr <group___cmp_user_mgr_itf>`
        
        Here we manage the generic part of the user management

2. The database is splitted into 2 parts:

   - **CmpUserDB**:
   
        See :ref:`CmpUserDB <group___cmp_user_d_b_itf>`
        
        Worked on a simple file. Here we store all users and groups and their relation to each other:
        
        .UserMgmtDB.csv

   - **CmpUserDBObjects**:
   
        See :ref:`CmpUserDBObjects <group___cmp_user_d_b_objects_itf>`
   
        Worked on a simple file. Here we store all objects and the groups with the corresponding access rights:
        
        .UserMgmtRightsDB

   For more embedded controllers, there is an alternate component wich implements both interfaces above. It can be used as atemplate to specify users, groups and
   rights during compile time. See CmpUserEmbedded as a template! You have to adapt this to your specific implementation.

3. **CmpCryptMD5**:

        Is needed by the components above.

After this work has been done, the online user management is prepared to be configured and to used.
