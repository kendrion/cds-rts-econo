.. _coding_guide_documentation:

Documentation
-------------

All public interface functions, the parameters, settings, events, static
Defines, compiler switches, etc. must be fully documented in the
interface header files!

The documentation of the RTS sourcecode leant on html. Actually we use
no standard format (like doxygen, reStructuredText, javadoc or similar).

Compiler Switches:

.. code-block:: C

 /**
 * <category>Compiler switch</category>
 * <description>
 * Compiler switches to enable/disable single features in the component.
 * </description>
 * <element name="TACEMGR_DISABLE_PERSISTENT_STORAGE">Switch to disable persistent storing of trace configuration in file</element>
 * <element name="TACEMGR_DISABLE_SYMBOLIC_VARACCESS">Switch to disable support for symbolic access of variables (see address flag TRACE_VAR_ADDRESS_FLAGS_SYMBOLIC))</element>
 */

Static Defines:

.. code-block:: C

 /**
 * <category>Static defines</category>
 * <description>Bootproject file extension</description>
 */
 #ifndef APP_BOOTPROJECT_FILE_EXTENSION
 #define APP_BOOTPROJECT_FILE_EXTENSION ".app"
 #endif

 Settings:

.. code-block:: C

 /**
 * <category>Settings</category>
 * <type>Int</type>
 * <description>
 * Setting to enable/disable creating bootproject implicitly on download:
 * 1: Create bootproject implicit
 * 0: Don‘t create bootproject implicit
 * </description>
 */
 #define APPKEY_INT_CREATE_BOOTPROJECT_ON_DOWNLOAD „Bootproject.CreateOnDownload"
 #ifndef APPVALUE_INT_CREATE_BOOTPROJECT_ON_DOWNLOAD_DEFAULT
 #define

Events:

.. code-block:: C

 /**
 * <category>Event parameter</category>
 * <element name="pApp" type="IN">Pointer to application description</element>
 * <element name="pszConfigApplication" type="IN">Pointer to the name of the config application</element>
 */
 typedef struct
 {
 struct tagAPPLICATION* pApp;
 char* pszConfigApplication;
 } EVTPARAM_CmpAppConfig;
 #define EVTPARAMID_CmpAppConfig 0x0001
 #define EVTVERSION_CmpAppConfig 0x0001
 /**
 * <category>Events</category>
 * <description>Event is sent on Reset, after global exit and before global init.</description>
 * <param name="pEventParam" type="IN">EVTPARAM_CmpAppConfig</param>
 */
 #define EVT_GlobalExitOnResetDone MAKE_EVENTID(EVTCLASS_INFO, 26)
 
 States:

.. code-block:: C

 /**
 * <category>Application state</category>
 * <description>
 *   <ul>
 *     <li>AS_NONE: Unspecified state</li>
 *     <li>AS_RUN: Application in run</li>
 *     <li>AS_STOP: Application in stop</li>
 *     <li>AS_DEBUG_HALT_ON_BP: Application halted on breakpoint</li>
 *     <li>AS_DEBUG_STEP: Not used actually</li>
 *     <li>AS_SYSTEM_APPLICATION: State of a system application</li>
 *   </ul>
 * </description>
 */
 #define AS_NONE			UINT32_C(0x00000000)
 #define AS_RUN  			UINT32_C(0x00000001)
 #define AS_STOP 			UINT32_C(0x00000002)
 #define AS_DEBUG_HALT_ON_BP UINT32_C(0x00000003)
 #define AS_DEBUG_STEP 		UINT32_C(0x00000004)
 #define AS_SINGLE_CYCLE 	UINT32_C(0x00000005)
 #define AS_SYSTEM_APPLICATION UINT32_C(0xFFFFFFFF)

Structures:

.. code-block:: C

 /**
 * <category>Application information</category>
 * <description>
 * Contains the application information as specified in the application property dialog in CoDeSys.
 * </description>
 * <element name="pstProjectName" type="OUT">Pointer project name</element>
 * <element name="pstAuthor" type="OUT">Pointer to author</element>
 * <element name="pstVersion" type="OUT">Pointer to version as string in the format „x.x.x.x"</element>
 * <element name="pstDescription" type="OUT">Pointer to description</element>
 * <element name="pstProfile" type="OUT">Pointer to used CoDeSys profile name</element>
 * <element name="dtLastChanges" type="OUT">Time and date of last modification of the application (UTC)</element>
 */
 typedef struct
 {
  RTS_IEC_STRING *pstProjectName;
  RTS_IEC_STRING *pstAuthor;
  RTS_IEC_STRING *pstVersion;
  RTS_IEC_STRING *pstDescription;
  RTS_IEC_STRING *pstProfile;
  RTS_IEC_DATE_AND_TIME dtLastChanges;
 } APPLICATION_INFO;
 
 Function prototypes in m4-File:

.. code-block:: C

 /**
 * <description>Stop an application</description>
 * <param name="pApp" type="IN">Pointer to the application</param>
 * <param name="ulTimeoutMs" type="IN">Timeout in milliseconds to wait for stop. RTS_TIMEOUT_DEFAULT can be used as the default value</param>
 * <param name="ulStopReason" type="IN">Stop reason, See corresponding category</param>
 * <result>error code</result>
 */
 DEF_ITF_API(`RTS_RESULT‘, `CDECL‘, `
