.. first line of composition.rst template

.. first line of group.rst template

.. _group___rts_interactive_login:

===================
RtsInteractiveLogin
===================

 :ref:`More... <group___rts_interactive_login-details>`

Functions
---------

- void :ref:`CBDeviceLogin <group___rts_interactive_login_1gabdf322fe0ddc6a98a2534f87c50228a0>` (EventParam * pEventParam)

- RTS_RESULT :ref:`InitLoginHandler <group___rts_interactive_login_1gaf31f01536f1240b5dc06785899cd9111>` (void)

- RTS_RESULT :ref:`ExitLoginHandler <group___rts_interactive_login_1ga1d16a7be1d78f0200c6b70919ec7e6c9>` (void)

.. _group___rts_interactive_login-details:

Detailed Description
--------------------



This example shows the implementation of the interactive login and the wink feature.

The interactive login is used that a user has to identify this target at login, e.g. with a unique token or the serial number of the target. This is a security level 1 feature to prevent someone to login to a wrong target.

The wink feature is used to identify a controller e.g. blinking a LED or similar.

The implementation of both features based on the EVT_CmpDevice_InteractiveLogin event (see CmpDeviceItf.h for details). Following login commands are specified here in the event parameter (EVTPARAM_CmpDevice_InteractiveLogin.ui32LoginCommand):

- DEV_ILC_IDENTIFY: Identify the controller by a wink signal (e.g. blinking a LED)

- DEV_ILC_LOGIN_REQUEST: Command to initiate the interactive login feature (Login modes: DEV_ILMF_BLINK = User can use this wink at login to check, if he/she is connected with the correct controller, DEV_ILMF_ID = User must specify a unique token of the controller, e.g. the serial number. This must be descibed in the corresponding target setting "interactivelogin_id_string", DEV_ILMF_KEY_PRESS = User must press a key or button on the controller to identify this target)

- DEV_ILC_LOGIN_POLL_RESULT: Is called cyclically if we return in the DEV_ILC_LOGIN_REQUEST command rLoginResult = ERR_PENDING. An this command is therefore called cyclically, until the user does the correct identification method (e.g. enter the correct serial number of the controller or pressed the login button on the controller).

- DEV_ILC_LOGIN_CANCEL: Cancel the interactive login operation

USAGE:

- InitLoginHandler() must be called out of CH_INIT3 hook

- ExitLoginHandler() must be called out of CH_EXIT3 hook

- CBDeviceLogin() is the callback function to login to the device

**Copyright:**

\(c) 2003-2016 3S-Smart Software Solutions

Function Documentation
----------------------

.. _group___rts_interactive_login_1gabdf322fe0ddc6a98a2534f87c50228a0:

static void CBDeviceLogin (EventParam *pEventParam)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Callback function that is called at login to the device or if someone pressed the "Wink" button in the communication dialog in CODESYS.

**Parameters**

+---------+-------------+--------------------------------------------------------------------------------------------------------------+
| [in]    | pEventParam | Pointer to event parameter set. pEventParam->pParameter is a pointer to EVTPARAM_CmpDevice_InteractiveLogin. |
+---------+-------------+--------------------------------------------------------------------------------------------------------------+

.. _group___rts_interactive_login_1gaf31f01536f1240b5dc06785899cd9111:

static RTS_RESULT InitLoginHandler (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to init example at startup of the runtime system. USAGE:

- Must be called in CH_INIT3 out of component HookFunction()!

**Returns:**

error code

.. _group___rts_interactive_login_1ga1d16a7be1d78f0200c6b70919ec7e6c9:

static RTS_RESULT ExitLoginHandler (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to exit example code at shutdown of the runtime system. USAGE:

- Must be called in CH_EXIT3 out of component HookFunction()!

**Returns:**

error code

.. last line of group.rst template
.. last line of composition.rst template


