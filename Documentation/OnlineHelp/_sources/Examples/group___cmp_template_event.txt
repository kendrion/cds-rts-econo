.. first line of composition.rst template

.. first line of group.rst template

.. _group___cmp_template_event:

================
CmpTemplateEvent
================

 :ref:`More... <group___cmp_template_event-details>`

Macros
------

- #define :ref:`STATICITF_DEF <group___cmp_template_event_1ga819be70ac9e7f8924fecb7b6db48cc4e>` static

Functions
---------

- void :ref:`CallbackFunction <group___cmp_template_event_1ga655df7fc53519dd9a3d9a126818874d2>` (EventParam * pEventParam)

- USE_STMT DLL_DECL int :ref:`ComponentEntry <group___cmp_template_event_1gae1981c15c8c2911ee56bc662c9ba86e9>` (INIT_STRUCT * pInitStruct)

- int :ref:`ExportFunctions <group___cmp_template_event_1ga9b0700711be53a466c6c8494343a465a>` (void)

- int :ref:`ImportFunctions <group___cmp_template_event_1ga87d62c8eb63af9f15a122c28448733bf>` (void)

- RTS_UI32 :ref:`CmpGetVersion <group___cmp_template_event_1gacf72d3e99274b04feca13b139859c539>` (void)

- RTS_RESULT :ref:`HookFunction <group___cmp_template_event_1ga0b2ad195d710768e5fa78879787cd805>` (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)

.. _group___cmp_template_event-details:

Detailed Description
--------------------



Very simple example about using runtime system events. Runtime system events are posted by various runtime components, and can be catched by other components. by registering a callback function. They can be used for communication between runtime system components. The communication using events is more flexible than function calls, because the component that posts the event needs not to know the components that register to the event. This example shows how to catch existing events, by registering a callback function to events from two different other components.

More examples about using events can be found in CmpTemplate and CmpTemplateEventIEC.

USAGE:

- CAL_EventOpen() and CAL_EventRegisterCallbackFunction() must be called to register the callback function

- CAL_EventUnregisterCallbackFunction() and CAL_EventClose() must be called to unregister

- CallbackFunction() is the callback function to catch the event

**Copyright:**

\(c) 2003-2016 3S-Smart Software Solutions

Macro Definition Documentation
------------------------------
.. _group___cmp_template_event_1ga819be70ac9e7f8924fecb7b6db48cc4e:

#define STATICITF_DEF static
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___cmp_template_event_1ga655df7fc53519dd9a3d9a126818874d2:

static void CallbackFunction (EventParam *pEventParam)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Callback function to catch events.

**Parameters**

+---------+-------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pEventParam | Pointer to event parameter set. Use pEventParam->CmpIdProvider and pEventParam->EventId to identify the event. Every event has a parameter passed in pEventParam->pParameter. This is often a structure, defined in the components Itf file. |
+---------+-------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. _group___cmp_template_event_1gae1981c15c8c2911ee56bc662c9ba86e9:

USE_STMT DLL_DECL int ComponentEntry (INIT_STRUCT *pInitStruct)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Entry function of the component. Called at startup for each component. Used to exchange function pointers with the component manager.

**Parameters**


| [in]    | pInitStruct | Pointer to structure with: pfExportFunctions OUT Pointer to function that exports component functions pfImportFunctions OUT Pointer to function that imports functions from other components pfGetVersion OUT Pointer to function to get component version pfRegisterAPI IN Pointer to component mangager function to register a api function pfGetAPI IN Pointer to component mangager function to get a api function pfCallHook IN Pointer to component mangager function to call a hook function |


**Returns:**

ERR_OK if library could be initialized, else error code.

.. _group___cmp_template_event_1ga9b0700711be53a466c6c8494343a465a:

static int ExportFunctions (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Publish exported functions to the component manager, to make them available for other components. Use generated macro EXPORT_STMT.
**Returns:**

ERR_OK or error code in case of error

.. _group___cmp_template_event_1ga87d62c8eb63af9f15a122c28448733bf:

static int ImportFunctions (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Import function pointers from other components. Use generated macro IMPORT_STMT.
**Returns:**

ERR_OK or error code if function name could not be resolved

.. _group___cmp_template_event_1gacf72d3e99274b04feca13b139859c539:

static RTS_UI32 CmpGetVersion (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Return the version of our component.
**Returns:**

Version as defined in dep file

.. _group___cmp_template_event_1ga0b2ad195d710768e5fa78879787cd805:

static RTS_RESULT HookFunction (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Example for a Hook function. Register and unregister callback functions here.

.. last line of group.rst template
.. last line of composition.rst template


