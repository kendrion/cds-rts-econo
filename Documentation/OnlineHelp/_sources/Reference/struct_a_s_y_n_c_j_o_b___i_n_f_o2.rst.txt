.. first line of composition.rst template

:orphan:

.. first line of struct.rst template

.. _struct_a_s_y_n_c_j_o_b___i_n_f_o2:

===============================
ASYNCJOB_INFO2 Struct Reference
===============================

| #include ":ref:`CmpAsyncMgrItf.h <_cmp_async_mgr_itf_8h>`"

Data Fields
-----------

- :ref:`PFASYNCJOBFUNCTION <group___cmp_async_mgr_itf___settings_1gabcc43f52a641ac404460670ed66ebb3a>` :ref:`pfJob <group___cmp_async_mgr_itf_1ga75b0ee180f6dbfcc857ada6a9197290a>`
- void * :ref:`pParam <group___cmp_async_mgr_itf_1ga30bbbaa3fe217dcf0bc9bc2eb102ef06>`
- void * :ref:`pInstance <group___cmp_async_mgr_itf_1ga2f7cb1e24b2bdbec46ae93f46f02c84b>`
- RTS_UI32 * :ref:`pulState <group___cmp_async_mgr_itf_1ga28db6c67204e342835ccb3ee1926fc1e>`
- int :ref:`bIecFunc <group___cmp_async_mgr_itf_1gac673fe5e22238db26a2c3137c15aa4bb>`
- RTS_UI32 :ref:`ulType <group___cmp_async_mgr_itf_1gacfcc0bda6d65a20a55db590b28f52a00>`
- RTS_UI32 :ref:`ulTimeout <group___cmp_async_mgr_itf_1ga5552a42b4f527e560401df00c8c3d054>`
- :ref:`ASYNCJOB_PARAM <union_a_s_y_n_c_j_o_b___p_a_r_a_m>` * :ref:`pJobParam <group___cmp_async_mgr_itf_1ga3ad61c2901de8e9e27bd30a70a0fbd17>`
- RTS_UI32 :ref:`ulJobReturnVal <group___cmp_async_mgr_itf_1ga58957b684f0568cf181cd1bf94df59d4>`
- RTS_UI32 :ref:`ulStartTime <group___cmp_async_mgr_itf_1gad037c95499c0042d6aa0294ce375f5bf>`
- :ref:`PFTASKEXCEPTIONHANDLER <group___sys_task_itf___settings_1ga292ffd009d5a17d2499c8a6e2b14669b>` :ref:`pfExceptionHandler <group___cmp_async_mgr_itf_1ga4f954228464a25e99f971757754d7b2e>`
- RTS_HANDLE * :ref:`phJob <group___cmp_async_mgr_itf_1gad93325247808dd20d74196f4709e7c52>`

Detailed Description
--------------------



Field Documentation
-------------------

.. _group___cmp_async_mgr_itf_1ga75b0ee180f6dbfcc857ada6a9197290a:

PFASYNCJOBFUNCTION ASYNCJOB_INFO2::pfJob
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Pointer to the job function, which is executed asynchronously

.. _group___cmp_async_mgr_itf_1ga30bbbaa3fe217dcf0bc9bc2eb102ef06:

void* ASYNCJOB_INFO2::pParam
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Pointer to the parameters for the function

.. _group___cmp_async_mgr_itf_1ga2f7cb1e24b2bdbec46ae93f46f02c84b:

void* ASYNCJOB_INFO2::pInstance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Optional pointer to the instance (IEC function block or class). Can be NULL.

.. _group___cmp_async_mgr_itf_1ga28db6c67204e342835ccb3ee1926fc1e:

RTS_UI32* ASYNCJOB_INFO2::pulState
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Pointer to actual state of the asynchronous job. NOTE: Can be NULL for fire and forget jobs, which are released automatically at the end of job execution

.. _group___cmp_async_mgr_itf_1gac673fe5e22238db26a2c3137c15aa4bb:

int ASYNCJOB_INFO2::bIecFunc
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_async_mgr_itf_1gacfcc0bda6d65a20a55db590b28f52a00:

RTS_UI32 ASYNCJOB_INFO2::ulType
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Type of asynchronous job (task, event or hook driven)

.. _group___cmp_async_mgr_itf_1ga5552a42b4f527e560401df00c8c3d054:

RTS_UI32 ASYNCJOB_INFO2::ulTimeout
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Timeout in [milliseconds], until the job must be started! If the job is not started within this timeout, the state of the job is marked with ASYNCSTATE_TIMEOUT and the job is removed from the queue.

.. _group___cmp_async_mgr_itf_1ga3ad61c2901de8e9e27bd30a70a0fbd17:

ASYNCJOB_PARAM* ASYNCJOB_INFO2::pJobParam
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Specific Parameters for the job types (task, event or hook driven)

.. _group___cmp_async_mgr_itf_1ga58957b684f0568cf181cd1bf94df59d4:

RTS_UI32 ASYNCJOB_INFO2::ulJobReturnVal
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Return code of the job if finished

.. _group___cmp_async_mgr_itf_1gad037c95499c0042d6aa0294ce375f5bf:

RTS_UI32 ASYNCJOB_INFO2::ulStartTime
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Start time of the job (in ms by SysTimeGetMs)

.. _group___cmp_async_mgr_itf_1ga4f954228464a25e99f971757754d7b2e:

PFTASKEXCEPTIONHANDLER ASYNCJOB_INFO2::pfExceptionHandler
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Optional exception handle which is called, if an exception occurred during asynchronous job execution.

.. _group___cmp_async_mgr_itf_1gad93325247808dd20d74196f4709e7c52:

RTS_HANDLE* ASYNCJOB_INFO2::phJob
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Pointer to the handle of the job. Is returned in AsyncAdd2.

The documentation for this struct was generated from the following file:
------------------------------------------------------------------------

CmpAsyncMgrItf.h

.. last line of struct.rst template
.. last line of composition.rst template


