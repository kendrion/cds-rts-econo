.. first line of composition.rst template

:orphan:

.. first line of group.rst template

.. _group___sys_cpu_breakpoints_itf:

====================
SysCpuBreakpointsItf
====================

.. contents::
    :local:
    :depth: 1

Interface of SysCpuBreakpoints.

Detailed Description
--------------------

Interface to handle hardware breakpoints

**Copyright:**

Copyright (c) 2017-2020 CODESYS Development GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Data Structures
---------------

- struct :ref:`ISysCpuBreakpoints_C <struct_i_sys_cpu_breakpoints___c>`

Macros
------

- #define :ref:`SYSCPUBREAKPOINTS_NOTIMPLEMENTED <group___sys_cpu_breakpoints_itf_1gac6a25c3414d94b7c2d73524903adf0b9>`

- #define :ref:`USE_SysCpuBreakpointSet <group___sys_cpu_breakpoints_itf_1gad633ddf4465cf9f9f70caf2b2fd04893>`

- #define :ref:`EXT_SysCpuBreakpointSet <group___sys_cpu_breakpoints_itf_1ga7ee85664e72944739ba24ee9e48ed72b>`

- #define :ref:`GET_SysCpuBreakpointSet <group___sys_cpu_breakpoints_itf_1ga85eefb9ea917ca151f79e6af2c3994b8>` ERR_NOTIMPLEMENTED

- #define :ref:`CAL_SysCpuBreakpointSet <group___sys_cpu_breakpoints_itf_1ga71aea94397689ddb6054ec4ef325d3c2>` (RTS_RESULT)ERR_NOTIMPLEMENTED

- #define :ref:`CHK_SysCpuBreakpointSet <group___sys_cpu_breakpoints_itf_1ga4ba8a1632348b619cbdd49cb48d426df>` FALSE

- #define :ref:`EXP_SysCpuBreakpointSet <group___sys_cpu_breakpoints_itf_1gaa9f4d70d68069ded06daadcbef988383>` ERR_OK

- #define :ref:`USE_SysCpuBreakpointDelete <group___sys_cpu_breakpoints_itf_1ga25edfdab6150c77af9b49a09d2ffada2>`

- #define :ref:`EXT_SysCpuBreakpointDelete <group___sys_cpu_breakpoints_itf_1ga621914d6a4ba3ba21390d94914f3b6a3>`

- #define :ref:`GET_SysCpuBreakpointDelete <group___sys_cpu_breakpoints_itf_1gadf28de44b4177774f439cce5fedfe1e4>` ERR_NOTIMPLEMENTED

- #define :ref:`CAL_SysCpuBreakpointDelete <group___sys_cpu_breakpoints_itf_1ga5690b3c14550ad732899d10d33807b53>` (RTS_RESULT)ERR_NOTIMPLEMENTED

- #define :ref:`CHK_SysCpuBreakpointDelete <group___sys_cpu_breakpoints_itf_1ga13458ad6d5e46b486b805675203f7ebf>` FALSE

- #define :ref:`EXP_SysCpuBreakpointDelete <group___sys_cpu_breakpoints_itf_1gaf4b8003026420ee1808bb6516b9b4605>` ERR_OK

- #define :ref:`USE_SysCpuBreakpointGetAddressByContext <group___sys_cpu_breakpoints_itf_1gaa028a002a0acee37e2207efccc01453e>`

- #define :ref:`EXT_SysCpuBreakpointGetAddressByContext <group___sys_cpu_breakpoints_itf_1gafb60e12d529ae905859660982efb3ee4>`

- #define :ref:`GET_SysCpuBreakpointGetAddressByContext <group___sys_cpu_breakpoints_itf_1ga0c3b7197115d0f5da14789434da5ac71>` ERR_NOTIMPLEMENTED

- #define :ref:`CAL_SysCpuBreakpointGetAddressByContext <group___sys_cpu_breakpoints_itf_1gacf484f11507a0957dbab71aabd77dd5d>` (RTS_RESULT)ERR_NOTIMPLEMENTED

- #define :ref:`CHK_SysCpuBreakpointGetAddressByContext <group___sys_cpu_breakpoints_itf_1gaac6a26a9a89b38e46465e6ffc8aab82d>` FALSE

- #define :ref:`EXP_SysCpuBreakpointGetAddressByContext <group___sys_cpu_breakpoints_itf_1ga0f175a49de0311bb424cd753eaaa04af>` ERR_OK

- #define :ref:`ITF_SysCpuBreakpoints <group___sys_cpu_breakpoints_itf_1ga651fbb3a18543b3ef70326c21b4dc6c5>`

- #define :ref:`EXTITF_SysCpuBreakpoints <group___sys_cpu_breakpoints_itf_1ga264689d5ccf3fbc01a1c332863d59e69>`

Typedefs
--------

- typedef RTS_RESULT(* :ref:`PFSYSCPUBREAKPOINTSET <group___sys_cpu_breakpoints_itf_1gaa4d72fced36a954241f9716f51e4e811>`)(RTS_HANDLE hApp, RTS_UI32 ulBPType, void *pAddress, RTS_UI32 ulSize)

- typedef RTS_RESULT(* :ref:`PFSYSCPUBREAKPOINTDELETE <group___sys_cpu_breakpoints_itf_1ga8c016b14f994c3ebf175d44835d76ef4>`)(RTS_HANDLE hApp, RTS_UI32 ulBPType, void *pAddress, RTS_UI32 ulSize)

- typedef RTS_RESULT(* :ref:`PFSYSCPUBREAKPOINTGETADDRESSBYCONTEXT <group___sys_cpu_breakpoints_itf_1gacd5f5083d1855872b7090fb83bfc5a07>`)(void *pContext, RTS_UINTPTR *pAddress, RTS_UI32 *pulSize)

- typedef :ref:`ISysCpuBreakpoints_C <struct_i_sys_cpu_breakpoints___c>` :ref:`ISysCpuBreakpoints <group___sys_cpu_breakpoints_itf_1gacf59bf9f60ee723d11c25453f3f58628>`

Functions
---------

- RTS_RESULT :ref:`SysCpuBreakpointsOSInit <group___sys_cpu_breakpoints_itf_1gad4e9058501ffad42e531c3728a0325ab>` (INIT_STRUCT * pInit)

- RTS_RESULT :ref:`SysCpuBreakpointsOSHookFunction <group___sys_cpu_breakpoints_itf_1ga30d8ab9a18866d7d650222bd62f24ea1>` (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)

- RTS_RESULT :ref:`SysCpuBreakpointSet <group___sys_cpu_breakpoints_itf_1ga55d1c3f15ac6d9260371de4763ee4700>` (RTS_HANDLE hApp, RTS_UI32 ulBPType, void * pAddress, RTS_UI32 ulSize)

- RTS_RESULT :ref:`SysCpuBreakpointDelete <group___sys_cpu_breakpoints_itf_1gac6c2a7ea7df75f5d0e5af9d9dfaee5c1>` (RTS_HANDLE hApp, RTS_UI32 ulBPType, void * pAddress, RTS_UI32 ulSize)

- RTS_RESULT :ref:`SysCpuBreakpointGetAddressByContext <group___sys_cpu_breakpoints_itf_1gac9580c05e72755f953bd29f825bd9c12>` (void * pContext, RTS_UINTPTR * pAddress, RTS_UI32 * pulSize)

Macro Definition Documentation
------------------------------
.. _group___sys_cpu_breakpoints_itf_1gac6a25c3414d94b7c2d73524903adf0b9:

#define SYSCPUBREAKPOINTS_NOTIMPLEMENTED
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1gad633ddf4465cf9f9f70caf2b2fd04893:

#define USE_SysCpuBreakpointSet
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga7ee85664e72944739ba24ee9e48ed72b:

#define EXT_SysCpuBreakpointSet
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga85eefb9ea917ca151f79e6af2c3994b8:

#define GET_SysCpuBreakpointSet ERR_NOTIMPLEMENTED
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga71aea94397689ddb6054ec4ef325d3c2:

#define CAL_SysCpuBreakpointSet (RTS_RESULT)ERR_NOTIMPLEMENTED
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga4ba8a1632348b619cbdd49cb48d426df:

#define CHK_SysCpuBreakpointSet FALSE
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1gaa9f4d70d68069ded06daadcbef988383:

#define EXP_SysCpuBreakpointSet ERR_OK
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga25edfdab6150c77af9b49a09d2ffada2:

#define USE_SysCpuBreakpointDelete
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga621914d6a4ba3ba21390d94914f3b6a3:

#define EXT_SysCpuBreakpointDelete
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1gadf28de44b4177774f439cce5fedfe1e4:

#define GET_SysCpuBreakpointDelete ERR_NOTIMPLEMENTED
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga5690b3c14550ad732899d10d33807b53:

#define CAL_SysCpuBreakpointDelete (RTS_RESULT)ERR_NOTIMPLEMENTED
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga13458ad6d5e46b486b805675203f7ebf:

#define CHK_SysCpuBreakpointDelete FALSE
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1gaf4b8003026420ee1808bb6516b9b4605:

#define EXP_SysCpuBreakpointDelete ERR_OK
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1gaa028a002a0acee37e2207efccc01453e:

#define USE_SysCpuBreakpointGetAddressByContext
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1gafb60e12d529ae905859660982efb3ee4:

#define EXT_SysCpuBreakpointGetAddressByContext
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga0c3b7197115d0f5da14789434da5ac71:

#define GET_SysCpuBreakpointGetAddressByContext ERR_NOTIMPLEMENTED
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1gacf484f11507a0957dbab71aabd77dd5d:

#define CAL_SysCpuBreakpointGetAddressByContext (RTS_RESULT)ERR_NOTIMPLEMENTED
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1gaac6a26a9a89b38e46465e6ffc8aab82d:

#define CHK_SysCpuBreakpointGetAddressByContext FALSE
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga0f175a49de0311bb424cd753eaaa04af:

#define EXP_SysCpuBreakpointGetAddressByContext ERR_OK
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga651fbb3a18543b3ef70326c21b4dc6c5:

#define ITF_SysCpuBreakpoints
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga264689d5ccf3fbc01a1c332863d59e69:

#define EXTITF_SysCpuBreakpoints
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___sys_cpu_breakpoints_itf_1gaa4d72fced36a954241f9716f51e4e811:

typedef RTS_RESULT( *  PFSYSCPUBREAKPOINTSET) (RTS_HANDLE hApp, RTS_UI32 ulBPType, void *pAddress, RTS_UI32 ulSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga8c016b14f994c3ebf175d44835d76ef4:

typedef RTS_RESULT( *  PFSYSCPUBREAKPOINTDELETE) (RTS_HANDLE hApp, RTS_UI32 ulBPType, void *pAddress, RTS_UI32 ulSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1gacd5f5083d1855872b7090fb83bfc5a07:

typedef RTS_RESULT( *  PFSYSCPUBREAKPOINTGETADDRESSBYCONTEXT) (void *pContext, RTS_UINTPTR *pAddress, RTS_UI32 *pulSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1gacf59bf9f60ee723d11c25453f3f58628:

typedef ISysCpuBreakpoints_C ISysCpuBreakpoints
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___sys_cpu_breakpoints_itf_1gad4e9058501ffad42e531c3728a0325ab:

RTS_RESULT SysCpuBreakpointsOSInit (INIT_STRUCT *pInit)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga30d8ab9a18866d7d650222bd62f24ea1:

RTS_RESULT SysCpuBreakpointsOSHookFunction (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_breakpoints_itf_1ga55d1c3f15ac6d9260371de4763ee4700:

RTS_RESULT SysCpuBreakpointSet (RTS_HANDLE hApp, RTS_UI32 ulBPType, void *pAddress, RTS_UI32 ulSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to set a hardware breakpoint (data breakpoint).

**Parameters**

+---------+----------+--------------------------------------------------------------------------------------------------+
| [in]    | hApp     | Handle to the application (see :ref:`CmpAppItf.h <_cmp_app_itf_8h>` ) RANGE=[RTS_INVALID_HANDLE] |
+---------+----------+--------------------------------------------------------------------------------------------------+
| [in]    | ulBPType | The type of the breakpoint to set (BP_DATA) RANGE=[RTS_RANGE_OF_RTS_UI32]                        |
+---------+----------+--------------------------------------------------------------------------------------------------+
| [in]    | pAddress | The address in the global data are to be observed                                                |
+---------+----------+--------------------------------------------------------------------------------------------------+
| [in]    | ulSize   | The size of data to be observed                                                                  |
+---------+----------+--------------------------------------------------------------------------------------------------+

**Returns:**

Returns ERR_OK or ERR_FAILED

.. _group___sys_cpu_breakpoints_itf_1gac6c2a7ea7df75f5d0e5af9d9dfaee5c1:

RTS_RESULT SysCpuBreakpointDelete (RTS_HANDLE hApp, RTS_UI32 ulBPType, void *pAddress, RTS_UI32 ulSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to delete a hardware breakpoint (data breakpoint).

**Parameters**

+---------+----------+--------------------------------------------------------------------------------------------------+
| [in]    | hApp     | Handle to the application (see :ref:`CmpAppItf.h <_cmp_app_itf_8h>` ) RANGE=[RTS_INVALID_HANDLE] |
+---------+----------+--------------------------------------------------------------------------------------------------+
| [in]    | ulBPType | The type of the breakpoint to set (BP_DATA) RANGE=[RTS_RANGE_OF_RTS_I32]                         |
+---------+----------+--------------------------------------------------------------------------------------------------+
| [in]    | pAddress | The address in the global data area of the breakpoint to be deleted                              |
+---------+----------+--------------------------------------------------------------------------------------------------+
| [in]    | ulSize   | The size of data of the breakpoint to be deleted                                                 |
+---------+----------+--------------------------------------------------------------------------------------------------+

**Returns:**

Returns ERR_OK or ERR_FAILED

.. _group___sys_cpu_breakpoints_itf_1gac9580c05e72755f953bd29f825bd9c12:

RTS_RESULT SysCpuBreakpointGetAddressByContext (void *pContext, RTS_UINTPTR *pAddress, RTS_UI32 *pulSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to retrieve a breakpoint address by the context as produced in the breakpoint exception. This function is system specific and may only be called by other system components.

**Parameters**

+---------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pContext  | pointer to the context. This parameter is system specific and is interpreted as a system specific type. (e.g: in Windows CONTEXT). It contains all information necessary to retrieve the active hardware breakpoint. RANGE=NULL |
+---------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | ppAddress | The address in the global data area of the currently active breakpoint as retrieved according to the pContext.                                                                                                                  |
+---------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pulSize   | The size of data of the currently active breakpoint as retrieved according to the pContext                                                                                                                                      |
+---------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Returns ERR_OK or ERR_FAILED

.. last line of group.rst template
.. last line of composition.rst template


