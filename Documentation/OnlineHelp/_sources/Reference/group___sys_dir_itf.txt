.. first line of composition.rst template

.. first line of group.rst template

.. _group___sys_dir_itf:

=========
SysDirItf
=========

Interface of SysDir. :ref:`More... <group___sys_dir_itf-details>`

Modules
-------

- :ref:`Directory file time <group___sys_dir_itf___directoryfiletime>`

- :ref:`Directory info entry <group___sys_dir_itf___directoryinfoentry>`

- :ref:`Directory info flags <group___sys_dir_itf___directoryinfoflags>`

- :ref:`Settings <group___sys_dir_itf___settings>`

Data Structures
---------------

- struct :ref:`tagsysdirclose_struct <structtagsysdirclose__struct>`

- struct :ref:`tagsysdircopy_struct <structtagsysdircopy__struct>`

- struct :ref:`tagsysdircreate_struct <structtagsysdircreate__struct>`

- struct :ref:`tagsysdircreate2_struct <structtagsysdircreate2__struct>`

- struct :ref:`tagsysdirdelete_struct <structtagsysdirdelete__struct>`

- struct :ref:`tagsysdirdelete2_struct <structtagsysdirdelete2__struct>`

- struct :ref:`tagsysdirgetcurrent_struct <structtagsysdirgetcurrent__struct>`

- struct :ref:`tagsysdiropen_struct <structtagsysdiropen__struct>`

- struct :ref:`tagsysdirread_struct <structtagsysdirread__struct>`

- struct :ref:`tagsysdirrename_struct <structtagsysdirrename__struct>`

- struct :ref:`tagsysdirsetcurrent_struct <structtagsysdirsetcurrent__struct>`

- struct :ref:`ISysDir_C <struct_i_sys_dir___c>`

Macros
------

- #define :ref:`ITF_SysDir <group___sys_dir_itf_1ga4f3489368a1bd402fe474fd7e3bd0f45>`

- #define :ref:`EXTITF_SysDir <group___sys_dir_itf_1ga72d4400792d9889450050e8242121c95>`

Typedefs
--------

- typedef struct :ref:`tagsysdirclose_struct <structtagsysdirclose__struct>` :ref:`sysdirclose_struct <group___sys_dir_itf_1gaabebaae09eb8d5e04436d571f4edf13b>`

- typedef struct :ref:`tagsysdircopy_struct <structtagsysdircopy__struct>` :ref:`sysdircopy_struct <group___sys_dir_itf_1ga7774c01f4c23e8b593401befb61e1941>`

- typedef struct :ref:`tagsysdircreate_struct <structtagsysdircreate__struct>` :ref:`sysdircreate_struct <group___sys_dir_itf_1ga35be8988026158db9fe6c600863161de>`

- typedef struct :ref:`tagsysdircreate2_struct <structtagsysdircreate2__struct>` :ref:`sysdircreate2_struct <group___sys_dir_itf_1ga67c9ff03fb1e5d8239ce2970c3db0bb5>`

- typedef struct :ref:`tagsysdirdelete_struct <structtagsysdirdelete__struct>` :ref:`sysdirdelete_struct <group___sys_dir_itf_1gac86b4be28e214b8547da0bd7ac78fae9>`

- typedef struct :ref:`tagsysdirdelete2_struct <structtagsysdirdelete2__struct>` :ref:`sysdirdelete2_struct <group___sys_dir_itf_1ga4c31d0b9b8ce3c95ce882d2ac2851148>`

- typedef struct :ref:`tagsysdirgetcurrent_struct <structtagsysdirgetcurrent__struct>` :ref:`sysdirgetcurrent_struct <group___sys_dir_itf_1gaa3fe72a76b64346053ce1f163ea4415a>`

- typedef struct :ref:`tagsysdiropen_struct <structtagsysdiropen__struct>` :ref:`sysdiropen_struct <group___sys_dir_itf_1gaa18ea62ad73f2586a371d70cfa35f31c>`

- typedef struct :ref:`tagsysdirread_struct <structtagsysdirread__struct>` :ref:`sysdirread_struct <group___sys_dir_itf_1gade4348a61b37e0c51dde752744f8172c>`

- typedef struct :ref:`tagsysdirrename_struct <structtagsysdirrename__struct>` :ref:`sysdirrename_struct <group___sys_dir_itf_1ga361ba1ce5f2c274d10a41f91f9acf794>`

- typedef struct :ref:`tagsysdirsetcurrent_struct <structtagsysdirsetcurrent__struct>` :ref:`sysdirsetcurrent_struct <group___sys_dir_itf_1gaf227ad8e4b2c86d973084faacf5054ae>`

- typedef :ref:`ISysDir_C <struct_i_sys_dir___c>` :ref:`ISysDir <group___sys_dir_itf_1ga6f7cbb2c4a5cd36bd405cef89ac887de>`

Functions
---------

- void :ref:`sysdirclose <group___sys_dir_itf_1gaae092283142eb314da9b6c8f78607419>` (:ref:`sysdirclose_struct <group___sys_dir_itf_1gaabebaae09eb8d5e04436d571f4edf13b>` * p)

- void :ref:`sysdircopy <group___sys_dir_itf_1gaef492051e21dd693289c1d50b9e56dfe>` (:ref:`sysdircopy_struct <group___sys_dir_itf_1ga7774c01f4c23e8b593401befb61e1941>` * p)

- void :ref:`sysdircreate <group___sys_dir_itf_1ga2acb5522ee2bdb6550f89a46e1883785>` (:ref:`sysdircreate_struct <group___sys_dir_itf_1ga35be8988026158db9fe6c600863161de>` * p)

- void :ref:`sysdircreate2 <group___sys_dir_itf_1gad7ca635af6d92d433cce6efa9603502e>` (:ref:`sysdircreate2_struct <group___sys_dir_itf_1ga67c9ff03fb1e5d8239ce2970c3db0bb5>` * p)

- void :ref:`sysdirdelete <group___sys_dir_itf_1ga14f00b62067b67038088a9f7746f3445>` (:ref:`sysdirdelete_struct <group___sys_dir_itf_1gac86b4be28e214b8547da0bd7ac78fae9>` * p)

- void :ref:`sysdirdelete2 <group___sys_dir_itf_1gab262293a919c7759937e3d02f7725e9d>` (:ref:`sysdirdelete2_struct <group___sys_dir_itf_1ga4c31d0b9b8ce3c95ce882d2ac2851148>` * p)

- void :ref:`sysdirgetcurrent <group___sys_dir_itf_1gad3c182bb5cf51ff1de2d43161abfeaf5>` (:ref:`sysdirgetcurrent_struct <group___sys_dir_itf_1gaa3fe72a76b64346053ce1f163ea4415a>` * p)

- void :ref:`sysdiropen <group___sys_dir_itf_1gacdaf4ed63ab1742ef2711befcfbac121>` (:ref:`sysdiropen_struct <group___sys_dir_itf_1gaa18ea62ad73f2586a371d70cfa35f31c>` * p)

- void :ref:`sysdirread <group___sys_dir_itf_1ga3a5c1836f58d0eaf3977912688ec7426>` (:ref:`sysdirread_struct <group___sys_dir_itf_1gade4348a61b37e0c51dde752744f8172c>` * p)

- void :ref:`sysdirrename <group___sys_dir_itf_1ga01443d0a0bd15a354a421b01dc649d47>` (:ref:`sysdirrename_struct <group___sys_dir_itf_1ga361ba1ce5f2c274d10a41f91f9acf794>` * p)

- void :ref:`sysdirsetcurrent <group___sys_dir_itf_1ga42bd9510889e435f2dcfbe2c1d94aa31>` (:ref:`sysdirsetcurrent_struct <group___sys_dir_itf_1gaf227ad8e4b2c86d973084faacf5054ae>` * p)

- RTS_RESULT :ref:`SysDirOSInit <group___sys_dir_itf_1ga56327e69d3db146f042d5d7026363961>` (INIT_STRUCT * pInit)

- RTS_RESULT :ref:`SysDirOSHookFunction <group___sys_dir_itf_1ga4818ccaf3e2f97fce5271b7fb399f30e>` (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)

- RTS_HANDLE :ref:`SysDirOpen <group___sys_dir_itf_1ga3ab07b5c1fd2888b4aed1a66b169fa73>` (char * pszDir, char * pszDirEntry, int iMaxDirEntry, :ref:`DirInfo <struct_dir_info>` * pDirInfo, RTS_RESULT * pResult)

- RTS_HANDLE :ref:`SysDirOpen_ <group___sys_dir_itf_1ga52f8e5fc8d27d8c7f7f890cd0bc7c840>` (char * pszDir, char * pszDirEntry, int iMaxDirEntry, :ref:`DirInfo <struct_dir_info>` * pDirInfo, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysDirClose <group___sys_dir_itf_1ga9ffd65d2557513315a3f9879ae8a029d>` (RTS_HANDLE hDir)

- RTS_RESULT :ref:`SysDirClose_ <group___sys_dir_itf_1ga1710760b5ae70ab40988298e5387de78>` (RTS_HANDLE hDir)

- RTS_RESULT :ref:`SysDirRead <group___sys_dir_itf_1gab22153a1fa4e3218a46c00becd80bccb>` (RTS_HANDLE hDir, char * pszDirEntry, int iMaxDirEntry, :ref:`DirInfo <struct_dir_info>` * pDirInfo)

- RTS_RESULT :ref:`SysDirRead_ <group___sys_dir_itf_1ga957873529ed52516626c9551c3fc1b95>` (RTS_HANDLE hDir, char * pszDirEntry, int iMaxDirEntry, :ref:`DirInfo <struct_dir_info>` * pDirInfo)

- RTS_RESULT :ref:`SysDirCreate <group___sys_dir_itf_1ga382b85aba7a92647808e18532b38287c>` (char * pszDir)

- RTS_RESULT :ref:`SysDirCreate2 <group___sys_dir_itf_1gaa6cfe429e3b16f4d6fa6c904317595dc>` (char * pszDir, RTS_BOOL bRecursive)

- RTS_RESULT :ref:`SysDirCreate_ <group___sys_dir_itf_1ga94530ed643a1ccd04f1a7a560f420c94>` (char * pszDir)

- RTS_RESULT :ref:`SysDirDelete <group___sys_dir_itf_1gab57b1051e92ae0659543a876461fde22>` (char * pszDir)

- RTS_RESULT :ref:`SysDirDelete2 <group___sys_dir_itf_1gad05203de99260e76da1659e386c795ef>` (char * pszDir, RTS_BOOL bRecursive, RTS_BOOL bKeepDir)

- RTS_RESULT :ref:`SysDirDelete_ <group___sys_dir_itf_1gacc03df6ff7ef0224d9d8f695a35ae18f>` (char * pszDir)

- RTS_RESULT :ref:`SysDirRename <group___sys_dir_itf_1gaa595cbb76c27ab321a114e63d80a48e1>` (char * pszOldDir, char * pszNewDir)

- RTS_RESULT :ref:`SysDirRename_ <group___sys_dir_itf_1ga99606af2288a25ebae8387d07920e283>` (char * pszOldDir, char * pszNewDir)

- RTS_RESULT :ref:`SysDirGetCurrent <group___sys_dir_itf_1ga5d0e2bbbb89d1c2ded2b88eeed24042e>` (char * pszDir, int iMaxDirLen)

- RTS_RESULT :ref:`SysDirGetCurrent_ <group___sys_dir_itf_1gac9bceac56abc6fc67ae11265ad14474d>` (char * pszDir, int iMaxDirLen)

- RTS_RESULT :ref:`SysDirSetCurrent <group___sys_dir_itf_1gac269cce0192c9269c10cc2b56a77eee1>` (char * pszDir)

- RTS_RESULT :ref:`SysDirSetCurrent_ <group___sys_dir_itf_1ga3b74804294898ea334a4f8f559aeef9e>` (char * pszDir)

- RTS_RESULT :ref:`SysDirCopy <group___sys_dir_itf_1ga49ab0a528d1f9382b3729e2725284a36>` (char * pszDestDir, char * pszSourceDir, RTS_BOOL bRecursive, RTS_BOOL bOverwrite)

.. _group___sys_dir_itf-details:

Detailed Description
--------------------

Interface of SysDir.

The SysDir interface is projected to handle all system dependant directory operations. If there is no filesystem on the target, the interface functions ERR_NOTIMPLEMENTED.

**Copyright:**

Copyright (c) 2017-2018 CODESYS GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Macro Definition Documentation
------------------------------
.. _group___sys_dir_itf_1ga4f3489368a1bd402fe474fd7e3bd0f45:

#define ITF_SysDir
^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1ga72d4400792d9889450050e8242121c95:

#define EXTITF_SysDir
^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___sys_dir_itf_1gaabebaae09eb8d5e04436d571f4edf13b:

typedef struct tagsysdirclose_struct  sysdirclose_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION BEGIN

Close an open directory :return: Returns the runtime system error code (see CmpErrors_Itf.library)

.. _group___sys_dir_itf_1ga7774c01f4c23e8b593401befb61e1941:

typedef struct tagsysdircopy_struct  sysdircopy_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Copies the contents of szSourceDir to szDestDir. Nonexisting destination path will be created. Depending of the parameters, all subdirectories and its content will be copied too, and existing files will be overwritten. NOTE: Empty direcories will be copied if xRecursive is TRUE. :return: Returns the runtime system error code (see CmpErrors_Itf.library)

.. _group___sys_dir_itf_1ga35be8988026158db9fe6c600863161de:

typedef struct tagsysdircreate_struct  sysdircreate_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Creates a new directory with the specified name :return: Returns the runtime system error code (see CmpErrors_Itf.library)

.. _group___sys_dir_itf_1ga67c9ff03fb1e5d8239ce2970c3db0bb5:

typedef struct tagsysdircreate2_struct  sysdircreate2_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Creates a new directory with the specified name. If xRecursive is set, a full path is created, i.e. all missing parent directories are created too. :return: Returns the runtime system error code (see CmpErrors_Itf.library)

.. _group___sys_dir_itf_1gac86b4be28e214b8547da0bd7ac78fae9:

typedef struct tagsysdirdelete_struct  sysdirdelete_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Deletes a directory with the specified name :return: Returns the runtime system error code (see CmpErrors_Itf.library)

.. _group___sys_dir_itf_1ga4c31d0b9b8ce3c95ce882d2ac2851148:

typedef struct tagsysdirdelete2_struct  sysdirdelete2_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Deletes a directory with the specified name

If xRecursive is set, a whole folder tree can be deleted, i.e. all subfolders and files are deleted. If xRecursive and xKeepDir are set, the folder is kept but its contents is deleted. :return: Returns the runtime system error code (see CmpErrors_Itf.library)

.. _group___sys_dir_itf_1gaa3fe72a76b64346053ce1f163ea4415a:

typedef struct tagsysdirgetcurrent_struct  sysdirgetcurrent_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get current working directory for IEC file access :return: Returns the runtime system error code (see CmpErrors_Itf.library)

.. _group___sys_dir_itf_1gaa18ea62ad73f2586a371d70cfa35f31c:

typedef struct tagsysdiropen_struct  sysdiropen_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Opens a specified directory and returns a handle and the first directory entry :return: Returns the runtime system error code (see CmpErrors.library)

.. _group___sys_dir_itf_1gade4348a61b37e0c51dde752744f8172c:

typedef struct tagsysdirread_struct  sysdirread_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Read next directory entry. Writes the entry in pszDirEntry. :return: Returns the runtime system error code (see CmpErrors.library)

+ ERR_OK: Entry could be read + ERR_END_OF_OBJECT: If end of directory list was reached + ERR_PARAMETER: If one of the parameters is invalid + ERR_BUFFERSIZE: If iMaxDirEntry is too short to get the complete directory entry string

.. note:: Typically after error ``ERR_BUFFERSIZE``, the dir-handle is set to the next entry, so this entry will be missed!

.. _group___sys_dir_itf_1ga361ba1ce5f2c274d10a41f91f9acf794:

typedef struct tagsysdirrename_struct  sysdirrename_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Rename directory :return: Returns the runtime system error code (see CmpErrors.library)

.. _group___sys_dir_itf_1gaf227ad8e4b2c86d973084faacf5054ae:

typedef struct tagsysdirsetcurrent_struct  sysdirsetcurrent_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set current working directory on the target. In this directory all following file function are operated. This setting applies to file access from IEC only. An empty string resets the working directory to its default. This function should not be used in parallel to any other file operation from IEC. :return: Returns the runtime system error code (see CmpErrors.library)

.. _group___sys_dir_itf_1ga6f7cbb2c4a5cd36bd405cef89ac887de:

typedef ISysDir_C ISysDir
^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___sys_dir_itf_1gaae092283142eb314da9b6c8f78607419:

void sysdirclose (sysdirclose_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1gaef492051e21dd693289c1d50b9e56dfe:

void sysdircopy (sysdircopy_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1ga2acb5522ee2bdb6550f89a46e1883785:

void sysdircreate (sysdircreate_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1gad7ca635af6d92d433cce6efa9603502e:

void sysdircreate2 (sysdircreate2_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1ga14f00b62067b67038088a9f7746f3445:

void sysdirdelete (sysdirdelete_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1gab262293a919c7759937e3d02f7725e9d:

void sysdirdelete2 (sysdirdelete2_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1gad3c182bb5cf51ff1de2d43161abfeaf5:

void sysdirgetcurrent (sysdirgetcurrent_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1gacdaf4ed63ab1742ef2711befcfbac121:

void sysdiropen (sysdiropen_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1ga3a5c1836f58d0eaf3977912688ec7426:

void sysdirread (sysdirread_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1ga01443d0a0bd15a354a421b01dc649d47:

void sysdirrename (sysdirrename_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1ga42bd9510889e435f2dcfbe2c1d94aa31:

void sysdirsetcurrent (sysdirsetcurrent_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1ga56327e69d3db146f042d5d7026363961:

RTS_RESULT SysDirOSInit (INIT_STRUCT *pInit)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION END

.. _group___sys_dir_itf_1ga4818ccaf3e2f97fce5271b7fb399f30e:

RTS_RESULT SysDirOSHookFunction (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_dir_itf_1ga3ab07b5c1fd2888b4aed1a66b169fa73:

RTS_HANDLE SysDirOpen (char *pszDir, char *pszDirEntry, int iMaxDirEntry, DirInfo *pDirInfo, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Opens a specified directory and returns a handle and the first directory entry

**Parameters**

+---------+--------------+-------------------------------------------------------------------------------------------------------------+
| [in]    | pszDir       | Name of directory. IMPLEMENTATION NOTE: Empty string ("") is the request for the current working directory. |
+---------+--------------+-------------------------------------------------------------------------------------------------------------+
| [out]   | pszDirEntry  | Optional: Directory entry as string. Can be NULL.                                                           |
+---------+--------------+-------------------------------------------------------------------------------------------------------------+
| [in]    | iMaxDirEntry | Optional: Max number of bytes to write in pszDirEntry                                                       |
+---------+--------------+-------------------------------------------------------------------------------------------------------------+
| [out]   | pDirInfo     | Directory information                                                                                       |
+---------+--------------+-------------------------------------------------------------------------------------------------------------+
| [out]   | pResult      | Pointer to error code                                                                                       |
+---------+--------------+-------------------------------------------------------------------------------------------------------------+

**Return values**

+----------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ERR_OK               | Directory can be opened and a directory info can be retrieved                                                                                                                                        |
+----------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ERR_FAILED           | Directory cannot be opened. An invalid handle is returned.                                                                                                                                           |
+----------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ERR_END_OF_OBJECT    | Directory can be opened, but _no_ pszDirEntry can be retrieved (direcory is empty or end reached)! NOTE: A valid handle is returned with this error and so the directory must be closed after usage! |
+----------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ERR_OPERATION_DENIED | Directory cannot be opened because access was denied. An invalid handle is returned.                                                                                                                 |
+----------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ERR_PARAMETER        | One of the parameters is invalid. An invalid handle is returned.                                                                                                                                     |
+----------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

RTS_HANDLE on directory

.. _group___sys_dir_itf_1ga52f8e5fc8d27d8c7f7f890cd0bc7c840:

RTS_HANDLE SysDirOpen_ (char *pszDir, char *pszDirEntry, int iMaxDirEntry, DirInfo *pDirInfo, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Opens a specified directory and returns a handle and the first directory entry. No standard path will be added. IMPLEMENTATION NOTE: This interface function is implemented operating system dependant! Optimizations can be done here.

**Parameters**

+---------+--------------+-------------------------------------------------------------------------------------------------------------+
| [in]    | pszDir       | Name of directory. IMPLEMENTATION NOTE: Empty string ("") is the request for the current working directory. |
+---------+--------------+-------------------------------------------------------------------------------------------------------------+
| [out]   | pszDirEntry  | Optional: Directory entry as string. Can be NULL.                                                           |
+---------+--------------+-------------------------------------------------------------------------------------------------------------+
| [in]    | iMaxDirEntry | Optional: Max number of bytes to write in pszDirEntry                                                       |
+---------+--------------+-------------------------------------------------------------------------------------------------------------+
| [out]   | pDirInfo     | Directory information                                                                                       |
+---------+--------------+-------------------------------------------------------------------------------------------------------------+
| [out]   | pResult      | Pointer to error code                                                                                       |
+---------+--------------+-------------------------------------------------------------------------------------------------------------+

**Return values**

+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ERR_OK            | Directory can be opened and a directory info can be retrieved                                                                                                                                        |
+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ERR_FAILED        | Directory cannot be opened. An invalid handle is returned.                                                                                                                                           |
+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ERR_END_OF_OBJECT | Directory can be opened, but _no_ pszDirEntry can be retrieved (direcory is empty or end reached)! NOTE: A valid handle is returned with this error and so the directory must be closed after usage! |
+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ERR_PARAMETER     | One of the parameters is invalid. An invalid handle is returned.                                                                                                                                     |
+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

RTS_HANDLE on directory

.. _group___sys_dir_itf_1ga9ffd65d2557513315a3f9879ae8a029d:

RTS_RESULT SysDirClose (RTS_HANDLE hDir)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Close an open directory

**Parameters**

+---------+------+----------------------------------------------------------------+
| [in]    | hDir | Handle to directory opened with SysDirOpen or with SysDirOpen_ |
+---------+------+----------------------------------------------------------------+

**Returns:**

error code

.. _group___sys_dir_itf_1ga1710760b5ae70ab40988298e5387de78:

RTS_RESULT SysDirClose_ (RTS_HANDLE hDir)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Close an open directory. IMPLEMENTATION NOTE: This interface function is implemented operating system dependant! Optimizations can be done here.

**Parameters**

+---------+------+--------------------------------------------+
| [in]    | hDir | Handle to directory opened with SysDirOpen |
+---------+------+--------------------------------------------+

**Returns:**

error code

.. _group___sys_dir_itf_1gab22153a1fa4e3218a46c00becd80bccb:

RTS_RESULT SysDirRead (RTS_HANDLE hDir, char *pszDirEntry, int iMaxDirEntry, DirInfo *pDirInfo)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Read next directory entry. Writes the entry in pszDirEntry.

**Parameters**

+---------+--------------+------------------------------------------------------------------------------------------------------------------------+
| [in]    | hDir         | Handle to directory opened with SysDirOpen                                                                             |
+---------+--------------+------------------------------------------------------------------------------------------------------------------------+
| [out]   | pszDirEntry  | Directory entry as string                                                                                              |
+---------+--------------+------------------------------------------------------------------------------------------------------------------------+
| [out]   | iMaxDirEntry | Max number of bytes to write in pszDirEntry                                                                            |
+---------+--------------+------------------------------------------------------------------------------------------------------------------------+
| [out]   | pDirInfo     | Pointer to directory information. IMPLEMENTATION NOTE: Can be NULL (so only directory name is provided in pszDirEntry) |
+---------+--------------+------------------------------------------------------------------------------------------------------------------------+

**Returns:**

- ERR_OK: The directory string contains the next directory entry and is referenced by "pszDirEntry", "pDirInfo" references the related directory information string.

- ERR_END_OF_OBJECT: If end of directory list was reached, the "pszDirEntry" referenced buffer stays empty.

- ERR_PARAMETER: If one of the parameters is invalid, the function returns without updating the directory iterator.

- ERR_BUFFERSIZE: If iMaxDirEntry is too short to get the complete directory entry string but not null. ATTENTION: Typically if this error occurs, the "pszDirEntry" contains the string to the incomplete next entry, the iterator is updated!

.. _group___sys_dir_itf_1ga957873529ed52516626c9551c3fc1b95:

RTS_RESULT SysDirRead_ (RTS_HANDLE hDir, char *pszDirEntry, int iMaxDirEntry, DirInfo *pDirInfo)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Read next directory entry. Writes the entry in pszDirEntry. IMPLEMENTATION NOTE: This interface function is implemented operating system dependant! Optimizations can be done here.

**Parameters**

+---------+--------------+------------------------------------------------------------------------------------------------------------------------+
| [in]    | hDir         | Handle to directory opened with SysDirOpen                                                                             |
+---------+--------------+------------------------------------------------------------------------------------------------------------------------+
| [out]   | pszDirEntry  | Directory entry as string                                                                                              |
+---------+--------------+------------------------------------------------------------------------------------------------------------------------+
| [out]   | iMaxDirEntry | Max number of bytes to write in pszDirEntry                                                                            |
+---------+--------------+------------------------------------------------------------------------------------------------------------------------+
| [out]   | pDirInfo     | Pointer to directory information. IMPLEMENTATION NOTE: Can be NULL (so only directory name is provided in pszDirEntry) |
+---------+--------------+------------------------------------------------------------------------------------------------------------------------+

**Returns:**

- ERR_OK: The directory string contains the next directory entry and is referenced by "pszDirEntry", "pDirInfo" references the related directory information string.

- ERR_END_OF_OBJECT: If end of directory list was reached, the "pszDirEntry" referenced buffer stays empty.

- ERR_PARAMETER: If one of the parameters is invalid, the function returns without updating the directory iterator.

- ERR_BUFFERSIZE: If iMaxDirEntry is too short to get the complete directory entry string but not null. ATTENTION: Typically if this error occurs, the "pszDirEntry" contains the string to the incomplete next entry, the iterator is updated!

.. _group___sys_dir_itf_1ga382b85aba7a92647808e18532b38287c:

RTS_RESULT SysDirCreate (char *pszDir)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Creates a new directory with the specified name

**Parameters**

+---------+--------+-------------------+
| [in]    | pszDir | Name of directory |
+---------+--------+-------------------+

**Returns:**

error code

.. _group___sys_dir_itf_1gaa6cfe429e3b16f4d6fa6c904317595dc:

RTS_RESULT SysDirCreate2 (char *pszDir, RTS_BOOL bRecursive)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Creates a new directory with the specified name. If bRecursive is set, a full path is created, i.e. all missing parent directories are created too.

**Parameters**

+---------+------------+--------------------+
| [in]    | pszDir     | Name of directory  |
+---------+------------+--------------------+
| [in]    | bRecursive | Create a full path |
+---------+------------+--------------------+

**Returns:**

error code

.. _group___sys_dir_itf_1ga94530ed643a1ccd04f1a7a560f420c94:

RTS_RESULT SysDirCreate_ (char *pszDir)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Creates a new directory with the specified name. No standard path will be added. IMPLEMENTATION NOTE: This interface function is implemented operating system dependant! Optimizations can be done here.

**Parameters**

+---------+--------+-------------------+
| [in]    | pszDir | Name of directory |
+---------+--------+-------------------+

**Returns:**

error code

**Return values**

+---------------+--------------------------------------------------------------------------------+
| ERR_OK        | Directory was created successfully                                             |
+---------------+--------------------------------------------------------------------------------+
| ERR_FAILED    | Directory couldn't be created for various reasons other than the following two |
+---------------+--------------------------------------------------------------------------------+
| ERR_NO_OBJECT | The path to the directory to be created does not exist                         |
+---------------+--------------------------------------------------------------------------------+
| ERR_DUPLICATE | The directory already exists                                                   |
+---------------+--------------------------------------------------------------------------------+

.. _group___sys_dir_itf_1gab57b1051e92ae0659543a876461fde22:

RTS_RESULT SysDirDelete (char *pszDir)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Deletes a directory with the specified name

**Parameters**

+---------+--------+-------------------+
| [in]    | pszDir | Name of directory |
+---------+--------+-------------------+

**Returns:**

error code

.. _group___sys_dir_itf_1gad05203de99260e76da1659e386c795ef:

RTS_RESULT SysDirDelete2 (char *pszDir, RTS_BOOL bRecursive, RTS_BOOL bKeepDir)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Deletes a directory with the specified name If bRecursive is set, a whole folder tree can be deleted, i.e. all subfolders and files are deleted. If bRecursive and bKeepDir are set, the folder is kept but its contents is deleted.

**Parameters**

+---------+------------+----------------------------+
| [in]    | pszDir     | Name of directory          |
+---------+------------+----------------------------+
| [in]    | bRecursive | Delete a whole folder tree |
+---------+------------+----------------------------+
| [in]    | bKeepDir   | Keep the starting folder   |
+---------+------------+----------------------------+

**Returns:**

error code

.. _group___sys_dir_itf_1gacc03df6ff7ef0224d9d8f695a35ae18f:

RTS_RESULT SysDirDelete_ (char *pszDir)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Deletes a directory with the specified name. No standard path will be added. IMPLEMENTATION NOTE: This interface function is implemented operating system dependant! Optimizations can be done here.

**Parameters**

+---------+--------+-------------------+
| [in]    | pszDir | Name of directory |
+---------+--------+-------------------+

**Returns:**

error code

.. _group___sys_dir_itf_1gaa595cbb76c27ab321a114e63d80a48e1:

RTS_RESULT SysDirRename (char *pszOldDir, char *pszNewDir)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Rename directory

**Parameters**

+---------+-----------+----------------------------+
| [in]    | pszOldDir | Name of existing directory |
+---------+-----------+----------------------------+
| [in]    | pszNewDir | New name                   |
+---------+-----------+----------------------------+

**Returns:**

error code

.. _group___sys_dir_itf_1ga99606af2288a25ebae8387d07920e283:

RTS_RESULT SysDirRename_ (char *pszOldDir, char *pszNewDir)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Rename directory. No standard path will be added. IMPLEMENTATION NOTE: This interface function is implemented operating system dependant! Optimizations can be done here.

**Parameters**

+---------+-----------+----------------------------+
| [in]    | pszOldDir | Name of existing directory |
+---------+-----------+----------------------------+
| [in]    | pszNewDir | New name                   |
+---------+-----------+----------------------------+

**Returns:**

error code

.. _group___sys_dir_itf_1ga5d0e2bbbb89d1c2ded2b88eeed24042e:

RTS_RESULT SysDirGetCurrent (char *pszDir, int iMaxDirLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get current working directory. If no FilePath is specified pzDir is empty (default). To obtain the working directory of the underlying file system use SysDirGetCurrent_.

**Parameters**

+---------+------------+--------------------------------+
| [out]   | pszDir     | Name of current directory      |
+---------+------------+--------------------------------+
| [in]    | iMaxDirLen | Max lenght of directory buffer |
+---------+------------+--------------------------------+

**Returns:**

error code

.. _group___sys_dir_itf_1gac9bceac56abc6fc67ae11265ad14474d:

RTS_RESULT SysDirGetCurrent_ (char *pszDir, int iMaxDirLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get current working directory of the underlying file system. No standard path will be added. IMPLEMENTATION NOTE: This interface function is implemented operating system dependant!

**Parameters**

+---------+------------+--------------------------------+
| [out]   | pszDir     | Name of current directory      |
+---------+------------+--------------------------------+
| [in]    | iMaxDirLen | Max lenght of directory buffer |
+---------+------------+--------------------------------+

**Returns:**

error code

.. _group___sys_dir_itf_1gac269cce0192c9269c10cc2b56a77eee1:

RTS_RESULT SysDirSetCurrent (char *pszDir)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Former set current working directory. This function has been deprecated. It returns just ERR_NOTIMPLEMENTED. To really change the working directory of the whole runtime system use SysDirSetCurrent_.

**Parameters**

+---------+--------+----------+
| [in]    | pszDir | not used |
+---------+--------+----------+

**Returns:**

ERR_NOTIMPLEMENTED

.. _group___sys_dir_itf_1ga3b74804294898ea334a4f8f559aeef9e:

RTS_RESULT SysDirSetCurrent_ (char *pszDir)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set current working directory of the underlying file system of the whole runtime system. No standard path will be added. It is not recommended to use this function! ATTENTION: Just in case it is strongly recommended to save the path with SysDirGetCurrent_ prior to this call and restore the path as soon as possible. Otherwise the whole runtime system may not work any more! ATTENTION: Reset Origin does not affect this setting. The runtime system has to be restarted! IMPLEMENTATION NOTE: This interface function is implemented operating system dependant!

**Parameters**

+---------+--------+---------------------------+
| [in]    | pszDir | Name of current directory |
+---------+--------+---------------------------+

**Returns:**

error code

.. _group___sys_dir_itf_1ga49ab0a528d1f9382b3729e2725284a36:

RTS_RESULT SysDirCopy (char *pszDestDir, char *pszSourceDir, RTS_BOOL bRecursive, RTS_BOOL bOverwrite)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Copies the contents of pszSourceDir to pszDestDir. Depending of the parameters, all subdirectories and its content will be copied too, and existing files will be overwritten. NOTE: Empty direcories will be copied if bRecursive is TRUE.

**Parameters**

+---------+--------------+-------------------------------------------------------------------------------------------+
| [in]    | pszDestDir   | Name of destination directory                                                             |
+---------+--------------+-------------------------------------------------------------------------------------------+
| [in]    | pszSourceDir | Name of source directory                                                                  |
+---------+--------------+-------------------------------------------------------------------------------------------+
| [in]    | bRecursive   | TRUE: all subdirectories and their contents are copied, FALSE: subdirectories are omitted |
+---------+--------------+-------------------------------------------------------------------------------------------+
| [in]    | bOverwrite   | TRUE: existing files are overwritten, FALSE: existing files are left untouched            |
+---------+--------------+-------------------------------------------------------------------------------------------+

**Returns:**

error code

**Return values**

+----------------------+-------------------------------------------------------------------------------------------+
| ERR_OK               | The contents of the source direcory was successfully copied to the destination direcory   |
+----------------------+-------------------------------------------------------------------------------------------+
| ERR_NO_OBJECT        | There were no files to copy, the destination directory is nevertheless created if need be |
+----------------------+-------------------------------------------------------------------------------------------+
| ERR_OPERATION_DENIED | Source or destination direcory is not accessible                                          |
+----------------------+-------------------------------------------------------------------------------------------+
| ERR_FAILED           | System error                                                                              |
+----------------------+-------------------------------------------------------------------------------------------+

.. last line of group.rst template
.. last line of composition.rst template


