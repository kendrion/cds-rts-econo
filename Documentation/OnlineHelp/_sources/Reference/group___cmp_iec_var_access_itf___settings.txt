.. first line of composition.rst template

.. first line of group.rst template

.. _group___cmp_iec_var_access_itf___settings:

========
Settings
========

 :ref:`More... <group___cmp_iec_var_access_itf___settings-details>`

Macros
------

- #define :ref:`IECVARACC_INT_CONSISTENCY_MONITORING <group___cmp_iec_var_access_itf___settings_1ga43d6ee960013a56a3aa95702b5fbbdba>` "ConsistencyMonitoring.Enable"

- #define :ref:`IECVARACC_INT_CONSISTENCY_MONITORING_DEFAULT <group___cmp_iec_var_access_itf___settings_1ga76afc9edb1b52f8c82aab67eb3e7157a>` 0

- #define :ref:`IECVARACC_INT_CONSISTENCY_MONITORING_TIMEOUT <group___cmp_iec_var_access_itf___settings_1gaf67f593780d2585a6652a6fa3de2aaba>` "ConsistencyMonitoring.Timeout"

- #define :ref:`IECVARACC_INT_CONSISTENCY_MONITORING_TIMEOUT_DEFAULT <group___cmp_iec_var_access_itf___settings_1gaa8659fb81902f4fba32b88545256a7d5>` 1000

.. _group___cmp_iec_var_access_itf___settings-details:

Detailed Description
--------------------





Macro Definition Documentation
------------------------------
.. _group___cmp_iec_var_access_itf___settings_1ga43d6ee960013a56a3aa95702b5fbbdba:

#define IECVARACC_INT_CONSISTENCY_MONITORING "ConsistencyMonitoring.Enable"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Obsolete: Should not be used anymore! Consistency is now configured by the client using the VLF_varlist flags during definition of the variable list! Setting to enable/disable task consistent monitoring of all variables. 1: All variables should be monitored task consistent 0: No task consistency needed If enabled the communication task tries to read the variables in the background, which fit into one communication buffer. If it is not possible to read all variables without interruption of the IEC tasks during the consistancy timeout the read request is denied. For requests/variable lists exceeding the communication buffer there is no overall consistency ensured!

.. _group___cmp_iec_var_access_itf___settings_1ga76afc9edb1b52f8c82aab67eb3e7157a:

#define IECVARACC_INT_CONSISTENCY_MONITORING_DEFAULT 0
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_iec_var_access_itf___settings_1gaf67f593780d2585a6652a6fa3de2aaba:

#define IECVARACC_INT_CONSISTENCY_MONITORING_TIMEOUT "ConsistencyMonitoring.Timeout"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Setting to configure the timeout in ms for consistent monitoring. The timeout is used for all kinds of consistent monitoring using CmpIecVarAccess: #1. Obsolete global setting "ConsistencyMonitoring.Enable" (see above) #2. Client setting VLF_CONSISTENT_BACKGROUND_READ #3. Client setting VLF_CONSISTENT_SYNCHRONIZED_READ #4. Client setting VLF_CONSISTENT_SYNCHRONIZED_WRITE For #1 and #2 all the values are copied without synchronization of the IEC tasks by the low priority communication task. At the end of the loop there is an detection, if meanwhile an IEC task was scheduled. If that is true, the copy operation is started again from the beginning. The runtime system returns an error, if it was not possible to copy the values without an interruption by IEC tasks within the the "ConsistencyMonitoring.Timeout". For #3 and #4 the communication task waits for the "ConsistencyMonitoring.Timeout" to find a gap without a running IEC task. If no gap was found during this timeout, the runtime system returns an error. If a gap was found, the IEC tasks are blocked by a semaphore until copying the values is finished.

.. _group___cmp_iec_var_access_itf___settings_1gaa8659fb81902f4fba32b88545256a7d5:

#define IECVARACC_INT_CONSISTENCY_MONITORING_TIMEOUT_DEFAULT 1000
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. last line of group.rst template
.. last line of composition.rst template


