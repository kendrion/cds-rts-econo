.. first line of composition.rst template

:orphan:

.. first line of struct.rst template

.. _struct_f_b_font:

=======================
FBFont Struct Reference
=======================

| #include ":ref:`SysFramebufferItf.h <_sys_framebuffer_itf_8h>`"

Data Fields
-----------

- char * :ref:`stName <group___sys_framebuffer_itf_1ga870ef85e0ad4efc45c56a0968e5e02ed>`
- RTS_UI8 :ref:`ucSize <group___sys_framebuffer_itf_1ga82dbd508b55360d5e673ff04fb2e23b5>`
- RTS_UI8 :ref:`ucStyleFlags <group___sys_framebuffer_itf_1ga0554b96998fce2b11433d7b65a8e76b9>`
- RTS_UI8 * :ref:`pBitmap <group___sys_framebuffer_itf_1ga5098e464b04ecee81871a1c8b70e21d9>`
- :ref:`FBFontChar <group___sys_framebuffer_itf_1gaaced0112821007d563b0e816384929ff>` * :ref:`aChars <group___sys_framebuffer_itf_1ga37eb34320e24ec22f9f3b25cf7cc5ce5>`
- RTS_UI16 :ref:`usNumberOfChars <group___sys_framebuffer_itf_1gaf050b80a36336c69d4f85635fb444fcc>`
- :ref:`FBFontArea <struct_f_b_font_area>` * :ref:`aCharAreas <group___sys_framebuffer_itf_1ga11cb1f3d3cabbf2707a49688e10ee563>`
- RTS_UI16 :ref:`ucNumberOfCharAreas <group___sys_framebuffer_itf_1ga1f6d4bfa4dcd3094969c674bece65fce>`
- RTS_UI8 :ref:`ucRealHeight <group___sys_framebuffer_itf_1ga73a3e6448efb7a892addef549ee1d66e>`
- RTS_BOOL :ref:`dynamicallyLoaded <group___sys_framebuffer_itf_1ga067432de73e4ec7ee78ede6788a2c973>`
- char * :ref:`stFontToReplace <group___sys_framebuffer_itf_1ga0ef6d53c140e94cc730ad01f9d1a628f>`

Detailed Description
--------------------

Font; A font is basically a bit-pattern-bitmap containing all characters the font can display. Every character is described by a FBFontChar structure. A single FBFontChar index is being accessed by simply passing the caracter-code of a character (e.g. ASCII, ANSI, Unicode) to _FBDrawFontChar(). The code will be passed right through to aChars as index. Previously it will be checked against area boundaries within aCharAreas and decremented by an appropiate index offset if necessary. In this way one bitmap is allowed to contain multiple runs of character-codes. One might use this to load different subsets of the Unicode planes into one bitmap. Note that within such bitmap the characters alsways have to be ordered by their ascending character-codes.

Field Documentation
-------------------

.. _group___sys_framebuffer_itf_1ga870ef85e0ad4efc45c56a0968e5e02ed:

char* FBFont::stName
^^^^^^^^^^^^^^^^^^^^

.. _group___sys_framebuffer_itf_1ga82dbd508b55360d5e673ff04fb2e23b5:

RTS_UI8 FBFont::ucSize
^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_framebuffer_itf_1ga0554b96998fce2b11433d7b65a8e76b9:

RTS_UI8 FBFont::ucStyleFlags
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_framebuffer_itf_1ga5098e464b04ecee81871a1c8b70e21d9:

RTS_UI8* FBFont::pBitmap
^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_framebuffer_itf_1ga37eb34320e24ec22f9f3b25cf7cc5ce5:

FBFontChar* FBFont::aChars
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_framebuffer_itf_1gaf050b80a36336c69d4f85635fb444fcc:

RTS_UI16 FBFont::usNumberOfChars
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_framebuffer_itf_1ga11cb1f3d3cabbf2707a49688e10ee563:

FBFontArea* FBFont::aCharAreas
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_framebuffer_itf_1ga1f6d4bfa4dcd3094969c674bece65fce:

RTS_UI16 FBFont::ucNumberOfCharAreas
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_framebuffer_itf_1ga73a3e6448efb7a892addef549ee1d66e:

RTS_UI8 FBFont::ucRealHeight
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_framebuffer_itf_1ga067432de73e4ec7ee78ede6788a2c973:

RTS_BOOL FBFont::dynamicallyLoaded
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_framebuffer_itf_1ga0ef6d53c140e94cc730ad01f9d1a628f:

char* FBFont::stFontToReplace
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The documentation for this struct was generated from the following file:
------------------------------------------------------------------------

SysFramebufferItf.h

.. last line of struct.rst template
.. last line of composition.rst template


