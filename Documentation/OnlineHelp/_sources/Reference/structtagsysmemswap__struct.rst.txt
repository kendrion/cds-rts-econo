.. first line of composition.rst template

:orphan:

.. first line of struct.rst template

.. _structtagsysmemswap__struct:

=====================================
tagsysmemswap_struct Struct Reference
=====================================

| #include ":ref:`SysMemItf.h <_sys_mem_itf_8h>`"

Data Fields
-----------

- RTS_IEC_BYTE * :ref:`pbyBuffer <group___sys_mem_itf_1gac6c76fee4eb5303124ace8b32dcd6399>`
- RTS_IEC_UDINT :ref:`udiSize <group___sys_mem_itf_1ga6b926948b0911e5645b64531a249d795>`
- RTS_IEC_UDINT :ref:`udiCount <group___sys_mem_itf_1ga1f51cd369963897bde8504830c871848>`
- RTS_IEC_DINT :ref:`SysMemSwap <group___sys_mem_itf_1gaaf4565df59dbd6cf963555c44aecd038>`

Detailed Description
--------------------

Routine to swap memory into little endian. If little endian (Intel) byte-order is received and platform has big endian (Motorola) byte-order. On little endian byte-order platforms, routine does nothing RETURN: Number of bytes swapped: + -1 = failed (iSize too large) + 0 = no swapping necessary (little endian byte-order) + >0 = Number of bytes swapped (big endian byte-order)

Field Documentation
-------------------

.. _group___sys_mem_itf_1gac6c76fee4eb5303124ace8b32dcd6399:

RTS_IEC_BYTE* tagsysmemswap_struct::pbyBuffer
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mem_itf_1ga6b926948b0911e5645b64531a249d795:

RTS_IEC_UDINT tagsysmemswap_struct::udiSize
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mem_itf_1ga1f51cd369963897bde8504830c871848:

RTS_IEC_UDINT tagsysmemswap_struct::udiCount
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mem_itf_1gaaf4565df59dbd6cf963555c44aecd038:

RTS_IEC_DINT tagsysmemswap_struct::SysMemSwap
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The documentation for this struct was generated from the following file:
------------------------------------------------------------------------

SysMemItf.h

.. last line of struct.rst template
.. last line of composition.rst template


