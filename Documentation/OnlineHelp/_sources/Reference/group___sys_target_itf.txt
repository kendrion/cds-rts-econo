.. first line of composition.rst template

.. first line of group.rst template

.. _group___sys_target_itf:

============
SysTargetItf
============

Interface of SysTarget. :ref:`More... <group___sys_target_itf-details>`

Modules
-------

- :ref:`Compiler switch <group___sys_target_itf___compilerswitch>`

- :ref:`Device ID <group___sys_target_itf___device_i_d>`

- :ref:`Device Type <group___sys_target_itf___device_type>`

- :ref:`Device Types <group___sys_target_itf___device_types>`

- :ref:`DeviceID mask <group___sys_target_itf___device_i_dmask>`

- :ref:`Event parameter <group___sys_target_itf___eventparameter>`

- :ref:`Events <group___sys_target_itf___events>`

- :ref:`Max device name length <group___sys_target_itf___maxdevicenamelength>`

- :ref:`Max node name length <group___sys_target_itf___maxnodenamelength>`

- :ref:`Max serial number length <group___sys_target_itf___maxserialnumberlength>`

- :ref:`Max vendor name length <group___sys_target_itf___maxvendornamelength>`

- :ref:`Operating System ID <group___sys_target_itf___operating_system_i_d>`

- :ref:`Processor ID <group___sys_target_itf___processor_i_d>`

- :ref:`Settings <group___sys_target_itf___settings>`

- :ref:`SysTarget identification <group___sys_target_itf___sys_targetidentification>`

- :ref:`Target signature <group___sys_target_itf___targetsignature>`

- :ref:`Vendor ID <group___sys_target_itf___vendor_i_d>`

Data Structures
---------------

- struct :ref:`tagsystargetgetdevicename_struct <structtagsystargetgetdevicename__struct>`

- struct :ref:`tagsystargetgetdevicename2_struct <structtagsystargetgetdevicename2__struct>`

- struct :ref:`tagsystargetgetid_struct <structtagsystargetgetid__struct>`

- struct :ref:`tagsystargetgetid2_struct <structtagsystargetgetid2__struct>`

- struct :ref:`tagsystargetgetnodename_struct <structtagsystargetgetnodename__struct>`

- struct :ref:`tagsystargetgetnodename2_struct <structtagsystargetgetnodename2__struct>`

- struct :ref:`tagsystargetgetoperatingsystemid_struct <structtagsystargetgetoperatingsystemid__struct>`

- struct :ref:`tagsystargetgetprocessorid_struct <structtagsystargetgetprocessorid__struct>`

- struct :ref:`tagsystargetgetserialnumber_struct <structtagsystargetgetserialnumber__struct>`

- struct :ref:`tagsystargetgettype_struct <structtagsystargetgettype__struct>`

- struct :ref:`tagsystargetgettype2_struct <structtagsystargetgettype2__struct>`

- struct :ref:`tagsystargetgetvendorname_struct <structtagsystargetgetvendorname__struct>`

- struct :ref:`tagsystargetgetvendorname2_struct <structtagsystargetgetvendorname2__struct>`

- struct :ref:`tagsystargetgetversion_struct <structtagsystargetgetversion__struct>`

- struct :ref:`tagsystargetgetversion2_struct <structtagsystargetgetversion2__struct>`

- struct :ref:`ISysTarget_C <struct_i_sys_target___c>`

Macros
------

- #define :ref:`ITF_SysTarget <group___sys_target_itf_1ga4f4113d0864d2f91f97507b2e9e8e2bb>`

- #define :ref:`EXTITF_SysTarget <group___sys_target_itf_1gaa1c39154a1ce2b9fe6c01810dcc20542>`

Typedefs
--------

- typedef struct :ref:`tagsystargetgetdevicename_struct <structtagsystargetgetdevicename__struct>` :ref:`systargetgetdevicename_struct <group___sys_target_itf_1gaff33944c5eafca0c338860ba144196a1>`

- typedef struct :ref:`tagsystargetgetdevicename2_struct <structtagsystargetgetdevicename2__struct>` :ref:`systargetgetdevicename2_struct <group___sys_target_itf_1ga9a0886170fd9a52cbff6ad9f3caddbc0>`

- typedef struct :ref:`tagsystargetgetid_struct <structtagsystargetgetid__struct>` :ref:`systargetgetid_struct <group___sys_target_itf_1ga8ea55fb8a4973b0dbea447a37b64e782>`

- typedef struct :ref:`tagsystargetgetid2_struct <structtagsystargetgetid2__struct>` :ref:`systargetgetid2_struct <group___sys_target_itf_1ga07d41ad1a39570472deb0103d93d9790>`

- typedef struct :ref:`tagsystargetgetnodename_struct <structtagsystargetgetnodename__struct>` :ref:`systargetgetnodename_struct <group___sys_target_itf_1ga7e48e3b3c4621a54cd69b2d80f67cd46>`

- typedef struct :ref:`tagsystargetgetnodename2_struct <structtagsystargetgetnodename2__struct>` :ref:`systargetgetnodename2_struct <group___sys_target_itf_1gaed254ec19d7137b227c965bb0b1706ac>`

- typedef struct :ref:`tagsystargetgetoperatingsystemid_struct <structtagsystargetgetoperatingsystemid__struct>` :ref:`systargetgetoperatingsystemid_struct <group___sys_target_itf_1ga6358bad9655c9a791e92e333ea2c33b0>`

- typedef struct :ref:`tagsystargetgetprocessorid_struct <structtagsystargetgetprocessorid__struct>` :ref:`systargetgetprocessorid_struct <group___sys_target_itf_1ga3d5872fbdb84d83082669129a167570f>`

- typedef struct :ref:`tagsystargetgetserialnumber_struct <structtagsystargetgetserialnumber__struct>` :ref:`systargetgetserialnumber_struct <group___sys_target_itf_1ga90407a2b6464bc53cf59736ac685a741>`

- typedef struct :ref:`tagsystargetgettype_struct <structtagsystargetgettype__struct>` :ref:`systargetgettype_struct <group___sys_target_itf_1ga5606107310bb42dcd620c829a2cac50b>`

- typedef struct :ref:`tagsystargetgettype2_struct <structtagsystargetgettype2__struct>` :ref:`systargetgettype2_struct <group___sys_target_itf_1gab9416eda7832c59a09653b569ea07a68>`

- typedef struct :ref:`tagsystargetgetvendorname_struct <structtagsystargetgetvendorname__struct>` :ref:`systargetgetvendorname_struct <group___sys_target_itf_1ga92027ddbd7bec410e10468a8788e093d>`

- typedef struct :ref:`tagsystargetgetvendorname2_struct <structtagsystargetgetvendorname2__struct>` :ref:`systargetgetvendorname2_struct <group___sys_target_itf_1ga127641812240ea8150957be89b111db1>`

- typedef struct :ref:`tagsystargetgetversion_struct <structtagsystargetgetversion__struct>` :ref:`systargetgetversion_struct <group___sys_target_itf_1gaa3dcd2dcaad2b01423dc74a56952f86d>`

- typedef struct :ref:`tagsystargetgetversion2_struct <structtagsystargetgetversion2__struct>` :ref:`systargetgetversion2_struct <group___sys_target_itf_1gae012b4de134342dd9bace9685b41058a>`

- typedef :ref:`ISysTarget_C <struct_i_sys_target___c>` :ref:`ISysTarget <group___sys_target_itf_1gac087a5a9792bc86c68fd949e555802f4>`

Functions
---------

- void :ref:`systargetgetdevicename <group___sys_target_itf_1ga8f17fc131e2ca1ef503f0184be4ec6dd>` (:ref:`systargetgetdevicename_struct <group___sys_target_itf_1gaff33944c5eafca0c338860ba144196a1>` * p)

- void :ref:`systargetgetdevicename2 <group___sys_target_itf_1ga276542d48a5dfe8b122a9bc46bdaa76f>` (:ref:`systargetgetdevicename2_struct <group___sys_target_itf_1ga9a0886170fd9a52cbff6ad9f3caddbc0>` * p)

- void :ref:`systargetgetid <group___sys_target_itf_1gaffcd48498eb128af137037e223da88db>` (:ref:`systargetgetid_struct <group___sys_target_itf_1ga8ea55fb8a4973b0dbea447a37b64e782>` * p)

- void :ref:`systargetgetid2 <group___sys_target_itf_1ga7b6f7624f465a33fe42963cdbe6c0187>` (:ref:`systargetgetid2_struct <group___sys_target_itf_1ga07d41ad1a39570472deb0103d93d9790>` * p)

- void :ref:`systargetgetnodename <group___sys_target_itf_1ga97e84504d0859dc40681684e19bab474>` (:ref:`systargetgetnodename_struct <group___sys_target_itf_1ga7e48e3b3c4621a54cd69b2d80f67cd46>` * p)

- void :ref:`systargetgetnodename2 <group___sys_target_itf_1gab3e31aa5c9a00f17e9869142b9d82d24>` (:ref:`systargetgetnodename2_struct <group___sys_target_itf_1gaed254ec19d7137b227c965bb0b1706ac>` * p)

- void :ref:`systargetgetoperatingsystemid <group___sys_target_itf_1gafcac5d0731080ba0db920451064776a3>` (:ref:`systargetgetoperatingsystemid_struct <group___sys_target_itf_1ga6358bad9655c9a791e92e333ea2c33b0>` * p)

- void :ref:`systargetgetprocessorid <group___sys_target_itf_1ga5c9533c902f975ea506f6bd06076e9df>` (:ref:`systargetgetprocessorid_struct <group___sys_target_itf_1ga3d5872fbdb84d83082669129a167570f>` * p)

- void :ref:`systargetgetserialnumber <group___sys_target_itf_1gab4e405a5cb4e08e286cbba29f9b11c93>` (:ref:`systargetgetserialnumber_struct <group___sys_target_itf_1ga90407a2b6464bc53cf59736ac685a741>` * p)

- void :ref:`systargetgettype <group___sys_target_itf_1ga8ff935eacaef0a9dfeb85eab50dce710>` (:ref:`systargetgettype_struct <group___sys_target_itf_1ga5606107310bb42dcd620c829a2cac50b>` * p)

- void :ref:`systargetgettype2 <group___sys_target_itf_1gae17e926ffcd21922387a819f1ecf886f>` (:ref:`systargetgettype2_struct <group___sys_target_itf_1gab9416eda7832c59a09653b569ea07a68>` * p)

- void :ref:`systargetgetvendorname <group___sys_target_itf_1ga4a02b245426ea9e1fcdd9a519e9d0359>` (:ref:`systargetgetvendorname_struct <group___sys_target_itf_1ga92027ddbd7bec410e10468a8788e093d>` * p)

- void :ref:`systargetgetvendorname2 <group___sys_target_itf_1gaee1c3bcd8ae032b7ee720768bb62a0ed>` (:ref:`systargetgetvendorname2_struct <group___sys_target_itf_1ga127641812240ea8150957be89b111db1>` * p)

- void :ref:`systargetgetversion <group___sys_target_itf_1gad1767ddd61e442a199f7abe0af4b242f>` (:ref:`systargetgetversion_struct <group___sys_target_itf_1gaa3dcd2dcaad2b01423dc74a56952f86d>` * p)

- void :ref:`systargetgetversion2 <group___sys_target_itf_1ga13a1f4121ad54689000d049227522d8f>` (:ref:`systargetgetversion2_struct <group___sys_target_itf_1gae012b4de134342dd9bace9685b41058a>` * p)

- RTS_RESULT :ref:`SysTargetOSInit <group___sys_target_itf_1gac6268c0dc4dcda5d530baa1beb7dfaa3>` (INIT_STRUCT * pInit)

- RTS_RESULT :ref:`SysTargetOSHookFunction <group___sys_target_itf_1ga5ed0f4f88bb682f69600f783ed14c4de>` (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)

- RTS_RESULT :ref:`SysTargetGetNodeName <group___sys_target_itf_1ga42c6ad369c3e427fc13c5287c360f013>` (RTS_WCHAR * pwszName, RTS_SIZE * pnMaxLength)

- RTS_RESULT :ref:`SysTargetGetConfiguredNodeName <group___sys_target_itf_1gaa8ac8ed648cbbbbd65658d28d140ae52>` (RTS_WCHAR * pwszName, RTS_SIZE * pnMaxLength)

- RTS_RESULT :ref:`SysTargetGetType <group___sys_target_itf_1ga62c8edb446591cb84d1f19524a700d7f>` (RTS_UI32 * pulType)

- RTS_RESULT :ref:`SysTargetGetId <group___sys_target_itf_1ga282eec73f498ea412468e053171e95c8>` (RTS_UI32 * pulTargetId)

- RTS_RESULT :ref:`SysTargetGetVersion <group___sys_target_itf_1ga768c19e2cd5b8425a5c870e1dab66416>` (RTS_UI32 * pulVersion)

- RTS_RESULT :ref:`SysTargetGetDeviceName <group___sys_target_itf_1ga0534f05cf90b18be83949fbb022f17d1>` (RTS_WCHAR * pwszName, RTS_SIZE * pnMaxLength)

- RTS_RESULT :ref:`SysTargetGetVendorName <group___sys_target_itf_1ga41bd5290d816c8a8295e8277bb71f417>` (RTS_WCHAR * pwszName, RTS_SIZE * pnMaxLength)

- RTS_RESULT :ref:`SysTargetGetOperatingSystemId <group___sys_target_itf_1gab66943afa899f0361c3e3c43ec88fcf6>` (RTS_UI32 * pulOperatingSystemId)

- RTS_RESULT :ref:`SysTargetGetProcessorId <group___sys_target_itf_1gaccc3344bf3cf479bbc8da8816a53436d>` (RTS_UI32 * pulProcessorId)

- RTS_RESULT :ref:`SysTargetGetSerialNumber <group___sys_target_itf_1ga060d213095cd4f7db362495c68aaef96>` (char ** ppszSerialNumber, RTS_I32 * pnMaxLen)

- RTS_RESULT :ref:`SysTargetGetSerialNumber_Secure <group___sys_target_itf_1ga503e51ec613c5f128a6fa17b96cbe5c1>` (char ** ppszSerialNumber, RTS_I32 * pnMaxLen)

- RTS_RESULT :ref:`SysTargetGetSignature <group___sys_target_itf_1gadb98f511ce758228f99aae7693278518>` (RTS_UI32 ulChallenge, RTS_UI32 * pulSignature)

- RTS_RESULT :ref:`SysTargetGetDeviceMask <group___sys_target_itf_1ga9a28ccfb448279d23dd8c2dcc80b6a8e>` (RTS_UI16 * pusDeviceMask)

- RTS_RESULT :ref:`SysTargetCheckIdent <group___sys_target_itf_1ga0a47b20982061858c1314cc617badd8f>` (:ref:`SysTargetIdent <group___sys_target_itf___sys_targetidentification_1ga9185ae35ee0e94a183c1b725c5c55235>` * pTargetIdentReq, :ref:`SysTargetIdent <group___sys_target_itf___sys_targetidentification_1ga9185ae35ee0e94a183c1b725c5c55235>` * pTargetIdent)

- RTS_RESULT :ref:`SysTargetGetAPI <group___sys_target_itf_1gaaf8d2d45621a98a319fe15e23431f621>` (:ref:`API_RESOLVE_INFO <group___c_m_itf___api_resolve_info_1gab9565a2863d19785c9b52114ceafe72f>`  apiInfo, RTS_VOID_FCTPTR * ppfAPIFunction)

- RTS_RESULT :ref:`SysTargetSetNodeName <group___sys_target_itf_1ga25f49ebea17f5b5568187e4f3d2533e7>` (RTS_WCHAR * pwszName)

.. _group___sys_target_itf-details:

Detailed Description
--------------------

Interface of SysTarget.

The SysTarget interface is projected to get access to target specific informations. With this informations a target can be recognized unique in the complete network.

**Copyright:**

Copyright (c) 2017-2018 CODESYS GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Macro Definition Documentation
------------------------------
.. _group___sys_target_itf_1ga4f4113d0864d2f91f97507b2e9e8e2bb:

#define ITF_SysTarget
^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1gaa1c39154a1ce2b9fe6c01810dcc20542:

#define EXTITF_SysTarget
^^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___sys_target_itf_1gaff33944c5eafca0c338860ba144196a1:

typedef struct tagsystargetgetdevicename_struct  systargetgetdevicename_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION BEGIN

Returns the device name of the target.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_target_itf_1ga9a0886170fd9a52cbff6ad9f3caddbc0:

typedef struct tagsystargetgetdevicename2_struct  systargetgetdevicename2_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

OBSOLETE: Only for backward compatibility! Should not be used.

.. _group___sys_target_itf_1ga8ea55fb8a4973b0dbea447a37b64e782:

typedef struct tagsystargetgetid_struct  systargetgetid_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the TargetId. NOTE: Highword of the TargetId is the VendorId! The VendorId is managed by 3S.

**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_target_itf_1ga07d41ad1a39570472deb0103d93d9790:

typedef struct tagsystargetgetid2_struct  systargetgetid2_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

OBSOLETE: Only for backward compatibility! Should not be used.

.. _group___sys_target_itf_1ga7e48e3b3c4621a54cd69b2d80f67cd46:

typedef struct tagsystargetgetnodename_struct  systargetgetnodename_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get a human readable name that identifies this node in the network. NOTE: This could be the registered host name of the target in the network.

**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_target_itf_1gaed254ec19d7137b227c965bb0b1706ac:

typedef struct tagsystargetgetnodename2_struct  systargetgetnodename2_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

OBSOLETE: Only for backward compatibility! Should not be used

.. _group___sys_target_itf_1ga6358bad9655c9a791e92e333ea2c33b0:

typedef struct tagsystargetgetoperatingsystemid_struct  systargetgetoperatingsystemid_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the ID of the operating system.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_target_itf_1ga3d5872fbdb84d83082669129a167570f:

typedef struct tagsystargetgetprocessorid_struct  systargetgetprocessorid_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the ID of the processor
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_target_itf_1ga90407a2b6464bc53cf59736ac685a741:

typedef struct tagsystargetgetserialnumber_struct  systargetgetserialnumber_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the serial number of the target. This can be a list of hardware specific signs (processor number, board number, mac-address, etc.).
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_target_itf_1ga5606107310bb42dcd620c829a2cac50b:

typedef struct tagsystargetgettype_struct  systargetgettype_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the target type. See "Device Types" for details.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_target_itf_1gab9416eda7832c59a09653b569ea07a68:

typedef struct tagsystargetgettype2_struct  systargetgettype2_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

OBSOLETE: Only for backward compatibility! Should not be used

.. _group___sys_target_itf_1ga92027ddbd7bec410e10468a8788e093d:

typedef struct tagsystargetgetvendorname_struct  systargetgetvendorname_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the vendor name of the target.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_target_itf_1ga127641812240ea8150957be89b111db1:

typedef struct tagsystargetgetvendorname2_struct  systargetgetvendorname2_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

OBSOLETE: Only for backward compatibility! Should not be used

.. _group___sys_target_itf_1gaa3dcd2dcaad2b01423dc74a56952f86d:

typedef struct tagsystargetgetversion_struct  systargetgetversion_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the target version.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_target_itf_1gae012b4de134342dd9bace9685b41058a:

typedef struct tagsystargetgetversion2_struct  systargetgetversion2_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the target version

**Parameters**

+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pszRouterName | Name of the corresponding router. This feature is used to set different identifications, if several routers are used on the same target. |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pulVersion    | Pointer to version of the target                                                                                                         |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1gac087a5a9792bc86c68fd949e555802f4:

typedef ISysTarget_C ISysTarget
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___sys_target_itf_1ga8f17fc131e2ca1ef503f0184be4ec6dd:

void systargetgetdevicename (systargetgetdevicename_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1ga276542d48a5dfe8b122a9bc46bdaa76f:

void systargetgetdevicename2 (systargetgetdevicename2_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1gaffcd48498eb128af137037e223da88db:

void systargetgetid (systargetgetid_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1ga7b6f7624f465a33fe42963cdbe6c0187:

void systargetgetid2 (systargetgetid2_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1ga97e84504d0859dc40681684e19bab474:

void systargetgetnodename (systargetgetnodename_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1gab3e31aa5c9a00f17e9869142b9d82d24:

void systargetgetnodename2 (systargetgetnodename2_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1gafcac5d0731080ba0db920451064776a3:

void systargetgetoperatingsystemid (systargetgetoperatingsystemid_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1ga5c9533c902f975ea506f6bd06076e9df:

void systargetgetprocessorid (systargetgetprocessorid_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1gab4e405a5cb4e08e286cbba29f9b11c93:

void systargetgetserialnumber (systargetgetserialnumber_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1ga8ff935eacaef0a9dfeb85eab50dce710:

void systargetgettype (systargetgettype_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1gae17e926ffcd21922387a819f1ecf886f:

void systargetgettype2 (systargetgettype2_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1ga4a02b245426ea9e1fcdd9a519e9d0359:

void systargetgetvendorname (systargetgetvendorname_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1gaee1c3bcd8ae032b7ee720768bb62a0ed:

void systargetgetvendorname2 (systargetgetvendorname2_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1gad1767ddd61e442a199f7abe0af4b242f:

void systargetgetversion (systargetgetversion_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1ga13a1f4121ad54689000d049227522d8f:

void systargetgetversion2 (systargetgetversion2_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1gac6268c0dc4dcda5d530baa1beb7dfaa3:

RTS_RESULT SysTargetOSInit (INIT_STRUCT *pInit)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION END

.. _group___sys_target_itf_1ga5ed0f4f88bb682f69600f783ed14c4de:

RTS_RESULT SysTargetOSHookFunction (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_target_itf_1ga42c6ad369c3e427fc13c5287c360f013:

RTS_RESULT SysTargetGetNodeName (RTS_WCHAR *pwszName, RTS_SIZE *pnMaxLength)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get a human readable name that identifies this node in the network.

IMPLEMENTATION NOTES:

This node name, which is for example displayed in the CODESYS communication dialog scanning all targets, should be unique by default. In first instance this could be the registered host name of the target in the network. Another approach ist to add the official serial number (e.g. "MyController_1234-5678") or the IP-Address of the controller, which is most of the time unique (e.g. "MyController_192.168.123.234") as part of the node name. This requirement focused on the use case where an end user takes several identical controllers of one vendor and plugs at once into his plant or machine. And so every controller should show up in the commuication dialog at a scan with a unique node name. Furthermore this is important to allow a client to connect by using the node name. The length is limited to SYSTARGET_MAX_NODE_NAME_LEN.

**Parameters**

+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pwszName    | Buffer that is filled with the name of the node. Type is UTF-16. RANGE=[0,VALID_NAME,INVALID_NAME]                                                                                             |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pnMaxLength | Pointer to maximum length in 16-bit code units (not bytes!). Returns the number of 16-bit code units copied into the buffer including the trailing zero. RANGE=[0,VALID_LENGTH,INVALID_LENGTH] |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+---------------+----------------------------------------------+
| ERR_OK        | Name was retrieved sucessfull                |
+---------------+----------------------------------------------+
| ERR_PARAMETER | Pointer to MaxLength or Name may not be null |
+---------------+----------------------------------------------+
| ERR_FAILED    | Name could not be retrieved                  |
+---------------+----------------------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1gaa8ac8ed648cbbbbd65658d28d140ae52:

RTS_RESULT SysTargetGetConfiguredNodeName (RTS_WCHAR *pwszName, RTS_SIZE *pnMaxLength)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get a human readable name for the target. This can be configured by the name setting (see category above).

**Parameters**

+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pwszName    | Buffer that is filled with the name of the node. Type is UTF-16. Can be NULL to get the necessary length. RANGE=[0,VALID_NAME,INVALID_NAME]                                                    |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pnMaxLength | Pointer to maximum length in 16-bit code units (not bytes!). Returns the number of 16-bit code units copied into the buffer including the trailing zero. RANGE=[0,VALID_LENGTH,INVALID_LENGTH] |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+---------------+----------------------------------------------+
| ERR_OK        | Name was retrieved sucessfull                |
+---------------+----------------------------------------------+
| ERR_PARAMETER | Pointer to MaxLength or Name may not be null |
+---------------+----------------------------------------------+
| ERR_FAILED    | Name could not be retrieved                  |
+---------------+----------------------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1ga62c8edb446591cb84d1f19524a700d7f:

RTS_RESULT SysTargetGetType (RTS_UI32 *pulType)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the target type

The possible target types are specified in the section "Device Types" (e.g. SYSTARGET_TYPE_PROGRAMMABLE).

Note: On SIL2 runtimes, this should return the value of the define SYSTARGET_DEVICE_TYPE.

**Parameters**

+---------+---------+------------------------------------------------------------------------------------------------+
| [inout] | pulType | Pointer to target type. See corresponding category "Device Types" RANGE=[0,VALID_TYPE_POINTER] |
+---------+---------+------------------------------------------------------------------------------------------------+

**Return values**

+---------------+-------------------------------------+
| ERR_OK        | TargetType was retrieved sucessfull |
+---------------+-------------------------------------+
| ERR_PARAMETER | Pointer to Type may not be null     |
+---------------+-------------------------------------+
| ERR_FAILED    | TargetType could not be retrieved   |
+---------------+-------------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1ga282eec73f498ea412468e053171e95c8:

RTS_RESULT SysTargetGetId (RTS_UI32 *pulTargetId)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the TargetId of the PLC.

Note: Highword of the TargetId must be the VendorId! The VendorId is managed by 3S.

Note2: On SIL2 runtimes, this should return the combination of the defines SYSTARGET_VENDOR_ID and SYSTARGET_DEVICE_ID.

**Parameters**

+---------+-------------+----------------------------------------------------+
| [inout] | pulTargetId | Pointer to the TargetId RANGE=[0,VALID_ID_POINTER] |
+---------+-------------+----------------------------------------------------+

**Return values**

+---------------+-------------------------------------+
| ERR_OK        | TargetId was retrieved sucessfull   |
+---------------+-------------------------------------+
| ERR_PARAMETER | Pointer to TargetId may not be null |
+---------------+-------------------------------------+
| ERR_FAILED    | TargetId could not be retrieved     |
+---------------+-------------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1ga768c19e2cd5b8425a5c870e1dab66416:

RTS_RESULT SysTargetGetVersion (RTS_UI32 *pulVersion)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the target version

Note: On SIL2 runtimes, this should return the value of the define SYSTARGET_DEVICE_VERSION.

**Parameters**

+---------+------------+------------------------------------------------------------------+
| [inout] | pulVersion | Pointer to version of the target RANGE=[0,VALID_VERSION_POINTER] |
+---------+------------+------------------------------------------------------------------+

**Return values**

+---------------+------------------------------------+
| ERR_OK        | version was retrieved sucessfull   |
+---------------+------------------------------------+
| ERR_PARAMETER | Pointer to version may not be null |
+---------------+------------------------------------+
| ERR_FAILED    | version could not be retrieved     |
+---------------+------------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1ga0534f05cf90b18be83949fbb022f17d1:

RTS_RESULT SysTargetGetDeviceName (RTS_WCHAR *pwszName, RTS_SIZE *pnMaxLength)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the device name

The device name is for example displayed in the CODESYS communication dialog scanning all targets.

IMPLEMENTATION NOTES:

The length is limited to SYSTARGET_MAX_DEVICE_NAME_LEN. But it is strongly recommended to avoid device names with more than 50 16-bit code units including NULL termination, because there exist use cases which can handle only this shorter length.

**Parameters**

+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pwszName    | Pointer to the device name. Type is UTF-16. Can be NULL to get the necessary length. RANGE=[0,INVALID_NAME,VALID_NAME]                                                                                     |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pnMaxLength | Pointer to maximum length of the name in 16-bit code units (not bytes!). Returns the number of 16-bit code units copied into the buffer including the trailing zero. RANGE=[0,INVALID_LENGTH,VALID_LENGTH] |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+---------------+--------------------------------------+
| ERR_OK        | device name was retrieved sucessfull |
+---------------+--------------------------------------+
| ERR_PARAMETER | Pointer to length may not be null    |
+---------------+--------------------------------------+
| ERR_FAILED    | device name could not be retrieved   |
+---------------+--------------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1ga41bd5290d816c8a8295e8277bb71f417:

RTS_RESULT SysTargetGetVendorName (RTS_WCHAR *pwszName, RTS_SIZE *pnMaxLength)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the vendor name

The vendor name is for example displayed in the CODESYS communication dialog scanning all targets.

IMPLEMENTATION NOTES:

The length is limited to SYSTARGET_MAX_VENDOR_NAME_LEN. But it is strongly recommended to avoid device names with more than 50 16-bit code units including NULL termination, because there exist use cases which can handle only this shorter length.

**Parameters**

+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pwszName    | Pointer to the device name. Type is UTF-16. Can be NULL to get the necessary length. RANGE=[0,INVALID_NAME,VALID_NAME]                                                                                     |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pnMaxLength | Pointer to maximum length of the name in 16-bit code units (not bytes!). Returns the number of 16-bit code units copied into the buffer including the trailing zero. RANGE=[0,INVALID_LENGTH,VALID_LENGTH] |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+---------------+--------------------------------------+
| ERR_OK        | vendor name was retrieved sucessfull |
+---------------+--------------------------------------+
| ERR_PARAMETER | Pointer to length may not be null    |
+---------------+--------------------------------------+
| ERR_FAILED    | vendor name could not be retrieved   |
+---------------+--------------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1gab66943afa899f0361c3e3c43ec88fcf6:

RTS_RESULT SysTargetGetOperatingSystemId (RTS_UI32 *pulOperatingSystemId)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the ID of the operating system.

**Parameters**

+---------+----------------------+-----------------------------------------------------------------------------------------------------+
| [inout] | pulOperatingSystemID | Pointer to operating system Id. See category "Operating System" above RANGE=[0,VALID_OS_ID_POINTER] |
+---------+----------------------+-----------------------------------------------------------------------------------------------------+

**Return values**

+---------------+----------------------------------+
| ERR_OK        | OS ID was retrieved sucessfull   |
+---------------+----------------------------------+
| ERR_PARAMETER | Pointer to OS ID may not be null |
+---------------+----------------------------------+
| ERR_FAILED    | OS ID could not be retrieved     |
+---------------+----------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1gaccc3344bf3cf479bbc8da8816a53436d:

RTS_RESULT SysTargetGetProcessorId (RTS_UI32 *pulProcessorId)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the ID of the processor

**Parameters**

+---------+----------------+-------------------------------------------------------------------------------------------+
| [inout] | pulProcessorID | Pointer to processor ID. See category "Processor ID" above RANGE=[0,VALID_CPU_ID_POINTER] |
+---------+----------------+-------------------------------------------------------------------------------------------+

**Return values**

+---------------+-----------------------------------+
| ERR_OK        | CPU ID was retrieved sucessfull   |
+---------------+-----------------------------------+
| ERR_PARAMETER | Pointer to CPU ID may not be null |
+---------------+-----------------------------------+
| ERR_FAILED    | CPU ID could not be retrieved     |
+---------------+-----------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1ga060d213095cd4f7db362495c68aaef96:

RTS_RESULT SysTargetGetSerialNumber (char **ppszSerialNumber, RTS_I32 *pnMaxLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns a unique serial number of the target. Unique serial number can be used e.g. for detection or communication needs (e. g. as part of node name).

IMPLEMENTATION NOTES:

The length of the serial number string must be limited to SYSTARGET_MAX_SERIAL_NUMBER_LEN characters including NULL termination!

Example: "C4D7F967-00020655-00100800-029AF2C4"

If ppszSerialNumber==NULL, the length of the serial number including NULL can be retrieved inpnMaxLen. IfppszSerialNumber==NULL, the pointer will be set to the static serial number.pnMaxLen returns the real length of the serial number including NULL. IfppszSerialNumber!=NULL, the serial number will be written into the buffer.pnMaxLen must specify the max length of the buffer! On return it contains the number of characters copied into the buffer including the trailing zero.

**Parameters**

+---------+------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | ppszSerialNumber | Pointer to pointer to serial number.                                                                                                                                         |
|         |                  |                                                                                                                                                                              |
|         |                  | - If ppszSerialNumber==NULL, the length of the serial number can be retrieved inpnMaxLen.                                                                                    |
|         |                  |                                                                                                                                                                              |
|         |                  | - IfppszSerialNumber==NULL, the pointer will be set to the static serial nubmer.pnMaxLen contains the real length of the serial number.                                      |
|         |                  |                                                                                                                                                                              |
|         |                  | - IfppszSerialNumber!=NULL, the serial number will be written into the buffer.pnMaxLen must specify the max length of the buffer! RANGE=[0,VALID_SN_P_NULL,VALID_SN_P_VALID] |
+---------+------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pnMaxLen         | Pointer to the max length of the string (ifppszSerialNumber!=NULL). On return it contains returned length including NULL. RANGE=[0,VALID_MAX_LEN]                            |
+---------+------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+--------------------+-----------------------------------+
| ERR_OK             | SN was retrieved successful       |
+--------------------+-----------------------------------+
| ERR_PARAMETER      | Pointer to MaxLen may not be null |
+--------------------+-----------------------------------+
| ERR_FAILED         | SN could not be retrieved         |
+--------------------+-----------------------------------+
| ERR_NOTIMPLEMENTED | SN not implemented                |
+--------------------+-----------------------------------+
| ERR_NOT_SUPPORTED  | Kind of SN not supported          |
+--------------------+-----------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1ga503e51ec613c5f128a6fa17b96cbe5c1:

RTS_RESULT SysTargetGetSerialNumber_Secure (char **ppszSerialNumber, RTS_I32 *pnMaxLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns a _secure_ serial number of the target. Secure means here are unique serial number that can be used e.g. for licensing!

IMPLEMENTATION NOTES:

- The length of the serial number string must be limited to 512 characters! It is recommended to limit the length to 64 characters.

- The serial number must be robust against cracking!!! Typically it should be determined from a unique hardware serial number (device serial number, CPU serial number etc.). If this is not available, it must be calculated out of hardware unique characteristics (harddisk serial number + operating system serial number + CPU type + BIOS type etc.)

Example: "C4D7F967-00020655-00100800-029AF2C4"

If ppszSerialNumber==NULL, the length of the serial number can be retrieved inpnMaxLen. IfppszSerialNumber==NULL, the pointer will be set to the static serial nubmer.pnMaxLen contains the real length of the serial number. IfppszSerialNumber!=NULL, the serial number will be written into the buffer.pnMaxLen must specify the max length of the buffer!

**Parameters**

+---------+------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | ppszSerialNumber | Pointer to pointer to serial number.                                                                                                                                         |
|         |                  |                                                                                                                                                                              |
|         |                  | - If ppszSerialNumber==NULL, the length of the serial number can be retrieved inpnMaxLen.                                                                                    |
|         |                  |                                                                                                                                                                              |
|         |                  | - IfppszSerialNumber==NULL, the pointer will be set to the static serial nubmer.pnMaxLen contains the real length of the serial number.                                      |
|         |                  |                                                                                                                                                                              |
|         |                  | - IfppszSerialNumber!=NULL, the serial number will be written into the buffer.pnMaxLen must specify the max length of the buffer! RANGE=[0,VALID_SN_P_NULL,VALID_SN_P_VALID] |
+---------+------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pnMaxLen         | Pointer to the max length of the string (ifppszSerialNumber!=NULL) or the length that is returned by the function. RANGE=[0,VALID_MAX_LEN]                                   |
+---------+------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+--------------------+-----------------------------------+
| ERR_OK             | SN was retrieved successful       |
+--------------------+-----------------------------------+
| ERR_PARAMETER      | Pointer to MaxLen may not be null |
+--------------------+-----------------------------------+
| ERR_FAILED         | Error retrieving SN               |
+--------------------+-----------------------------------+
| ERR_NOTIMPLEMENTED | SN not implemented                |
+--------------------+-----------------------------------+
| ERR_NOT_SUPPORTED  | Kind of SN not supported          |
+--------------------+-----------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1gadb98f511ce758228f99aae7693278518:

RTS_RESULT SysTargetGetSignature (RTS_UI32 ulChallenge, RTS_UI32 *pulSignature)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the signature of SysTarget

**Parameters**

+---------+--------------+-------------------------------------------------------------------------------------------------------------------------+
| [in]    | ulChallenge  | Challenge to get the signature RANGE=[0,VALID_CHALLENGE]                                                                |
+---------+--------------+-------------------------------------------------------------------------------------------------------------------------+
| [inout] | pulSignature | Signature of the SysTarget entries Type, Id, OperatingSystem, ProcessorType RANGE=[0,VALID_SIGNATURE,INVALID_SIGNATURE] |
+---------+--------------+-------------------------------------------------------------------------------------------------------------------------+

**Return values**

+---------------+------------------------------------------------------+
| ERR_OK        | Signature was retrieved sucessfull                   |
+---------------+------------------------------------------------------+
| ERR_PARAMETER | Pointer to Signature and ulChallenge may not be null |
+---------------+------------------------------------------------------+
| ERR_FAILED    | Signature could not be retrieved                     |
+---------------+------------------------------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1ga9a28ccfb448279d23dd8c2dcc80b6a8e:

RTS_RESULT SysTargetGetDeviceMask (RTS_UI16 *pusDeviceMask)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the device mask. It is used to use the same signature for a range of devices. Example: pusDeviceMask = 0x0000: All parts of the DeviceID is used to generate the signature pusDeviceMask = 0x00FF: Only the high BYTE of the DeviceID is used to generate the signature. So a range of 255 devices can be used with the same signature.

**Parameters**

+---------+---------------+-----------------------------------------------------------------+
| [inout] | pusDeviceMask | Pointer to return the device mask RANGE=[0,P_VALID_DEVICE_MASK] |
+---------+---------------+-----------------------------------------------------------------+

**Return values**

+---------------+----------------------------------------+
| ERR_OK        | device mask was retrieved sucessfull   |
+---------------+----------------------------------------+
| ERR_PARAMETER | Pointer to device mask may not be null |
+---------------+----------------------------------------+
| ERR_FAILED    | device mask could not be retrieved     |
+---------------+----------------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1ga0a47b20982061858c1314cc617badd8f:

RTS_RESULT SysTargetCheckIdent (SysTargetIdent *pTargetIdentReq, SysTargetIdent *pTargetIdent)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Checks the compatibility between a requested identification and the target identification

**Parameters**

+---------+-----------------+-----------------------------------------------------------------------------------+
| [in]    | pTargetIdentReq | Requested target identification to check. Must not be NULL!                       |
+---------+-----------------+-----------------------------------------------------------------------------------+
| [in]    | pTargetIdent    | Own target identity. Can be NULL, then the built in target identification is used |
+---------+-----------------+-----------------------------------------------------------------------------------+

**Returns:**

error code

**Return values**

+----------------------+--------------------------------------------+
| ERR_OK               | Target identifications matched             |
+----------------------+--------------------------------------------+
| ERR_PARAMETER        | pTargetIdentReq is NULL                    |
+----------------------+--------------------------------------------+
| ERR_TYPE_MISMATCH    | Type mismatch                              |
+----------------------+--------------------------------------------+
| ERR_ID_MISMATCH      | ID mismatch                                |
+----------------------+--------------------------------------------+
| ERR_VERSION_MISMATCH | Version mismatch. Versions not compatible! |
+----------------------+--------------------------------------------+

.. _group___sys_target_itf_1gaaf8d2d45621a98a319fe15e23431f621:

RTS_RESULT SysTargetGetAPI (API_RESOLVE_INFO apiInfo, RTS_VOID_FCTPTR *ppfAPIFunction)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This function is called for all external function calls and can be used to overload external functions.

IMPLEMENTATION NOTES:

The OEM can use the implementation in SysTargetOEM to redirect or disable specific functions.

**Parameters**

+---------+----------------+-------------------------------------------------+
| [in]    | apiInfo        | API info of the current API function to resolve |
+---------+----------------+-------------------------------------------------+
| [inout] | ppfAPIFunction | Pointer to API functionpointer                  |
+---------+----------------+-------------------------------------------------+

**Return values**

+--------------------+----------------------------------------------------------------------------------------+
| ERR_OK             | API function successfully redirected to the function thatppfAPIFunction is pointing to |
+--------------------+----------------------------------------------------------------------------------------+
| ERR_NOT_SUPPORTED  | API function is disabled for external calls. Unresolved reference will occur.          |
+--------------------+----------------------------------------------------------------------------------------+
| ERR_PARAMETER      | Pointer to API functionpointer is NULL                                                 |
+--------------------+----------------------------------------------------------------------------------------+
| ERR_FAILED         | API function is not overloaded or redirected by SysTargetGetAPI                        |
+--------------------+----------------------------------------------------------------------------------------+
| ERR_NOTIMPLEMENTED | No implementation to resolve the API                                                   |
+--------------------+----------------------------------------------------------------------------------------+

**Returns:**

error code

.. _group___sys_target_itf_1ga25f49ebea17f5b5568187e4f3d2533e7:

RTS_RESULT SysTargetSetNodeName (RTS_WCHAR *pwszName)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set a human readable name that identifies this device in the network. The length is limited to SYSTARGET_MAX_NODE_NAME_LEN. By passing an empty string, the node name settings are deleted and so the default node name is set again.

**Parameters**

+---------+----------+------------------------------------------------------------------+
| [in]    | pwszName | Buffer that is filled with the name of the node. Type is UTF-16. |
+---------+----------+------------------------------------------------------------------+

**Return values**

+----------------------+------------------------------------------------------+
| ERR_OK               | Node name was set sucessfully                        |
+----------------------+------------------------------------------------------+
| ERR_PARAMETER        | Pointer to name may not be null                      |
+----------------------+------------------------------------------------------+
| ERR_OUT_OF_LIMITS    | Length of name exceeds SYSTARGET_MAX_NODE_NAME_LEN   |
+----------------------+------------------------------------------------------+
| ERR_NO_ACCESS_RIGHTS | Configuration (file) is write protected              |
+----------------------+------------------------------------------------------+
| ERR_NOT_SUPPORTED    | Device does not support to store the node name       |
+----------------------+------------------------------------------------------+
| ERR_OPERATION_DENIED | OEM implementation has denied to store the node name |
+----------------------+------------------------------------------------------+
| ERR_FAILED           | Name could not be set because of unknown reason      |
+----------------------+------------------------------------------------------+

**Returns:**

error code

.. last line of group.rst template
.. last line of composition.rst template


