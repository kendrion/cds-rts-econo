.. first line of composition.rst template

:orphan:

.. first line of struct.rst template

.. _structtagplcshellappend__struct:

=========================================
tagplcshellappend_struct Struct Reference
=========================================

| #include ":ref:`CmpPlcShellItf.h <_cmp_plc_shell_itf_8h>`"

Data Fields
-----------

- RTS_IEC_STRING * :ref:`pszString <group___cmp_plc_shell_itf_1ga5d30c411754c698dd692760b9713c723>`
- RTS_IEC_DINT :ref:`iBlockID <group___cmp_plc_shell_itf_1ga3fcecfd276380daf81ee130865a4624c>`
- RTS_IEC_RESULT :ref:`PlcShellAppend <group___cmp_plc_shell_itf_1gaef39e95cbe8b6f0da99aac69b2895b19>`

Detailed Description
--------------------

EXTERN LIB SECTION BEGIN

Append a line to the command output

The passed parameter iBlockID, has TO be the BlockID, which was passed to the command handler! The communication layer automatically manages the split of blocks. If you want to avoid this and write only the current block that is sent to CoDeSys, use the function :ref:`PlcShellSkip() <group___cmp_plc_shell_itf_1ga757626cbb55adeb2608c69836624857b>` . RETURN: Returns the runtime system error code (see CmpErrors.library)

Field Documentation
-------------------

.. _group___cmp_plc_shell_itf_1ga5d30c411754c698dd692760b9713c723:

RTS_IEC_STRING* tagplcshellappend_struct::pszString
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_plc_shell_itf_1ga3fcecfd276380daf81ee130865a4624c:

RTS_IEC_DINT tagplcshellappend_struct::iBlockID
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_plc_shell_itf_1gaef39e95cbe8b6f0da99aac69b2895b19:

RTS_IEC_RESULT tagplcshellappend_struct::PlcShellAppend
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The documentation for this struct was generated from the following file:
------------------------------------------------------------------------

CmpPlcShellItf.h

.. last line of struct.rst template
.. last line of composition.rst template


