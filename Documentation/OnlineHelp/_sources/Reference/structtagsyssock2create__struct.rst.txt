.. first line of composition.rst template

:orphan:

.. first line of struct.rst template

.. _structtagsyssock2create__struct:

=========================================
tagsyssock2create_struct Struct Reference
=========================================

| #include ":ref:`SysSocket2_ImplementationItf.h <_sys_socket2___implementation_itf_8h>`"

Data Fields
-----------

- :ref:`SysSocket2_Parameter <group___sys_socket2_itf_1gae39af88f148ab8531f010db70aed500a>` * :ref:`pParameter <group___sys_socket2___implementation_itf_1gafb1d0fecfba7f8a7e1cd2cb222ff0c66>`
- RTS_IEC_RESULT * :ref:`pResult <group___sys_socket2___implementation_itf_1gaa422a7d5bf1efbf0c0cc748c8429e814>`
- RTS_IEC_HANDLE :ref:`SysSock2Create <group___sys_socket2___implementation_itf_1gab739c782f7886216c7a31c56012865a1>`

Detailed Description
--------------------

Create a new socket and return the socket handle. By now STD or TLS sockets are available. Using a STD socket results in the default socket behavior.

.. note::

Using the TLS socket results in an IPv4 TCP socket where the TLS protocol is used. Since additional handshaking has to be done, connection establishment takes some time longer. By default, these sockets are created asnonblocking. If a blocking behavior is needed thishas to be set explicitly. Be aware that blocking TLS sockets can lead to deadlock situations if the peer does not send TLS data. This is a potential security risk, typically for server implementations. An attacker can create a connection and then stop sending TLS data, resulting in a denial of service attack. This situation is avoided with nonblocking sockets.

To avoid this potential risk by default TLS based sockets are created as nonblockingby default. This applies to handles created by |SysSock2Create| and |SysSock2Accept|. If this has to be changed use the |SysSock2Ioctl| to setup the desired behavior.

:return: A handle to the created socket or INVALID_HANDLE if something went wrong. The return is a descriptor (handle) of the new socket, which is required as input parameter by other library functions like |SysSock2Bind|, |SysSock2Connect| etc.

Field Documentation
-------------------

.. _group___sys_socket2___implementation_itf_1gafb1d0fecfba7f8a7e1cd2cb222ff0c66:

SysSocket2_Parameter* tagsyssock2create_struct::pParameter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket2___implementation_itf_1gaa422a7d5bf1efbf0c0cc748c8429e814:

RTS_IEC_RESULT* tagsyssock2create_struct::pResult
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket2___implementation_itf_1gab739c782f7886216c7a31c56012865a1:

RTS_IEC_HANDLE tagsyssock2create_struct::SysSock2Create
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The documentation for this struct was generated from the following file:
------------------------------------------------------------------------

SysSocket2_ImplementationItf.h

.. last line of struct.rst template
.. last line of composition.rst template


