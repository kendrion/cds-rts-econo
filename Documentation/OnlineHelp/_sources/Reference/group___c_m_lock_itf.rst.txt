.. first line of composition.rst template

:orphan:

.. first line of group.rst template

.. _group___c_m_lock_itf:

=========
CMLockItf
=========

.. contents::
    :local:
    :depth: 1

Interface of CMLock.

Detailed Description
--------------------

Interface for a generic locking mechanism

If both SysSem and SysInt components are implemented in the runtime system, a global int-lock implementation can be chosen with CMLOCK_PREFER_SYSINT macro. Otherwise, a mutex-based implementation is automatically selected.

If either SysSem or SysInt component is implemented only, then the CMLock implementation is based on an existing component.
::
    *				    USAGE in a module:
    *
    *				        RTS_HANDLE s_hLock = RTS_INVALID_HANDLE;
    *				        CH_INIT:
    *				            RTS_RESULT result;
    *				            s_hLock = CAL_CMLockCreate(&result);
    *				        CH_EXIT:
    *				            CAL_CMLockDelete(s_hLock);
    *
    *				        Function()
    *				        {
    *				            RTS_HANDLE hLock;
    *				            CM_GET_LOCK(s_hLock, hLock);
    *
    *				            CAL_CMLockEnter(hLock);
    *				            ...
    *				            CAL_CMLockLeave(hLock);
    *				        }
    *

**Copyright:**

Copyright (c) 2017-2020 CODESYS Development GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Data Structures
---------------

- struct :ref:`ICMLock_C <struct_i_c_m_lock___c>`

Macros
------

- #define :ref:`CMLOCK_PREFER_SYSSEM <group___c_m_lock_itf_1ga1ecdd063f40c92ec5be4ae9fed96dee4>`

- #define :ref:`CM_GET_LOCK <group___c_m_lock_itf_1gaff83b61e17007e983e8ec1167f468744>` lock = lockobject;

- #define :ref:`USE_CMLockCreate <group___c_m_lock_itf_1ga1aaf8e65d6ad5a3bcffc1df5c3a6c2be>` :ref:`PFCMLOCKCREATE <group___c_m_lock_itf_1ga7849ccf5d1e5a2d0bd8fb030804a616f>` pfCMLockCreate;

- #define :ref:`EXT_CMLockCreate <group___c_m_lock_itf_1ga9332d5fa5adaa0b5202f1b8e3e1d00a3>` extern :ref:`PFCMLOCKCREATE <group___c_m_lock_itf_1ga7849ccf5d1e5a2d0bd8fb030804a616f>` pfCMLockCreate;

- #define :ref:`GET_CMLockCreate <group___c_m_lock_itf_1ga342cdc55c7587e07e7ed151819712b04>` s_pfCMGetAPI2( "CMLockCreate", (RTS_VOID_FCTPTR *)&pfCMLockCreate, (fl), 0, 0)

- #define :ref:`CAL_CMLockCreate <group___c_m_lock_itf_1gaa72fd85272ac8b99f0d9c6e7331bd34c>` pfCMLockCreate

- #define :ref:`CHK_CMLockCreate <group___c_m_lock_itf_1ga42c8169c355ef134dc957ea238ef300b>` (pfCMLockCreate != NULL)

- #define :ref:`EXP_CMLockCreate <group___c_m_lock_itf_1ga0aa94359e2d64741da7796e8237c46b8>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"CMLockCreate", (RTS_UINTPTR) :ref:`CMLockCreate <group___c_m_lock_itf_1ga37828972c0c49ca8c6fac57dc24c64b5>` , 0, 0)

- #define :ref:`USE_CMLockDelete <group___c_m_lock_itf_1gacb142e981f9c58f343b64a0de3d9c3b3>` :ref:`PFCMLOCKDELETE <group___c_m_lock_itf_1gaf108975f93d9177e806fb7f22a15f922>` pfCMLockDelete;

- #define :ref:`EXT_CMLockDelete <group___c_m_lock_itf_1ga0e4e2a18b9e9222773a98d735ad854ec>` extern :ref:`PFCMLOCKDELETE <group___c_m_lock_itf_1gaf108975f93d9177e806fb7f22a15f922>` pfCMLockDelete;

- #define :ref:`GET_CMLockDelete <group___c_m_lock_itf_1ga00f6846e118778b1c60a8e5e20663884>` s_pfCMGetAPI2( "CMLockDelete", (RTS_VOID_FCTPTR *)&pfCMLockDelete, (fl), 0, 0)

- #define :ref:`CAL_CMLockDelete <group___c_m_lock_itf_1gaa746942359416e849cbd8d834dcd7674>` pfCMLockDelete

- #define :ref:`CHK_CMLockDelete <group___c_m_lock_itf_1ga174c196d8d3ff0254eb0f21d3c402688>` (pfCMLockDelete != NULL)

- #define :ref:`EXP_CMLockDelete <group___c_m_lock_itf_1gae54b25fd8919c2b8539f1f2ed6abd8fb>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"CMLockDelete", (RTS_UINTPTR) :ref:`CMLockDelete <group___c_m_lock_itf_1ga27b1605f674da61a03578459ba9442d6>` , 0, 0)

- #define :ref:`USE_CMLockEnter <group___c_m_lock_itf_1gadcd9b7ef7142cd176124e161a21e1602>` :ref:`PFCMLOCKENTER <group___c_m_lock_itf_1ga9d05d6bb32ab2a5145dac9b3c8fceb13>` pfCMLockEnter;

- #define :ref:`EXT_CMLockEnter <group___c_m_lock_itf_1gaf928b853a896a7e456922f7bc83e2c33>` extern :ref:`PFCMLOCKENTER <group___c_m_lock_itf_1ga9d05d6bb32ab2a5145dac9b3c8fceb13>` pfCMLockEnter;

- #define :ref:`GET_CMLockEnter <group___c_m_lock_itf_1gaa022cc1434d233f1325384b690149e35>` s_pfCMGetAPI2( "CMLockEnter", (RTS_VOID_FCTPTR *)&pfCMLockEnter, (fl), 0, 0)

- #define :ref:`CAL_CMLockEnter <group___c_m_lock_itf_1gabb90daf6438a5c7934b2f47aef29be26>` pfCMLockEnter

- #define :ref:`CHK_CMLockEnter <group___c_m_lock_itf_1ga5b69c7da5b0267608e4b67956bc274d4>` (pfCMLockEnter != NULL)

- #define :ref:`EXP_CMLockEnter <group___c_m_lock_itf_1gae84eb6f41136906e9e04ac0019e26fbe>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"CMLockEnter", (RTS_UINTPTR) :ref:`CMLockEnter <group___c_m_lock_itf_1gaeec8041d015664ad7732282b3ca4e48f>` , 0, 0)

- #define :ref:`USE_CMLockLeave <group___c_m_lock_itf_1gab4254b871243c30feb0b818df7e035ca>` :ref:`PFCMLOCKLEAVE <group___c_m_lock_itf_1ga7acecfab406e42e7268db417e2194857>` pfCMLockLeave;

- #define :ref:`EXT_CMLockLeave <group___c_m_lock_itf_1ga30fc0c33e0cb57a0a41968eb718b1dd9>` extern :ref:`PFCMLOCKLEAVE <group___c_m_lock_itf_1ga7acecfab406e42e7268db417e2194857>` pfCMLockLeave;

- #define :ref:`GET_CMLockLeave <group___c_m_lock_itf_1gac2660bf9bd02b796e9da2a6212944ed4>` s_pfCMGetAPI2( "CMLockLeave", (RTS_VOID_FCTPTR *)&pfCMLockLeave, (fl), 0, 0)

- #define :ref:`CAL_CMLockLeave <group___c_m_lock_itf_1ga879bdc3353edc054f6ed955117395857>` pfCMLockLeave

- #define :ref:`CHK_CMLockLeave <group___c_m_lock_itf_1ga6daa479c9bc26c95d249a0648e0d51f8>` (pfCMLockLeave != NULL)

- #define :ref:`EXP_CMLockLeave <group___c_m_lock_itf_1ga887ce2fec2af60a1a8f56407d80d8b75>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"CMLockLeave", (RTS_UINTPTR) :ref:`CMLockLeave <group___c_m_lock_itf_1gaaf4f6f8a2f093dc88a938510a00c79dc>` , 0, 0)

- #define :ref:`ITF_CMLock <group___c_m_lock_itf_1ga42749e13901cd6c99326775eac7566c6>`

- #define :ref:`EXTITF_CMLock <group___c_m_lock_itf_1ga568762e66dd796dfd79eff0ce0d5fcf3>`

Typedefs
--------

- typedef RTS_HANDLE(* :ref:`PFCMLOCKCREATE <group___c_m_lock_itf_1ga7849ccf5d1e5a2d0bd8fb030804a616f>`)(RTS_RESULT *pResult)

- typedef RTS_RESULT(* :ref:`PFCMLOCKDELETE <group___c_m_lock_itf_1gaf108975f93d9177e806fb7f22a15f922>`)(RTS_HANDLE hLock)

- typedef RTS_RESULT(* :ref:`PFCMLOCKENTER <group___c_m_lock_itf_1ga9d05d6bb32ab2a5145dac9b3c8fceb13>`)(RTS_HANDLE hLock)

- typedef RTS_RESULT(* :ref:`PFCMLOCKLEAVE <group___c_m_lock_itf_1ga7acecfab406e42e7268db417e2194857>`)(RTS_HANDLE hLock)

- typedef :ref:`ICMLock_C <struct_i_c_m_lock___c>` :ref:`ICMLock <group___c_m_lock_itf_1gac1f10ba878c6f45f56fdfcf927a21c9a>`

Functions
---------

- RTS_HANDLE :ref:`CMLockCreate <group___c_m_lock_itf_1ga37828972c0c49ca8c6fac57dc24c64b5>` (RTS_RESULT * pResult)

- RTS_RESULT :ref:`CMLockDelete <group___c_m_lock_itf_1ga27b1605f674da61a03578459ba9442d6>` (RTS_HANDLE hLock)

- RTS_RESULT :ref:`CMLockEnter <group___c_m_lock_itf_1gaeec8041d015664ad7732282b3ca4e48f>` (RTS_HANDLE hLock)

- RTS_RESULT :ref:`CMLockLeave <group___c_m_lock_itf_1gaaf4f6f8a2f093dc88a938510a00c79dc>` (RTS_HANDLE hLock)

Macro Definition Documentation
------------------------------
.. _group___c_m_lock_itf_1ga1ecdd063f40c92ec5be4ae9fed96dee4:

#define CMLOCK_PREFER_SYSSEM
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gaff83b61e17007e983e8ec1167f468744:

#define CM_GET_LOCK lock = lockobject;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Macro to get the correct parameter for the lock functions: :ref:`CM_GET_LOCK(hLock, hLocalLock) <group___c_m_lock_itf_1gaff83b61e17007e983e8ec1167f468744>`

**Parameters**

+---------+-------------+--------------------------------------------------------------------------------------------------+
| [in]    | hLockObject | is retrieved by :ref:`CMLockCreate() <group___c_m_lock_itf_1ga37828972c0c49ca8c6fac57dc24c64b5>` |
+---------+-------------+--------------------------------------------------------------------------------------------------+
| [in]    | hLock       | local variable of type RTS_HANDLE (declared in the local function!)                              |
+---------+-------------+--------------------------------------------------------------------------------------------------+

**Returns:**

Error code

.. _group___c_m_lock_itf_1ga1aaf8e65d6ad5a3bcffc1df5c3a6c2be:

#define USE_CMLockCreate :ref:`PFCMLOCKCREATE <group___c_m_lock_itf_1ga7849ccf5d1e5a2d0bd8fb030804a616f>` pfCMLockCreate;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga9332d5fa5adaa0b5202f1b8e3e1d00a3:

#define EXT_CMLockCreate extern :ref:`PFCMLOCKCREATE <group___c_m_lock_itf_1ga7849ccf5d1e5a2d0bd8fb030804a616f>` pfCMLockCreate;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga342cdc55c7587e07e7ed151819712b04:

#define GET_CMLockCreate s_pfCMGetAPI2( "CMLockCreate", (RTS_VOID_FCTPTR *)&pfCMLockCreate, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gaa72fd85272ac8b99f0d9c6e7331bd34c:

#define CAL_CMLockCreate pfCMLockCreate
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga42c8169c355ef134dc957ea238ef300b:

#define CHK_CMLockCreate (pfCMLockCreate != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga0aa94359e2d64741da7796e8237c46b8:

#define EXP_CMLockCreate s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"CMLockCreate", (RTS_UINTPTR) :ref:`CMLockCreate <group___c_m_lock_itf_1ga37828972c0c49ca8c6fac57dc24c64b5>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gacb142e981f9c58f343b64a0de3d9c3b3:

#define USE_CMLockDelete :ref:`PFCMLOCKDELETE <group___c_m_lock_itf_1gaf108975f93d9177e806fb7f22a15f922>` pfCMLockDelete;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga0e4e2a18b9e9222773a98d735ad854ec:

#define EXT_CMLockDelete extern :ref:`PFCMLOCKDELETE <group___c_m_lock_itf_1gaf108975f93d9177e806fb7f22a15f922>` pfCMLockDelete;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga00f6846e118778b1c60a8e5e20663884:

#define GET_CMLockDelete s_pfCMGetAPI2( "CMLockDelete", (RTS_VOID_FCTPTR *)&pfCMLockDelete, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gaa746942359416e849cbd8d834dcd7674:

#define CAL_CMLockDelete pfCMLockDelete
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga174c196d8d3ff0254eb0f21d3c402688:

#define CHK_CMLockDelete (pfCMLockDelete != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gae54b25fd8919c2b8539f1f2ed6abd8fb:

#define EXP_CMLockDelete s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"CMLockDelete", (RTS_UINTPTR) :ref:`CMLockDelete <group___c_m_lock_itf_1ga27b1605f674da61a03578459ba9442d6>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gadcd9b7ef7142cd176124e161a21e1602:

#define USE_CMLockEnter :ref:`PFCMLOCKENTER <group___c_m_lock_itf_1ga9d05d6bb32ab2a5145dac9b3c8fceb13>` pfCMLockEnter;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gaf928b853a896a7e456922f7bc83e2c33:

#define EXT_CMLockEnter extern :ref:`PFCMLOCKENTER <group___c_m_lock_itf_1ga9d05d6bb32ab2a5145dac9b3c8fceb13>` pfCMLockEnter;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gaa022cc1434d233f1325384b690149e35:

#define GET_CMLockEnter s_pfCMGetAPI2( "CMLockEnter", (RTS_VOID_FCTPTR *)&pfCMLockEnter, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gabb90daf6438a5c7934b2f47aef29be26:

#define CAL_CMLockEnter pfCMLockEnter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga5b69c7da5b0267608e4b67956bc274d4:

#define CHK_CMLockEnter (pfCMLockEnter != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gae84eb6f41136906e9e04ac0019e26fbe:

#define EXP_CMLockEnter s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"CMLockEnter", (RTS_UINTPTR) :ref:`CMLockEnter <group___c_m_lock_itf_1gaeec8041d015664ad7732282b3ca4e48f>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gab4254b871243c30feb0b818df7e035ca:

#define USE_CMLockLeave :ref:`PFCMLOCKLEAVE <group___c_m_lock_itf_1ga7acecfab406e42e7268db417e2194857>` pfCMLockLeave;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga30fc0c33e0cb57a0a41968eb718b1dd9:

#define EXT_CMLockLeave extern :ref:`PFCMLOCKLEAVE <group___c_m_lock_itf_1ga7acecfab406e42e7268db417e2194857>` pfCMLockLeave;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gac2660bf9bd02b796e9da2a6212944ed4:

#define GET_CMLockLeave s_pfCMGetAPI2( "CMLockLeave", (RTS_VOID_FCTPTR *)&pfCMLockLeave, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga879bdc3353edc054f6ed955117395857:

#define CAL_CMLockLeave pfCMLockLeave
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga6daa479c9bc26c95d249a0648e0d51f8:

#define CHK_CMLockLeave (pfCMLockLeave != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga887ce2fec2af60a1a8f56407d80d8b75:

#define EXP_CMLockLeave s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"CMLockLeave", (RTS_UINTPTR) :ref:`CMLockLeave <group___c_m_lock_itf_1gaaf4f6f8a2f093dc88a938510a00c79dc>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga42749e13901cd6c99326775eac7566c6:

#define ITF_CMLock
^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga568762e66dd796dfd79eff0ce0d5fcf3:

#define EXTITF_CMLock
^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___c_m_lock_itf_1ga7849ccf5d1e5a2d0bd8fb030804a616f:

typedef RTS_HANDLE( *  PFCMLOCKCREATE) (RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gaf108975f93d9177e806fb7f22a15f922:

typedef RTS_RESULT( *  PFCMLOCKDELETE) (RTS_HANDLE hLock)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga9d05d6bb32ab2a5145dac9b3c8fceb13:

typedef RTS_RESULT( *  PFCMLOCKENTER) (RTS_HANDLE hLock)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1ga7acecfab406e42e7268db417e2194857:

typedef RTS_RESULT( *  PFCMLOCKLEAVE) (RTS_HANDLE hLock)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___c_m_lock_itf_1gac1f10ba878c6f45f56fdfcf927a21c9a:

typedef ICMLock_C ICMLock
^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___c_m_lock_itf_1ga37828972c0c49ca8c6fac57dc24c64b5:

RTS_HANDLE CMLockCreate (RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to create a lock object to synchronize data against concurrent task or interrupt access.

**Parameters**

+---------+---------+-----------------------+
| [out]   | pResult | Pointer to error code |
+---------+---------+-----------------------+

**Returns:**

Handle to the lock object

.. _group___c_m_lock_itf_1ga27b1605f674da61a03578459ba9442d6:

RTS_RESULT CMLockDelete (RTS_HANDLE hLock)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to delete a lock object.

**Parameters**

+---------+-------+-------------------------------------------------------------------------------------------------------------------------+
| [in]    | hLock | Handle to the lock object retrieved by :ref:`CMLockCreate() <group___c_m_lock_itf_1ga37828972c0c49ca8c6fac57dc24c64b5>` |
+---------+-------+-------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Error code

.. _group___c_m_lock_itf_1gaeec8041d015664ad7732282b3ca4e48f:

RTS_RESULT CMLockEnter (RTS_HANDLE hLock)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to enter a lock object. After entering, the accessed data is _safe_ against concurrent access.

**Parameters**

+---------+-------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | hLock | Handle to the lock object retrieved by macro: :ref:`CM_GET_LOCK(hLockObject, hLock) <group___c_m_lock_itf_1gaff83b61e17007e983e8ec1167f468744>`  |
|         |       |                                                                                                                                                  |
|         |       |   - hLockObject is retrieved by :ref:`CMLockCreate() <group___c_m_lock_itf_1ga37828972c0c49ca8c6fac57dc24c64b5>`                                 |
|         |       |                                                                                                                                                  |
|         |       |   - hLock is a local variable of type RTS_HANDLE (declared in the local function!)                                                               |
+---------+-------+--------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Error code

.. _group___c_m_lock_itf_1gaaf4f6f8a2f093dc88a938510a00c79dc:

RTS_RESULT CMLockLeave (RTS_HANDLE hLock)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to leave a lock object. After leaving, the accessed data is _unsafe_ against concurrent access.

**Parameters**

+---------+-------+-------------------------------------------------------------------------------------------------------------------------+
| [in]    | hLock | Handle to the lock object retrieved by :ref:`CMLockCreate() <group___c_m_lock_itf_1ga37828972c0c49ca8c6fac57dc24c64b5>` |
+---------+-------+-------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Error code

.. last line of group.rst template
.. last line of composition.rst template


