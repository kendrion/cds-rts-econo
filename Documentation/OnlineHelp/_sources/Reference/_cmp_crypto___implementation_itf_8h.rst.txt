.. first line of composition.rst template

:orphan:

.. first line of file.rst template

.. __cmp_crypto___implementation_itf_8h:

============================================
CmpCrypto_ImplementationItf.h File Reference
============================================

| #include ":ref:`CmpStd.h`"

Data Structures
---------------

- struct :ref:`tagcryptoasymmetricdecrypt_struct <structtagcryptoasymmetricdecrypt__struct>`

- struct :ref:`tagcryptoasymmetricencrypt_struct <structtagcryptoasymmetricencrypt__struct>`

- struct :ref:`tagcryptodeleteprivatekey_struct <structtagcryptodeleteprivatekey__struct>`

- struct :ref:`tagcryptoderivekey_struct <structtagcryptoderivekey__struct>`

- struct :ref:`tagcryptoexportasymmetrickey_struct <structtagcryptoexportasymmetrickey__struct>`

- struct :ref:`tagcryptogenerateasymmetrickeypair_struct <structtagcryptogenerateasymmetrickeypair__struct>`

- struct :ref:`tagcryptogeneratehash_struct <structtagcryptogeneratehash__struct>`

- struct :ref:`tagcryptogeneraterandomnumber_struct <structtagcryptogeneraterandomnumber__struct>`

- struct :ref:`tagcryptogetalgorithmbyid_struct <structtagcryptogetalgorithmbyid__struct>`

- struct :ref:`tagcryptogetasymmetrickeylength_struct <structtagcryptogetasymmetrickeylength__struct>`

- struct :ref:`tagcryptogetfirstalgorithm_struct <structtagcryptogetfirstalgorithm__struct>`

- struct :ref:`tagcryptogetnextalgorithm_struct <structtagcryptogetnextalgorithm__struct>`

- struct :ref:`tagcryptohmacsign_struct <structtagcryptohmacsign__struct>`

- struct :ref:`tagcryptohmacverify_struct <structtagcryptohmacverify__struct>`

- struct :ref:`tagcryptoimportasymmetrickey_struct <structtagcryptoimportasymmetrickey__struct>`

- struct :ref:`tagcryptokeyexit_struct <structtagcryptokeyexit__struct>`

- struct :ref:`tagcryptokeyinit_struct <structtagcryptokeyinit__struct>`

- struct :ref:`tagcryptoloadprivatekey_struct <structtagcryptoloadprivatekey__struct>`

- struct :ref:`tagcryptortsbytestringexit_struct <structtagcryptortsbytestringexit__struct>`

- struct :ref:`tagcryptortsbytestringinit_struct <structtagcryptortsbytestringinit__struct>`

- struct :ref:`tagcryptortsbytestringinit2_struct <structtagcryptortsbytestringinit2__struct>`

- struct :ref:`tagcryptosignaturegenerate_struct <structtagcryptosignaturegenerate__struct>`

- struct :ref:`tagcryptosignatureverify_struct <structtagcryptosignatureverify__struct>`

- struct :ref:`tagcryptostoreprivatekey_struct <structtagcryptostoreprivatekey__struct>`

- struct :ref:`tagcryptosymmetricdecrypt_struct <structtagcryptosymmetricdecrypt__struct>`

- struct :ref:`tagcryptosymmetricencrypt_struct <structtagcryptosymmetricencrypt__struct>`

- struct :ref:`ICmpCrypto_Implementation_C <struct_i_cmp_crypto___implementation___c>`

Macros
------

- #define :ref:`USE_cryptoasymmetricdecrypt <group___cmp_crypto___implementation_itf_1gac4474c0ebcb0a97d40c7679788c8a477>` :ref:`PFCRYPTOASYMMETRICDECRYPT_IEC <group___cmp_crypto___implementation_itf_1ga2eb6b704659b8727da0eb54c8e2b859f>` pfcryptoasymmetricdecrypt;

- #define :ref:`EXT_cryptoasymmetricdecrypt <group___cmp_crypto___implementation_itf_1gafe97aa908e8c86c15e248f05014250bc>` extern :ref:`PFCRYPTOASYMMETRICDECRYPT_IEC <group___cmp_crypto___implementation_itf_1ga2eb6b704659b8727da0eb54c8e2b859f>` pfcryptoasymmetricdecrypt;

- #define :ref:`GET_cryptoasymmetricdecrypt <group___cmp_crypto___implementation_itf_1gad0ad87d4fc01bca05b70fdf2ae887ce2>` s_pfCMGetAPI2( "cryptoasymmetricdecrypt", (RTS_VOID_FCTPTR *)&pfcryptoasymmetricdecrypt, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x126B86CC, 0x03051000)

- #define :ref:`CAL_cryptoasymmetricdecrypt <group___cmp_crypto___implementation_itf_1ga322fcaea34820ca2a02937ecb5561f7f>` pfcryptoasymmetricdecrypt

- #define :ref:`CHK_cryptoasymmetricdecrypt <group___cmp_crypto___implementation_itf_1ga8310f3371902f79e77d58a252c6342f0>` (pfcryptoasymmetricdecrypt != NULL)

- #define :ref:`EXP_cryptoasymmetricdecrypt <group___cmp_crypto___implementation_itf_1gaea92df9c668f5ae07b6eb31977a1bc96>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptoasymmetricdecrypt", (RTS_UINTPTR) :ref:`cryptoasymmetricdecrypt <group___cmp_crypto___implementation_itf_1gab92bb6b95471220b1eba750a3dd9e2a0>` , 1, 0x126B86CC, 0x03051000)

- #define :ref:`USE_cryptoasymmetricencrypt <group___cmp_crypto___implementation_itf_1gabd05b22e943ad1e700de53bad1bdc95a>` :ref:`PFCRYPTOASYMMETRICENCRYPT_IEC <group___cmp_crypto___implementation_itf_1ga5ba9b5d16ee219e50a877070f3f012fc>` pfcryptoasymmetricencrypt;

- #define :ref:`EXT_cryptoasymmetricencrypt <group___cmp_crypto___implementation_itf_1gacee144e593e7c87b617c2b9629f56c02>` extern :ref:`PFCRYPTOASYMMETRICENCRYPT_IEC <group___cmp_crypto___implementation_itf_1ga5ba9b5d16ee219e50a877070f3f012fc>` pfcryptoasymmetricencrypt;

- #define :ref:`GET_cryptoasymmetricencrypt <group___cmp_crypto___implementation_itf_1ga94f7fb9f3eaa7900d22535184fa579e5>` s_pfCMGetAPI2( "cryptoasymmetricencrypt", (RTS_VOID_FCTPTR *)&pfcryptoasymmetricencrypt, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xC14613D0, 0x03051000)

- #define :ref:`CAL_cryptoasymmetricencrypt <group___cmp_crypto___implementation_itf_1ga90555e725105bc4b969d8dcfe31b8e1e>` pfcryptoasymmetricencrypt

- #define :ref:`CHK_cryptoasymmetricencrypt <group___cmp_crypto___implementation_itf_1ga7de3996ef91c96d99174ae27499f7115>` (pfcryptoasymmetricencrypt != NULL)

- #define :ref:`EXP_cryptoasymmetricencrypt <group___cmp_crypto___implementation_itf_1gac43a21678e4f509823b01c2c91e7185c>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptoasymmetricencrypt", (RTS_UINTPTR) :ref:`cryptoasymmetricencrypt <group___cmp_crypto___implementation_itf_1gacbf4d058438159477214f8e0f15d0d4a>` , 1, 0xC14613D0, 0x03051000)

- #define :ref:`USE_cryptodeleteprivatekey <group___cmp_crypto___implementation_itf_1gab55648092cf559d83c6d78836060958c>` :ref:`PFCRYPTODELETEPRIVATEKEY_IEC <group___cmp_crypto___implementation_itf_1ga2c64a023685a0c73eca65bed017483f6>` pfcryptodeleteprivatekey;

- #define :ref:`EXT_cryptodeleteprivatekey <group___cmp_crypto___implementation_itf_1ga7df1ec6850f68f0448f14fb17c18864b>` extern :ref:`PFCRYPTODELETEPRIVATEKEY_IEC <group___cmp_crypto___implementation_itf_1ga2c64a023685a0c73eca65bed017483f6>` pfcryptodeleteprivatekey;

- #define :ref:`GET_cryptodeleteprivatekey <group___cmp_crypto___implementation_itf_1ga15505bee207676a72e022a95ed17846b>` s_pfCMGetAPI2( "cryptodeleteprivatekey", (RTS_VOID_FCTPTR *)&pfcryptodeleteprivatekey, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xDE36F1DF, 0x03051000)

- #define :ref:`CAL_cryptodeleteprivatekey <group___cmp_crypto___implementation_itf_1ga1cd17150e07b3f4a9d40fdcfdc4a58c0>` pfcryptodeleteprivatekey

- #define :ref:`CHK_cryptodeleteprivatekey <group___cmp_crypto___implementation_itf_1ga60d71bac388668652b5feacae63ff0e4>` (pfcryptodeleteprivatekey != NULL)

- #define :ref:`EXP_cryptodeleteprivatekey <group___cmp_crypto___implementation_itf_1ga2c2a7ec80517dd675c70d9be8dd71ea8>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptodeleteprivatekey", (RTS_UINTPTR) :ref:`cryptodeleteprivatekey <group___cmp_crypto___implementation_itf_1gae4a62de4c2e70d28c3292af9f697dc3d>` , 1, 0xDE36F1DF, 0x03051000)

- #define :ref:`USE_cryptoderivekey <group___cmp_crypto___implementation_itf_1ga8e1a85f575dd39d7eacbc91ea1380547>` :ref:`PFCRYPTODERIVEKEY_IEC <group___cmp_crypto___implementation_itf_1ga6d443d99bd0ffe49d7f13381052e6f26>` pfcryptoderivekey;

- #define :ref:`EXT_cryptoderivekey <group___cmp_crypto___implementation_itf_1gac4be2bef25f349dfeb603db0481b76ce>` extern :ref:`PFCRYPTODERIVEKEY_IEC <group___cmp_crypto___implementation_itf_1ga6d443d99bd0ffe49d7f13381052e6f26>` pfcryptoderivekey;

- #define :ref:`GET_cryptoderivekey <group___cmp_crypto___implementation_itf_1ga5b6edab637c77a554a7a3a285115cc23>` s_pfCMGetAPI2( "cryptoderivekey", (RTS_VOID_FCTPTR *)&pfcryptoderivekey, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x31C54B5F, 0x03051000)

- #define :ref:`CAL_cryptoderivekey <group___cmp_crypto___implementation_itf_1gadeedd616f65da8ad495be7aa607865cc>` pfcryptoderivekey

- #define :ref:`CHK_cryptoderivekey <group___cmp_crypto___implementation_itf_1gaedb795c0183682ef3286e62dd392f478>` (pfcryptoderivekey != NULL)

- #define :ref:`EXP_cryptoderivekey <group___cmp_crypto___implementation_itf_1ga93a9648d46de17fd34749ed979029940>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptoderivekey", (RTS_UINTPTR) :ref:`cryptoderivekey <group___cmp_crypto___implementation_itf_1ga22e62fa62bd7f50eab6ccd545c98e713>` , 1, 0x31C54B5F, 0x03051000)

- #define :ref:`USE_cryptoexportasymmetrickey <group___cmp_crypto___implementation_itf_1gae8c3f1c207b82346e1995f7d30462e1f>` :ref:`PFCRYPTOEXPORTASYMMETRICKEY_IEC <group___cmp_crypto___implementation_itf_1ga472ccd3952cb4ba069c17b7cf9a967ce>` pfcryptoexportasymmetrickey;

- #define :ref:`EXT_cryptoexportasymmetrickey <group___cmp_crypto___implementation_itf_1gab3d4accf53d7e91595cb10c5f90a66ac>` extern :ref:`PFCRYPTOEXPORTASYMMETRICKEY_IEC <group___cmp_crypto___implementation_itf_1ga472ccd3952cb4ba069c17b7cf9a967ce>` pfcryptoexportasymmetrickey;

- #define :ref:`GET_cryptoexportasymmetrickey <group___cmp_crypto___implementation_itf_1gafbffbb2a8c1fdc402d1848344b1f133c>` s_pfCMGetAPI2( "cryptoexportasymmetrickey", (RTS_VOID_FCTPTR *)&pfcryptoexportasymmetrickey, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x4628FE5D, 0x03051000)

- #define :ref:`CAL_cryptoexportasymmetrickey <group___cmp_crypto___implementation_itf_1ga59677607854effb9cbadde41c90ee5ff>` pfcryptoexportasymmetrickey

- #define :ref:`CHK_cryptoexportasymmetrickey <group___cmp_crypto___implementation_itf_1ga0dd5918dd34dda32dbe0cb7f8c20b1fc>` (pfcryptoexportasymmetrickey != NULL)

- #define :ref:`EXP_cryptoexportasymmetrickey <group___cmp_crypto___implementation_itf_1gad05fec3032eb3c7b0848c831a789693b>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptoexportasymmetrickey", (RTS_UINTPTR) :ref:`cryptoexportasymmetrickey <group___cmp_crypto___implementation_itf_1ga6abe497911492c06ae4108cc8f2beae4>` , 1, 0x4628FE5D, 0x03051000)

- #define :ref:`USE_cryptogenerateasymmetrickeypair <group___cmp_crypto___implementation_itf_1ga483954dcdc1bb3c70823ea1a78af4e18>` :ref:`PFCRYPTOGENERATEASYMMETRICKEYPAIR_IEC <group___cmp_crypto___implementation_itf_1ga5f15c3ed356b6556195e75d16b8b96f9>` pfcryptogenerateasymmetrickeypair;

- #define :ref:`EXT_cryptogenerateasymmetrickeypair <group___cmp_crypto___implementation_itf_1gadeb13334122966c25191103736a70a67>` extern :ref:`PFCRYPTOGENERATEASYMMETRICKEYPAIR_IEC <group___cmp_crypto___implementation_itf_1ga5f15c3ed356b6556195e75d16b8b96f9>` pfcryptogenerateasymmetrickeypair;

- #define :ref:`GET_cryptogenerateasymmetrickeypair <group___cmp_crypto___implementation_itf_1ga9785fbf069979c8304fe6e312479099e>` s_pfCMGetAPI2( "cryptogenerateasymmetrickeypair", (RTS_VOID_FCTPTR *)&pfcryptogenerateasymmetrickeypair, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x0AF43BA3, 0x03051000)

- #define :ref:`CAL_cryptogenerateasymmetrickeypair <group___cmp_crypto___implementation_itf_1ga7487274954a2559a0e9ac54e9f306473>` pfcryptogenerateasymmetrickeypair

- #define :ref:`CHK_cryptogenerateasymmetrickeypair <group___cmp_crypto___implementation_itf_1ga9f8c6d074e73ebdf05dff02643dd2b75>` (pfcryptogenerateasymmetrickeypair != NULL)

- #define :ref:`EXP_cryptogenerateasymmetrickeypair <group___cmp_crypto___implementation_itf_1ga7e67f1522a4fe4fabf13186266bac52a>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptogenerateasymmetrickeypair", (RTS_UINTPTR) :ref:`cryptogenerateasymmetrickeypair <group___cmp_crypto___implementation_itf_1ga302342ae83ace8a9d5fc657aef49df43>` , 1, 0x0AF43BA3, 0x03051000)

- #define :ref:`USE_cryptogeneratehash <group___cmp_crypto___implementation_itf_1ga3791e237689b70754800fd68ccfb616f>` :ref:`PFCRYPTOGENERATEHASH_IEC <group___cmp_crypto___implementation_itf_1ga6de22c0463c60ac3349bf0d3c5ef503e>` pfcryptogeneratehash;

- #define :ref:`EXT_cryptogeneratehash <group___cmp_crypto___implementation_itf_1gafc6db46e45b351c11294aa38396ee138>` extern :ref:`PFCRYPTOGENERATEHASH_IEC <group___cmp_crypto___implementation_itf_1ga6de22c0463c60ac3349bf0d3c5ef503e>` pfcryptogeneratehash;

- #define :ref:`GET_cryptogeneratehash <group___cmp_crypto___implementation_itf_1gac41a71b7d60dbda5b8f77f8b1024d80a>` s_pfCMGetAPI2( "cryptogeneratehash", (RTS_VOID_FCTPTR *)&pfcryptogeneratehash, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x34E1A812, 0x03051000)

- #define :ref:`CAL_cryptogeneratehash <group___cmp_crypto___implementation_itf_1ga80483f4c81c1292c5ae2b54249bf52e1>` pfcryptogeneratehash

- #define :ref:`CHK_cryptogeneratehash <group___cmp_crypto___implementation_itf_1gadc3462e7600ecf254c9590a79dc7214b>` (pfcryptogeneratehash != NULL)

- #define :ref:`EXP_cryptogeneratehash <group___cmp_crypto___implementation_itf_1ga1fc237fd2a141de28467924f23848b40>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptogeneratehash", (RTS_UINTPTR) :ref:`cryptogeneratehash <group___cmp_crypto___implementation_itf_1gace43eaf55f95c456a35868c30b002f85>` , 1, 0x34E1A812, 0x03051000)

- #define :ref:`USE_cryptogeneraterandomnumber <group___cmp_crypto___implementation_itf_1ga8e53746f5a66a1f56201704c28608712>` :ref:`PFCRYPTOGENERATERANDOMNUMBER_IEC <group___cmp_crypto___implementation_itf_1ga1fa2636790dfbabece0400c9fc1dc23d>` pfcryptogeneraterandomnumber;

- #define :ref:`EXT_cryptogeneraterandomnumber <group___cmp_crypto___implementation_itf_1ga7d4f5952ca047f4e5abcfbded6d123c2>` extern :ref:`PFCRYPTOGENERATERANDOMNUMBER_IEC <group___cmp_crypto___implementation_itf_1ga1fa2636790dfbabece0400c9fc1dc23d>` pfcryptogeneraterandomnumber;

- #define :ref:`GET_cryptogeneraterandomnumber <group___cmp_crypto___implementation_itf_1gaa753d3635502a7bd9370b763cb46513e>` s_pfCMGetAPI2( "cryptogeneraterandomnumber", (RTS_VOID_FCTPTR *)&pfcryptogeneraterandomnumber, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xF9FC5437, 0x03051000)

- #define :ref:`CAL_cryptogeneraterandomnumber <group___cmp_crypto___implementation_itf_1ga587561f94dc91458970d08158cd31f06>` pfcryptogeneraterandomnumber

- #define :ref:`CHK_cryptogeneraterandomnumber <group___cmp_crypto___implementation_itf_1ga0541b8173150d6ecb0e527431ea83a28>` (pfcryptogeneraterandomnumber != NULL)

- #define :ref:`EXP_cryptogeneraterandomnumber <group___cmp_crypto___implementation_itf_1ga6e397cb70fa2f2af358afd41c76b168e>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptogeneraterandomnumber", (RTS_UINTPTR) :ref:`cryptogeneraterandomnumber <group___cmp_crypto___implementation_itf_1ga370888592dca2b5837867696326a6dc3>` , 1, 0xF9FC5437, 0x03051000)

- #define :ref:`USE_cryptogetalgorithmbyid <group___cmp_crypto___implementation_itf_1ga12548ce4cdc7496cdc69e597b05f56ac>` :ref:`PFCRYPTOGETALGORITHMBYID_IEC <group___cmp_crypto___implementation_itf_1ga2cbef0a9b54947ee0ed523e892619f74>` pfcryptogetalgorithmbyid;

- #define :ref:`EXT_cryptogetalgorithmbyid <group___cmp_crypto___implementation_itf_1ga8d2ed292e0f433c9b923794738b4fea4>` extern :ref:`PFCRYPTOGETALGORITHMBYID_IEC <group___cmp_crypto___implementation_itf_1ga2cbef0a9b54947ee0ed523e892619f74>` pfcryptogetalgorithmbyid;

- #define :ref:`GET_cryptogetalgorithmbyid <group___cmp_crypto___implementation_itf_1ga2b663fc65f7e49798d4742dbb011cb2b>` s_pfCMGetAPI2( "cryptogetalgorithmbyid", (RTS_VOID_FCTPTR *)&pfcryptogetalgorithmbyid, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x3D0776D3, 0x03051000)

- #define :ref:`CAL_cryptogetalgorithmbyid <group___cmp_crypto___implementation_itf_1ga7c6590355d1560c849c706e1a5f730db>` pfcryptogetalgorithmbyid

- #define :ref:`CHK_cryptogetalgorithmbyid <group___cmp_crypto___implementation_itf_1ga3d8f8d79e2f17243ea6490e69c2efccf>` (pfcryptogetalgorithmbyid != NULL)

- #define :ref:`EXP_cryptogetalgorithmbyid <group___cmp_crypto___implementation_itf_1ga0f7ff8cf5ab58e73fb86075f9ff8dd25>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptogetalgorithmbyid", (RTS_UINTPTR) :ref:`cryptogetalgorithmbyid <group___cmp_crypto___implementation_itf_1ga2d3ee83c4597e071f7b2dd563e5954bc>` , 1, 0x3D0776D3, 0x03051000)

- #define :ref:`USE_cryptogetasymmetrickeylength <group___cmp_crypto___implementation_itf_1ga5c83d51bf25197c4f206cd3675a666bc>` :ref:`PFCRYPTOGETASYMMETRICKEYLENGTH_IEC <group___cmp_crypto___implementation_itf_1gac97e874b26ee4cc110112cc847c11417>` pfcryptogetasymmetrickeylength;

- #define :ref:`EXT_cryptogetasymmetrickeylength <group___cmp_crypto___implementation_itf_1ga5a7a79d4913aedbbe4dbb0e8c6f1ebbb>` extern :ref:`PFCRYPTOGETASYMMETRICKEYLENGTH_IEC <group___cmp_crypto___implementation_itf_1gac97e874b26ee4cc110112cc847c11417>` pfcryptogetasymmetrickeylength;

- #define :ref:`GET_cryptogetasymmetrickeylength <group___cmp_crypto___implementation_itf_1ga558730731b1a4151e17f069bf0d55259>` s_pfCMGetAPI2( "cryptogetasymmetrickeylength", (RTS_VOID_FCTPTR *)&pfcryptogetasymmetrickeylength, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0, 0x03051000)

- #define :ref:`CAL_cryptogetasymmetrickeylength <group___cmp_crypto___implementation_itf_1ga0bc3ac3d8e2cfa19a96434ffc4b83828>` pfcryptogetasymmetrickeylength

- #define :ref:`CHK_cryptogetasymmetrickeylength <group___cmp_crypto___implementation_itf_1ga60c070410a29c837ec465c94b6e93f9f>` (pfcryptogetasymmetrickeylength != NULL)

- #define :ref:`EXP_cryptogetasymmetrickeylength <group___cmp_crypto___implementation_itf_1ga789e4a8adf093117c9d2cc6a7f979baa>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptogetasymmetrickeylength", (RTS_UINTPTR) :ref:`cryptogetasymmetrickeylength <group___cmp_crypto___implementation_itf_1gaf98225d144264dabcc05f4cf9f59317e>` , 1, 0, 0x03051000)

- #define :ref:`USE_cryptogetfirstalgorithm <group___cmp_crypto___implementation_itf_1ga32f6c5b0aee6a23a10133cbd76db81bd>` :ref:`PFCRYPTOGETFIRSTALGORITHM_IEC <group___cmp_crypto___implementation_itf_1gaf960df73c9dde3539d6d7ebf732b82ee>` pfcryptogetfirstalgorithm;

- #define :ref:`EXT_cryptogetfirstalgorithm <group___cmp_crypto___implementation_itf_1ga2965a916a5f6401f2c3d4f610c775497>` extern :ref:`PFCRYPTOGETFIRSTALGORITHM_IEC <group___cmp_crypto___implementation_itf_1gaf960df73c9dde3539d6d7ebf732b82ee>` pfcryptogetfirstalgorithm;

- #define :ref:`GET_cryptogetfirstalgorithm <group___cmp_crypto___implementation_itf_1ga70ecf46456fe571fd99997d28f125da9>` s_pfCMGetAPI2( "cryptogetfirstalgorithm", (RTS_VOID_FCTPTR *)&pfcryptogetfirstalgorithm, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xC8A4A345, 0x03051000)

- #define :ref:`CAL_cryptogetfirstalgorithm <group___cmp_crypto___implementation_itf_1ga83eac9fa53095a29a6e4af944983d505>` pfcryptogetfirstalgorithm

- #define :ref:`CHK_cryptogetfirstalgorithm <group___cmp_crypto___implementation_itf_1gafeb8fdb671263b1c9ebc32baa6d830c6>` (pfcryptogetfirstalgorithm != NULL)

- #define :ref:`EXP_cryptogetfirstalgorithm <group___cmp_crypto___implementation_itf_1ga9011b009766057cb1af067c849106623>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptogetfirstalgorithm", (RTS_UINTPTR) :ref:`cryptogetfirstalgorithm <group___cmp_crypto___implementation_itf_1ga1f3305ea9eee09d52a87e242f02d2b7c>` , 1, 0xC8A4A345, 0x03051000)

- #define :ref:`USE_cryptogetnextalgorithm <group___cmp_crypto___implementation_itf_1ga64524cac2efa241965272b22d25f9a67>` :ref:`PFCRYPTOGETNEXTALGORITHM_IEC <group___cmp_crypto___implementation_itf_1gad89b119a4975accce454e5ee7d5b40f2>` pfcryptogetnextalgorithm;

- #define :ref:`EXT_cryptogetnextalgorithm <group___cmp_crypto___implementation_itf_1gaee301955d1bfb298039329ae31429c27>` extern :ref:`PFCRYPTOGETNEXTALGORITHM_IEC <group___cmp_crypto___implementation_itf_1gad89b119a4975accce454e5ee7d5b40f2>` pfcryptogetnextalgorithm;

- #define :ref:`GET_cryptogetnextalgorithm <group___cmp_crypto___implementation_itf_1ga5e5a60ed728a8e5dbba8f3ded0c5afac>` s_pfCMGetAPI2( "cryptogetnextalgorithm", (RTS_VOID_FCTPTR *)&pfcryptogetnextalgorithm, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x79EC29C8, 0x03051000)

- #define :ref:`CAL_cryptogetnextalgorithm <group___cmp_crypto___implementation_itf_1ga14a52191574c6d2ae8edd46087ed6fcc>` pfcryptogetnextalgorithm

- #define :ref:`CHK_cryptogetnextalgorithm <group___cmp_crypto___implementation_itf_1ga507174801f038ccfa5423d4327cca3e1>` (pfcryptogetnextalgorithm != NULL)

- #define :ref:`EXP_cryptogetnextalgorithm <group___cmp_crypto___implementation_itf_1ga05035522720e82190eae9b20849c8da4>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptogetnextalgorithm", (RTS_UINTPTR) :ref:`cryptogetnextalgorithm <group___cmp_crypto___implementation_itf_1ga6481e0d534d4a0a98c0b50f2c419721f>` , 1, 0x79EC29C8, 0x03051000)

- #define :ref:`USE_cryptohmacsign <group___cmp_crypto___implementation_itf_1ga109da124aa5abc8743c7ecb516a75063>` :ref:`PFCRYPTOHMACSIGN_IEC <group___cmp_crypto___implementation_itf_1ga9145f62e5fbadb408e8f3e2e8b744644>` pfcryptohmacsign;

- #define :ref:`EXT_cryptohmacsign <group___cmp_crypto___implementation_itf_1gaaa8fb0eb8998da9273326d69410a2358>` extern :ref:`PFCRYPTOHMACSIGN_IEC <group___cmp_crypto___implementation_itf_1ga9145f62e5fbadb408e8f3e2e8b744644>` pfcryptohmacsign;

- #define :ref:`GET_cryptohmacsign <group___cmp_crypto___implementation_itf_1gaa936d6fe1044ed428550c85d84e5971f>` s_pfCMGetAPI2( "cryptohmacsign", (RTS_VOID_FCTPTR *)&pfcryptohmacsign, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x931A9470, 0x03051000)

- #define :ref:`CAL_cryptohmacsign <group___cmp_crypto___implementation_itf_1gaa675af5e8821e96ba3817fe8c3f12b81>` pfcryptohmacsign

- #define :ref:`CHK_cryptohmacsign <group___cmp_crypto___implementation_itf_1ga31b03d382c5a4da073932ecb78872be7>` (pfcryptohmacsign != NULL)

- #define :ref:`EXP_cryptohmacsign <group___cmp_crypto___implementation_itf_1gad812db834f114d7330a5093906563724>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptohmacsign", (RTS_UINTPTR) :ref:`cryptohmacsign <group___cmp_crypto___implementation_itf_1ga67d1ba31d7f48a9d6ce5c90ce4937164>` , 1, 0x931A9470, 0x03051000)

- #define :ref:`USE_cryptohmacverify <group___cmp_crypto___implementation_itf_1ga15163163b61cc2cfbdf4165525ad4ef8>` :ref:`PFCRYPTOHMACVERIFY_IEC <group___cmp_crypto___implementation_itf_1gac5bd3db17f8d5063c544a25ae4d05c2b>` pfcryptohmacverify;

- #define :ref:`EXT_cryptohmacverify <group___cmp_crypto___implementation_itf_1ga7e90826de9f61655999f6613aeca848d>` extern :ref:`PFCRYPTOHMACVERIFY_IEC <group___cmp_crypto___implementation_itf_1gac5bd3db17f8d5063c544a25ae4d05c2b>` pfcryptohmacverify;

- #define :ref:`GET_cryptohmacverify <group___cmp_crypto___implementation_itf_1ga8ed6890dca0d55254a6312d6733949f0>` s_pfCMGetAPI2( "cryptohmacverify", (RTS_VOID_FCTPTR *)&pfcryptohmacverify, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x49EEB4A9, 0x03051000)

- #define :ref:`CAL_cryptohmacverify <group___cmp_crypto___implementation_itf_1gaaf51e045f53a6eb7a0a2dc45f049ff26>` pfcryptohmacverify

- #define :ref:`CHK_cryptohmacverify <group___cmp_crypto___implementation_itf_1ga8fea748db659018a58692b4c46e8025c>` (pfcryptohmacverify != NULL)

- #define :ref:`EXP_cryptohmacverify <group___cmp_crypto___implementation_itf_1ga8680704e9e25b6e589f181de4fec4afc>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptohmacverify", (RTS_UINTPTR) :ref:`cryptohmacverify <group___cmp_crypto___implementation_itf_1ga440f0347f4ab31dc9f6c137e37ce9c4a>` , 1, 0x49EEB4A9, 0x03051000)

- #define :ref:`USE_cryptoimportasymmetrickey <group___cmp_crypto___implementation_itf_1ga2d42ee475e8cadc02afe4b89adc32d9e>` :ref:`PFCRYPTOIMPORTASYMMETRICKEY_IEC <group___cmp_crypto___implementation_itf_1ga317db3b7c9fee2e43b12e5f45345178f>` pfcryptoimportasymmetrickey;

- #define :ref:`EXT_cryptoimportasymmetrickey <group___cmp_crypto___implementation_itf_1gae11d6ea1f7a1866a18102970cd31a11b>` extern :ref:`PFCRYPTOIMPORTASYMMETRICKEY_IEC <group___cmp_crypto___implementation_itf_1ga317db3b7c9fee2e43b12e5f45345178f>` pfcryptoimportasymmetrickey;

- #define :ref:`GET_cryptoimportasymmetrickey <group___cmp_crypto___implementation_itf_1ga4d48a9e2e212b10d98540d8183cab5bd>` s_pfCMGetAPI2( "cryptoimportasymmetrickey", (RTS_VOID_FCTPTR *)&pfcryptoimportasymmetrickey, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x73EB2A6A, 0x03051000)

- #define :ref:`CAL_cryptoimportasymmetrickey <group___cmp_crypto___implementation_itf_1ga3bfdb775ee49028dede4a1bf7676b22f>` pfcryptoimportasymmetrickey

- #define :ref:`CHK_cryptoimportasymmetrickey <group___cmp_crypto___implementation_itf_1ga026914c4b8b48c9c9c132aa797f6d799>` (pfcryptoimportasymmetrickey != NULL)

- #define :ref:`EXP_cryptoimportasymmetrickey <group___cmp_crypto___implementation_itf_1ga02e462e697a719c6527075a5c2b47536>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptoimportasymmetrickey", (RTS_UINTPTR) :ref:`cryptoimportasymmetrickey <group___cmp_crypto___implementation_itf_1ga08935477983b84854d7b50e295ab822b>` , 1, 0x73EB2A6A, 0x03051000)

- #define :ref:`USE_cryptokeyexit <group___cmp_crypto___implementation_itf_1ga888922dda9720c5feca81c7e83361839>` :ref:`PFCRYPTOKEYEXIT_IEC <group___cmp_crypto___implementation_itf_1ga02d87e418c386b025b1659c4d628899b>` pfcryptokeyexit;

- #define :ref:`EXT_cryptokeyexit <group___cmp_crypto___implementation_itf_1ga637d8e16a5d3e60fd7bc07bde374aff4>` extern :ref:`PFCRYPTOKEYEXIT_IEC <group___cmp_crypto___implementation_itf_1ga02d87e418c386b025b1659c4d628899b>` pfcryptokeyexit;

- #define :ref:`GET_cryptokeyexit <group___cmp_crypto___implementation_itf_1gaf503e1488b6931236ea76d4350c2e59e>` s_pfCMGetAPI2( "cryptokeyexit", (RTS_VOID_FCTPTR *)&pfcryptokeyexit, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xD71ED5F3, 0x03051000)

- #define :ref:`CAL_cryptokeyexit <group___cmp_crypto___implementation_itf_1ga82ad45a11ff752735968bff88a4584ba>` pfcryptokeyexit

- #define :ref:`CHK_cryptokeyexit <group___cmp_crypto___implementation_itf_1gaaf6fa6b61efad44eb749b74f2fd6e2be>` (pfcryptokeyexit != NULL)

- #define :ref:`EXP_cryptokeyexit <group___cmp_crypto___implementation_itf_1gaea0f4d01819c007ff2f37452537840c9>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptokeyexit", (RTS_UINTPTR) :ref:`cryptokeyexit <group___cmp_crypto___implementation_itf_1gab68494da3c5507828e25af14ab5ffc42>` , 1, 0xD71ED5F3, 0x03051000)

- #define :ref:`USE_cryptokeyinit <group___cmp_crypto___implementation_itf_1gae1e0259107349609634bc1083c6e8cca>` :ref:`PFCRYPTOKEYINIT_IEC <group___cmp_crypto___implementation_itf_1ga92b373cb1e96ca124bea7601dc56d226>` pfcryptokeyinit;

- #define :ref:`EXT_cryptokeyinit <group___cmp_crypto___implementation_itf_1gabe979ae1bc3e4dad34013825c89d472e>` extern :ref:`PFCRYPTOKEYINIT_IEC <group___cmp_crypto___implementation_itf_1ga92b373cb1e96ca124bea7601dc56d226>` pfcryptokeyinit;

- #define :ref:`GET_cryptokeyinit <group___cmp_crypto___implementation_itf_1gab9cda66b33ab34a58d27099a4c2ac1b8>` s_pfCMGetAPI2( "cryptokeyinit", (RTS_VOID_FCTPTR *)&pfcryptokeyinit, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xE8E228B3, 0x03051000)

- #define :ref:`CAL_cryptokeyinit <group___cmp_crypto___implementation_itf_1ga782bc2da12fbbf9b2fb07032451036b7>` pfcryptokeyinit

- #define :ref:`CHK_cryptokeyinit <group___cmp_crypto___implementation_itf_1gaf5c5efffa5011fdfe8c80836433a9e06>` (pfcryptokeyinit != NULL)

- #define :ref:`EXP_cryptokeyinit <group___cmp_crypto___implementation_itf_1gabbcf9f0f2d18b2e19e0f96476091de12>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptokeyinit", (RTS_UINTPTR) :ref:`cryptokeyinit <group___cmp_crypto___implementation_itf_1gab14a86fc05f8a16792911532cc77944e>` , 1, 0xE8E228B3, 0x03051000)

- #define :ref:`USE_cryptoloadprivatekey <group___cmp_crypto___implementation_itf_1ga27a3e636f51e020bf09cdf32f4bb745b>` :ref:`PFCRYPTOLOADPRIVATEKEY_IEC <group___cmp_crypto___implementation_itf_1ga79b57e065f09ec39f546eb850801d08a>` pfcryptoloadprivatekey;

- #define :ref:`EXT_cryptoloadprivatekey <group___cmp_crypto___implementation_itf_1gaa8dd04aa76331d359c0c1501f3ee82a3>` extern :ref:`PFCRYPTOLOADPRIVATEKEY_IEC <group___cmp_crypto___implementation_itf_1ga79b57e065f09ec39f546eb850801d08a>` pfcryptoloadprivatekey;

- #define :ref:`GET_cryptoloadprivatekey <group___cmp_crypto___implementation_itf_1ga00bb20d131f26a6a4ba6f00416692031>` s_pfCMGetAPI2( "cryptoloadprivatekey", (RTS_VOID_FCTPTR *)&pfcryptoloadprivatekey, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xCFC27A76, 0x03051000)

- #define :ref:`CAL_cryptoloadprivatekey <group___cmp_crypto___implementation_itf_1ga20240887f3c65963cb8a72fd95e60567>` pfcryptoloadprivatekey

- #define :ref:`CHK_cryptoloadprivatekey <group___cmp_crypto___implementation_itf_1ga4cbbca00a4b0ac5f75794c22c61cc2cc>` (pfcryptoloadprivatekey != NULL)

- #define :ref:`EXP_cryptoloadprivatekey <group___cmp_crypto___implementation_itf_1ga2ad031731ba413c336bac1bd52149bc4>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptoloadprivatekey", (RTS_UINTPTR) :ref:`cryptoloadprivatekey <group___cmp_crypto___implementation_itf_1gaeb1e492027806db7a4962fe985ae224b>` , 1, 0xCFC27A76, 0x03051000)

- #define :ref:`USE_cryptortsbytestringexit <group___cmp_crypto___implementation_itf_1gaa0eb45fda8123adddea8aca4b31e0164>` :ref:`PFCRYPTORTSBYTESTRINGEXIT_IEC <group___cmp_crypto___implementation_itf_1gaa68a6cbabe6d96ac2319157493503787>` pfcryptortsbytestringexit;

- #define :ref:`EXT_cryptortsbytestringexit <group___cmp_crypto___implementation_itf_1ga2b212bdb156c4bfe61d21dea0af0c363>` extern :ref:`PFCRYPTORTSBYTESTRINGEXIT_IEC <group___cmp_crypto___implementation_itf_1gaa68a6cbabe6d96ac2319157493503787>` pfcryptortsbytestringexit;

- #define :ref:`GET_cryptortsbytestringexit <group___cmp_crypto___implementation_itf_1gaca26db60d51d7be3974018301a228181>` s_pfCMGetAPI2( "cryptortsbytestringexit", (RTS_VOID_FCTPTR *)&pfcryptortsbytestringexit, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x16B297C5, 0x03051000)

- #define :ref:`CAL_cryptortsbytestringexit <group___cmp_crypto___implementation_itf_1gab78e80fbbe3cfbea00b5dac5e834ffa1>` pfcryptortsbytestringexit

- #define :ref:`CHK_cryptortsbytestringexit <group___cmp_crypto___implementation_itf_1ga7ae8d2379aa75bf61a68fd97d817174f>` (pfcryptortsbytestringexit != NULL)

- #define :ref:`EXP_cryptortsbytestringexit <group___cmp_crypto___implementation_itf_1gaa18e6c4cab1892caa2dc7eb93518492a>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptortsbytestringexit", (RTS_UINTPTR) :ref:`cryptortsbytestringexit <group___cmp_crypto___implementation_itf_1gac93593b842d66018d57aaaa2a06314e1>` , 1, 0x16B297C5, 0x03051000)

- #define :ref:`USE_cryptortsbytestringinit <group___cmp_crypto___implementation_itf_1ga9e3d08692eb3445a005cf20cded0f628>` :ref:`PFCRYPTORTSBYTESTRINGINIT_IEC <group___cmp_crypto___implementation_itf_1ga2c0d7eccc27c633709e91b7f261e43e9>` pfcryptortsbytestringinit;

- #define :ref:`EXT_cryptortsbytestringinit <group___cmp_crypto___implementation_itf_1ga2775370a414674fe6c54fd4a017cc9f9>` extern :ref:`PFCRYPTORTSBYTESTRINGINIT_IEC <group___cmp_crypto___implementation_itf_1ga2c0d7eccc27c633709e91b7f261e43e9>` pfcryptortsbytestringinit;

- #define :ref:`GET_cryptortsbytestringinit <group___cmp_crypto___implementation_itf_1gae1035224dd87f5fc3a1059b6955fd3d3>` s_pfCMGetAPI2( "cryptortsbytestringinit", (RTS_VOID_FCTPTR *)&pfcryptortsbytestringinit, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xC1B4C2F9, 0x03051000)

- #define :ref:`CAL_cryptortsbytestringinit <group___cmp_crypto___implementation_itf_1gaa065fcd0248bb9769aa4b8746dfdc856>` pfcryptortsbytestringinit

- #define :ref:`CHK_cryptortsbytestringinit <group___cmp_crypto___implementation_itf_1ga610de719016ffff6be01fbab9e2de418>` (pfcryptortsbytestringinit != NULL)

- #define :ref:`EXP_cryptortsbytestringinit <group___cmp_crypto___implementation_itf_1ga12eda518c1d85dfb037989ef0d20a48e>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptortsbytestringinit", (RTS_UINTPTR) :ref:`cryptortsbytestringinit <group___cmp_crypto___implementation_itf_1ga33b5cad5c7eaf2e5693b24af18f1b186>` , 1, 0xC1B4C2F9, 0x03051000)

- #define :ref:`USE_cryptortsbytestringinit2 <group___cmp_crypto___implementation_itf_1gaccc8a6c5950ba2aa0adf545549c33336>` :ref:`PFCRYPTORTSBYTESTRINGINIT2_IEC <group___cmp_crypto___implementation_itf_1gac8b519a344377c6f2d55cac5f966ecd2>` pfcryptortsbytestringinit2;

- #define :ref:`EXT_cryptortsbytestringinit2 <group___cmp_crypto___implementation_itf_1gaf09ee69d550fa1a251ea09a675f7c808>` extern :ref:`PFCRYPTORTSBYTESTRINGINIT2_IEC <group___cmp_crypto___implementation_itf_1gac8b519a344377c6f2d55cac5f966ecd2>` pfcryptortsbytestringinit2;

- #define :ref:`GET_cryptortsbytestringinit2 <group___cmp_crypto___implementation_itf_1ga165dbcf2098851d29d18beeae1d913d1>` s_pfCMGetAPI2( "cryptortsbytestringinit2", (RTS_VOID_FCTPTR *)&pfcryptortsbytestringinit2, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xE2AA0F02, 0x03051000)

- #define :ref:`CAL_cryptortsbytestringinit2 <group___cmp_crypto___implementation_itf_1ga6c6d88786e0936b78da0e9b09ff054b2>` pfcryptortsbytestringinit2

- #define :ref:`CHK_cryptortsbytestringinit2 <group___cmp_crypto___implementation_itf_1gaed88f9b06c2382666469b76125f818a9>` (pfcryptortsbytestringinit2 != NULL)

- #define :ref:`EXP_cryptortsbytestringinit2 <group___cmp_crypto___implementation_itf_1gaa8e7205ca17052227d3fddd7f740cff3>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptortsbytestringinit2", (RTS_UINTPTR) :ref:`cryptortsbytestringinit2 <group___cmp_crypto___implementation_itf_1gacd51b70b8ad6f85f96acf68bc4bc5598>` , 1, 0xE2AA0F02, 0x03051000)

- #define :ref:`USE_cryptosignaturegenerate <group___cmp_crypto___implementation_itf_1gad00dee3aa98f51ed335e3c53609aebe1>` :ref:`PFCRYPTOSIGNATUREGENERATE_IEC <group___cmp_crypto___implementation_itf_1ga11decd1854315ff7a678780005c7c231>` pfcryptosignaturegenerate;

- #define :ref:`EXT_cryptosignaturegenerate <group___cmp_crypto___implementation_itf_1ga848b417473f75577dd1ae2842af38d49>` extern :ref:`PFCRYPTOSIGNATUREGENERATE_IEC <group___cmp_crypto___implementation_itf_1ga11decd1854315ff7a678780005c7c231>` pfcryptosignaturegenerate;

- #define :ref:`GET_cryptosignaturegenerate <group___cmp_crypto___implementation_itf_1gab9f729f82ad11d53a193e47225d83e40>` s_pfCMGetAPI2( "cryptosignaturegenerate", (RTS_VOID_FCTPTR *)&pfcryptosignaturegenerate, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x0C2FBF80, 0x03051000)

- #define :ref:`CAL_cryptosignaturegenerate <group___cmp_crypto___implementation_itf_1ga9b8fc7ccf2bd0a32ff97d6abb1d2b827>` pfcryptosignaturegenerate

- #define :ref:`CHK_cryptosignaturegenerate <group___cmp_crypto___implementation_itf_1ga2e90ad7e9d209a7ec849e507b634a2c5>` (pfcryptosignaturegenerate != NULL)

- #define :ref:`EXP_cryptosignaturegenerate <group___cmp_crypto___implementation_itf_1gac6ee8b1a17fea4515a4e5819f4947754>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptosignaturegenerate", (RTS_UINTPTR) :ref:`cryptosignaturegenerate <group___cmp_crypto___implementation_itf_1gaefa32fa537d028a5b72d71f7a4bdfdab>` , 1, 0x0C2FBF80, 0x03051000)

- #define :ref:`USE_cryptosignatureverify <group___cmp_crypto___implementation_itf_1gaaedd921dd0dd9ee43572be4312d7751a>` :ref:`PFCRYPTOSIGNATUREVERIFY_IEC <group___cmp_crypto___implementation_itf_1ga2ee1eaedec16a6c50c17580201454d25>` pfcryptosignatureverify;

- #define :ref:`EXT_cryptosignatureverify <group___cmp_crypto___implementation_itf_1gab723a95d11dbe7c6a329488cd4e8ebad>` extern :ref:`PFCRYPTOSIGNATUREVERIFY_IEC <group___cmp_crypto___implementation_itf_1ga2ee1eaedec16a6c50c17580201454d25>` pfcryptosignatureverify;

- #define :ref:`GET_cryptosignatureverify <group___cmp_crypto___implementation_itf_1ga39ed0e7a2f6e1c1758e53d4e059edf21>` s_pfCMGetAPI2( "cryptosignatureverify", (RTS_VOID_FCTPTR *)&pfcryptosignatureverify, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x3F425BB9, 0x03051000)

- #define :ref:`CAL_cryptosignatureverify <group___cmp_crypto___implementation_itf_1gada2110f9de5543b0f3a38f92aa54bf5a>` pfcryptosignatureverify

- #define :ref:`CHK_cryptosignatureverify <group___cmp_crypto___implementation_itf_1ga1a7c203a06f007a20ba103bd270b1b03>` (pfcryptosignatureverify != NULL)

- #define :ref:`EXP_cryptosignatureverify <group___cmp_crypto___implementation_itf_1ga5906eefda76f02b26779a82f96f78dad>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptosignatureverify", (RTS_UINTPTR) :ref:`cryptosignatureverify <group___cmp_crypto___implementation_itf_1ga0921707653e61830f7319b25de3149a3>` , 1, 0x3F425BB9, 0x03051000)

- #define :ref:`USE_cryptostoreprivatekey <group___cmp_crypto___implementation_itf_1gaeede057656774b0cca2c7675f1c97d17>` :ref:`PFCRYPTOSTOREPRIVATEKEY_IEC <group___cmp_crypto___implementation_itf_1gae4506fd23d1d31b678dd01a3eb945f68>` pfcryptostoreprivatekey;

- #define :ref:`EXT_cryptostoreprivatekey <group___cmp_crypto___implementation_itf_1gaed701ddf1def2f1a9156c318d76814f7>` extern :ref:`PFCRYPTOSTOREPRIVATEKEY_IEC <group___cmp_crypto___implementation_itf_1gae4506fd23d1d31b678dd01a3eb945f68>` pfcryptostoreprivatekey;

- #define :ref:`GET_cryptostoreprivatekey <group___cmp_crypto___implementation_itf_1ga1a82d488c3193edd74c2f949196ae3d8>` s_pfCMGetAPI2( "cryptostoreprivatekey", (RTS_VOID_FCTPTR *)&pfcryptostoreprivatekey, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x348144FC, 0x03051000)

- #define :ref:`CAL_cryptostoreprivatekey <group___cmp_crypto___implementation_itf_1ga732596720489e6a3f098fc2f4e793f42>` pfcryptostoreprivatekey

- #define :ref:`CHK_cryptostoreprivatekey <group___cmp_crypto___implementation_itf_1gafb2df1382b3ed9ed1b9d9d6ed122e9a7>` (pfcryptostoreprivatekey != NULL)

- #define :ref:`EXP_cryptostoreprivatekey <group___cmp_crypto___implementation_itf_1gadd75fa41f7d0f4adc64c4f6afcb1517d>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptostoreprivatekey", (RTS_UINTPTR) :ref:`cryptostoreprivatekey <group___cmp_crypto___implementation_itf_1ga61b647cdf8e0dd71c579ea27b60715b9>` , 1, 0x348144FC, 0x03051000)

- #define :ref:`USE_cryptosymmetricdecrypt <group___cmp_crypto___implementation_itf_1ga0e576679af9effd4f1c7703ab96a4ca2>` :ref:`PFCRYPTOSYMMETRICDECRYPT_IEC <group___cmp_crypto___implementation_itf_1gac19e4d4b7a8501dbbbe908109952a1f0>` pfcryptosymmetricdecrypt;

- #define :ref:`EXT_cryptosymmetricdecrypt <group___cmp_crypto___implementation_itf_1gaf62118331177c32f05822c43d4eb81c9>` extern :ref:`PFCRYPTOSYMMETRICDECRYPT_IEC <group___cmp_crypto___implementation_itf_1gac19e4d4b7a8501dbbbe908109952a1f0>` pfcryptosymmetricdecrypt;

- #define :ref:`GET_cryptosymmetricdecrypt <group___cmp_crypto___implementation_itf_1gabd27e5ed4a291ec02fd33f8b36a86736>` s_pfCMGetAPI2( "cryptosymmetricdecrypt", (RTS_VOID_FCTPTR *)&pfcryptosymmetricdecrypt, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xF3963545, 0x03051000)

- #define :ref:`CAL_cryptosymmetricdecrypt <group___cmp_crypto___implementation_itf_1ga24d4047e0713266804b6854c3b1c4c6c>` pfcryptosymmetricdecrypt

- #define :ref:`CHK_cryptosymmetricdecrypt <group___cmp_crypto___implementation_itf_1ga64ee38f30296203f4803f030e4e40463>` (pfcryptosymmetricdecrypt != NULL)

- #define :ref:`EXP_cryptosymmetricdecrypt <group___cmp_crypto___implementation_itf_1gac50593d47155256853d9eb374686ddc5>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptosymmetricdecrypt", (RTS_UINTPTR) :ref:`cryptosymmetricdecrypt <group___cmp_crypto___implementation_itf_1ga429aa7f04d7eba721e3e22f7cc51df8b>` , 1, 0xF3963545, 0x03051000)

- #define :ref:`USE_cryptosymmetricencrypt <group___cmp_crypto___implementation_itf_1gaeb0266a88b88ebe87efb6e8e48018ba4>` :ref:`PFCRYPTOSYMMETRICENCRYPT_IEC <group___cmp_crypto___implementation_itf_1gae55e3cafb182dbf96acfb2729185dd64>` pfcryptosymmetricencrypt;

- #define :ref:`EXT_cryptosymmetricencrypt <group___cmp_crypto___implementation_itf_1ga7a7a635b6947e2f56d4b4a7402995907>` extern :ref:`PFCRYPTOSYMMETRICENCRYPT_IEC <group___cmp_crypto___implementation_itf_1gae55e3cafb182dbf96acfb2729185dd64>` pfcryptosymmetricencrypt;

- #define :ref:`GET_cryptosymmetricencrypt <group___cmp_crypto___implementation_itf_1ga0dc2db2d53c782130e9302a476d9662a>` s_pfCMGetAPI2( "cryptosymmetricencrypt", (RTS_VOID_FCTPTR *)&pfcryptosymmetricencrypt, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x8D659084, 0x03051000)

- #define :ref:`CAL_cryptosymmetricencrypt <group___cmp_crypto___implementation_itf_1ga71bdbe3eb82cf5d702ddec3f3a04fdd9>` pfcryptosymmetricencrypt

- #define :ref:`CHK_cryptosymmetricencrypt <group___cmp_crypto___implementation_itf_1gad3ea4684910b2d0623d93c06394a9287>` (pfcryptosymmetricencrypt != NULL)

- #define :ref:`EXP_cryptosymmetricencrypt <group___cmp_crypto___implementation_itf_1ga6dad4c073fd3d838bac79e05a837d58d>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"cryptosymmetricencrypt", (RTS_UINTPTR) :ref:`cryptosymmetricencrypt <group___cmp_crypto___implementation_itf_1ga16d196e0bf642b00b97f9f723192ce10>` , 1, 0x8D659084, 0x03051000)

- #define :ref:`ITF_CmpCrypto_Implementation <group___cmp_crypto___implementation_itf_1gac489802bf72bcc3a6fe89f47a46faa30>`

- #define :ref:`EXTITF_CmpCrypto_Implementation <group___cmp_crypto___implementation_itf_1gacde574fad630321d7fb29ed2a62d55fb>`

Typedefs
--------

- typedef struct :ref:`tagcryptoasymmetricdecrypt_struct <structtagcryptoasymmetricdecrypt__struct>` :ref:`cryptoasymmetricdecrypt_struct <group___cmp_crypto___implementation_itf_1ga140b30bc9d0c2bcce3bd9bad1ceb58eb>`

- typedef void(* :ref:`PFCRYPTOASYMMETRICDECRYPT_IEC <group___cmp_crypto___implementation_itf_1ga2eb6b704659b8727da0eb54c8e2b859f>`)(cryptoasymmetricdecrypt_struct *p)

- typedef struct :ref:`tagcryptoasymmetricencrypt_struct <structtagcryptoasymmetricencrypt__struct>` :ref:`cryptoasymmetricencrypt_struct <group___cmp_crypto___implementation_itf_1ga09d4a65a6ec398b1c50f11019247c899>`

- typedef void(* :ref:`PFCRYPTOASYMMETRICENCRYPT_IEC <group___cmp_crypto___implementation_itf_1ga5ba9b5d16ee219e50a877070f3f012fc>`)(cryptoasymmetricencrypt_struct *p)

- typedef struct :ref:`tagcryptodeleteprivatekey_struct <structtagcryptodeleteprivatekey__struct>` :ref:`cryptodeleteprivatekey_struct <group___cmp_crypto___implementation_itf_1ga2d3c115cfd9989eaa29c209fc07571fc>`

- typedef void(* :ref:`PFCRYPTODELETEPRIVATEKEY_IEC <group___cmp_crypto___implementation_itf_1ga2c64a023685a0c73eca65bed017483f6>`)(cryptodeleteprivatekey_struct *p)

- typedef struct :ref:`tagcryptoderivekey_struct <structtagcryptoderivekey__struct>` :ref:`cryptoderivekey_struct <group___cmp_crypto___implementation_itf_1gab983e012f18288f25407927864a43d9f>`

- typedef void(* :ref:`PFCRYPTODERIVEKEY_IEC <group___cmp_crypto___implementation_itf_1ga6d443d99bd0ffe49d7f13381052e6f26>`)(cryptoderivekey_struct *p)

- typedef struct :ref:`tagcryptoexportasymmetrickey_struct <structtagcryptoexportasymmetrickey__struct>` :ref:`cryptoexportasymmetrickey_struct <group___cmp_crypto___implementation_itf_1gaa8012cc854d4e4e021ea5c841649469b>`

- typedef void(* :ref:`PFCRYPTOEXPORTASYMMETRICKEY_IEC <group___cmp_crypto___implementation_itf_1ga472ccd3952cb4ba069c17b7cf9a967ce>`)(cryptoexportasymmetrickey_struct *p)

- typedef struct :ref:`tagcryptogenerateasymmetrickeypair_struct <structtagcryptogenerateasymmetrickeypair__struct>` :ref:`cryptogenerateasymmetrickeypair_struct <group___cmp_crypto___implementation_itf_1gae1d7d5c564c69206b39290a482421339>`

- typedef void(* :ref:`PFCRYPTOGENERATEASYMMETRICKEYPAIR_IEC <group___cmp_crypto___implementation_itf_1ga5f15c3ed356b6556195e75d16b8b96f9>`)(cryptogenerateasymmetrickeypair_struct *p)

- typedef struct :ref:`tagcryptogeneratehash_struct <structtagcryptogeneratehash__struct>` :ref:`cryptogeneratehash_struct <group___cmp_crypto___implementation_itf_1ga03c30660a07df57b0641aebde0bdba41>`

- typedef void(* :ref:`PFCRYPTOGENERATEHASH_IEC <group___cmp_crypto___implementation_itf_1ga6de22c0463c60ac3349bf0d3c5ef503e>`)(cryptogeneratehash_struct *p)

- typedef struct :ref:`tagcryptogeneraterandomnumber_struct <structtagcryptogeneraterandomnumber__struct>` :ref:`cryptogeneraterandomnumber_struct <group___cmp_crypto___implementation_itf_1ga2113f63bb640923f36b0f7f31caa0593>`

- typedef void(* :ref:`PFCRYPTOGENERATERANDOMNUMBER_IEC <group___cmp_crypto___implementation_itf_1ga1fa2636790dfbabece0400c9fc1dc23d>`)(cryptogeneraterandomnumber_struct *p)

- typedef struct :ref:`tagcryptogetalgorithmbyid_struct <structtagcryptogetalgorithmbyid__struct>` :ref:`cryptogetalgorithmbyid_struct <group___cmp_crypto___implementation_itf_1gab7387611df856bc764f1021eb80543ea>`

- typedef void(* :ref:`PFCRYPTOGETALGORITHMBYID_IEC <group___cmp_crypto___implementation_itf_1ga2cbef0a9b54947ee0ed523e892619f74>`)(cryptogetalgorithmbyid_struct *p)

- typedef struct :ref:`tagcryptogetasymmetrickeylength_struct <structtagcryptogetasymmetrickeylength__struct>` :ref:`cryptogetasymmetrickeylength_struct <group___cmp_crypto___implementation_itf_1gace88e4ed4aeab4ea0168747a501d1445>`

- typedef void(* :ref:`PFCRYPTOGETASYMMETRICKEYLENGTH_IEC <group___cmp_crypto___implementation_itf_1gac97e874b26ee4cc110112cc847c11417>`)(cryptogetasymmetrickeylength_struct *p)

- typedef struct :ref:`tagcryptogetfirstalgorithm_struct <structtagcryptogetfirstalgorithm__struct>` :ref:`cryptogetfirstalgorithm_struct <group___cmp_crypto___implementation_itf_1ga00b14d4628730acf21b78245f9dbd68e>`

- typedef void(* :ref:`PFCRYPTOGETFIRSTALGORITHM_IEC <group___cmp_crypto___implementation_itf_1gaf960df73c9dde3539d6d7ebf732b82ee>`)(cryptogetfirstalgorithm_struct *p)

- typedef struct :ref:`tagcryptogetnextalgorithm_struct <structtagcryptogetnextalgorithm__struct>` :ref:`cryptogetnextalgorithm_struct <group___cmp_crypto___implementation_itf_1gade9645ac2a97fec399d2742ace1cf06f>`

- typedef void(* :ref:`PFCRYPTOGETNEXTALGORITHM_IEC <group___cmp_crypto___implementation_itf_1gad89b119a4975accce454e5ee7d5b40f2>`)(cryptogetnextalgorithm_struct *p)

- typedef struct :ref:`tagcryptohmacsign_struct <structtagcryptohmacsign__struct>` :ref:`cryptohmacsign_struct <group___cmp_crypto___implementation_itf_1ga99c39b83c2e75adfbaa4a02491ac4258>`

- typedef void(* :ref:`PFCRYPTOHMACSIGN_IEC <group___cmp_crypto___implementation_itf_1ga9145f62e5fbadb408e8f3e2e8b744644>`)(cryptohmacsign_struct *p)

- typedef struct :ref:`tagcryptohmacverify_struct <structtagcryptohmacverify__struct>` :ref:`cryptohmacverify_struct <group___cmp_crypto___implementation_itf_1ga785cb4186390a70fcf192ea80f5351fd>`

- typedef void(* :ref:`PFCRYPTOHMACVERIFY_IEC <group___cmp_crypto___implementation_itf_1gac5bd3db17f8d5063c544a25ae4d05c2b>`)(cryptohmacverify_struct *p)

- typedef struct :ref:`tagcryptoimportasymmetrickey_struct <structtagcryptoimportasymmetrickey__struct>` :ref:`cryptoimportasymmetrickey_struct <group___cmp_crypto___implementation_itf_1ga2d59913249376d3bc4f5a4e76f7a5e92>`

- typedef void(* :ref:`PFCRYPTOIMPORTASYMMETRICKEY_IEC <group___cmp_crypto___implementation_itf_1ga317db3b7c9fee2e43b12e5f45345178f>`)(cryptoimportasymmetrickey_struct *p)

- typedef struct :ref:`tagcryptokeyexit_struct <structtagcryptokeyexit__struct>` :ref:`cryptokeyexit_struct <group___cmp_crypto___implementation_itf_1gaefa9c48f9b1328a7b393a14e3c5ab683>`

- typedef void(* :ref:`PFCRYPTOKEYEXIT_IEC <group___cmp_crypto___implementation_itf_1ga02d87e418c386b025b1659c4d628899b>`)(cryptokeyexit_struct *p)

- typedef struct :ref:`tagcryptokeyinit_struct <structtagcryptokeyinit__struct>` :ref:`cryptokeyinit_struct <group___cmp_crypto___implementation_itf_1ga9689cfb7cae0c400a54294b255d919f7>`

- typedef void(* :ref:`PFCRYPTOKEYINIT_IEC <group___cmp_crypto___implementation_itf_1ga92b373cb1e96ca124bea7601dc56d226>`)(cryptokeyinit_struct *p)

- typedef struct :ref:`tagcryptoloadprivatekey_struct <structtagcryptoloadprivatekey__struct>` :ref:`cryptoloadprivatekey_struct <group___cmp_crypto___implementation_itf_1ga1b4e24fbb446eded12a66d8f9489665f>`

- typedef void(* :ref:`PFCRYPTOLOADPRIVATEKEY_IEC <group___cmp_crypto___implementation_itf_1ga79b57e065f09ec39f546eb850801d08a>`)(cryptoloadprivatekey_struct *p)

- typedef struct :ref:`tagcryptortsbytestringexit_struct <structtagcryptortsbytestringexit__struct>` :ref:`cryptortsbytestringexit_struct <group___cmp_crypto___implementation_itf_1ga310851d15be08a6d0ebb4481ef6f2f6c>`

- typedef void(* :ref:`PFCRYPTORTSBYTESTRINGEXIT_IEC <group___cmp_crypto___implementation_itf_1gaa68a6cbabe6d96ac2319157493503787>`)(cryptortsbytestringexit_struct *p)

- typedef struct :ref:`tagcryptortsbytestringinit_struct <structtagcryptortsbytestringinit__struct>` :ref:`cryptortsbytestringinit_struct <group___cmp_crypto___implementation_itf_1gaf6b5b13eaf3db4a0e87ca078cb8e18de>`

- typedef void(* :ref:`PFCRYPTORTSBYTESTRINGINIT_IEC <group___cmp_crypto___implementation_itf_1ga2c0d7eccc27c633709e91b7f261e43e9>`)(cryptortsbytestringinit_struct *p)

- typedef struct :ref:`tagcryptortsbytestringinit2_struct <structtagcryptortsbytestringinit2__struct>` :ref:`cryptortsbytestringinit2_struct <group___cmp_crypto___implementation_itf_1gafa5d65af67850d5a6ae69e6fca547c8b>`

- typedef void(* :ref:`PFCRYPTORTSBYTESTRINGINIT2_IEC <group___cmp_crypto___implementation_itf_1gac8b519a344377c6f2d55cac5f966ecd2>`)(cryptortsbytestringinit2_struct *p)

- typedef struct :ref:`tagcryptosignaturegenerate_struct <structtagcryptosignaturegenerate__struct>` :ref:`cryptosignaturegenerate_struct <group___cmp_crypto___implementation_itf_1ga8a4c52fd15248f8b1f4017ed32d309c1>`

- typedef void(* :ref:`PFCRYPTOSIGNATUREGENERATE_IEC <group___cmp_crypto___implementation_itf_1ga11decd1854315ff7a678780005c7c231>`)(cryptosignaturegenerate_struct *p)

- typedef struct :ref:`tagcryptosignatureverify_struct <structtagcryptosignatureverify__struct>` :ref:`cryptosignatureverify_struct <group___cmp_crypto___implementation_itf_1gaa466b77b05ccb23cb6b3d6b20ee0222c>`

- typedef void(* :ref:`PFCRYPTOSIGNATUREVERIFY_IEC <group___cmp_crypto___implementation_itf_1ga2ee1eaedec16a6c50c17580201454d25>`)(cryptosignatureverify_struct *p)

- typedef struct :ref:`tagcryptostoreprivatekey_struct <structtagcryptostoreprivatekey__struct>` :ref:`cryptostoreprivatekey_struct <group___cmp_crypto___implementation_itf_1ga31e4f61e97fc6d5dc8c599ca12eb95ac>`

- typedef void(* :ref:`PFCRYPTOSTOREPRIVATEKEY_IEC <group___cmp_crypto___implementation_itf_1gae4506fd23d1d31b678dd01a3eb945f68>`)(cryptostoreprivatekey_struct *p)

- typedef struct :ref:`tagcryptosymmetricdecrypt_struct <structtagcryptosymmetricdecrypt__struct>` :ref:`cryptosymmetricdecrypt_struct <group___cmp_crypto___implementation_itf_1gaaf3bcc4903e64d143be5385576619c50>`

- typedef void(* :ref:`PFCRYPTOSYMMETRICDECRYPT_IEC <group___cmp_crypto___implementation_itf_1gac19e4d4b7a8501dbbbe908109952a1f0>`)(cryptosymmetricdecrypt_struct *p)

- typedef struct :ref:`tagcryptosymmetricencrypt_struct <structtagcryptosymmetricencrypt__struct>` :ref:`cryptosymmetricencrypt_struct <group___cmp_crypto___implementation_itf_1gafdadae40c983a197256093ae88cd9c1d>`

- typedef void(* :ref:`PFCRYPTOSYMMETRICENCRYPT_IEC <group___cmp_crypto___implementation_itf_1gae55e3cafb182dbf96acfb2729185dd64>`)(cryptosymmetricencrypt_struct *p)

- typedef :ref:`ICmpCrypto_Implementation_C <struct_i_cmp_crypto___implementation___c>` :ref:`ICmpCrypto_Implementation <group___cmp_crypto___implementation_itf_1ga475aa6a306290c0362c9f27248788354>`

Functions
---------

- void :ref:`cryptoasymmetricdecrypt <group___cmp_crypto___implementation_itf_1gab92bb6b95471220b1eba750a3dd9e2a0>` (:ref:`cryptoasymmetricdecrypt_struct <group___cmp_crypto___implementation_itf_1ga140b30bc9d0c2bcce3bd9bad1ceb58eb>` * p)

- void :ref:`cryptoasymmetricencrypt <group___cmp_crypto___implementation_itf_1gacbf4d058438159477214f8e0f15d0d4a>` (:ref:`cryptoasymmetricencrypt_struct <group___cmp_crypto___implementation_itf_1ga09d4a65a6ec398b1c50f11019247c899>` * p)

- void :ref:`cryptodeleteprivatekey <group___cmp_crypto___implementation_itf_1gae4a62de4c2e70d28c3292af9f697dc3d>` (:ref:`cryptodeleteprivatekey_struct <group___cmp_crypto___implementation_itf_1ga2d3c115cfd9989eaa29c209fc07571fc>` * p)

- void :ref:`cryptoderivekey <group___cmp_crypto___implementation_itf_1ga22e62fa62bd7f50eab6ccd545c98e713>` (:ref:`cryptoderivekey_struct <group___cmp_crypto___implementation_itf_1gab983e012f18288f25407927864a43d9f>` * p)

- void :ref:`cryptoexportasymmetrickey <group___cmp_crypto___implementation_itf_1ga6abe497911492c06ae4108cc8f2beae4>` (:ref:`cryptoexportasymmetrickey_struct <group___cmp_crypto___implementation_itf_1gaa8012cc854d4e4e021ea5c841649469b>` * p)

- void :ref:`cryptogenerateasymmetrickeypair <group___cmp_crypto___implementation_itf_1ga302342ae83ace8a9d5fc657aef49df43>` (:ref:`cryptogenerateasymmetrickeypair_struct <group___cmp_crypto___implementation_itf_1gae1d7d5c564c69206b39290a482421339>` * p)

- void :ref:`cryptogeneratehash <group___cmp_crypto___implementation_itf_1gace43eaf55f95c456a35868c30b002f85>` (:ref:`cryptogeneratehash_struct <group___cmp_crypto___implementation_itf_1ga03c30660a07df57b0641aebde0bdba41>` * p)

- void :ref:`cryptogeneraterandomnumber <group___cmp_crypto___implementation_itf_1ga370888592dca2b5837867696326a6dc3>` (:ref:`cryptogeneraterandomnumber_struct <group___cmp_crypto___implementation_itf_1ga2113f63bb640923f36b0f7f31caa0593>` * p)

- void :ref:`cryptogetalgorithmbyid <group___cmp_crypto___implementation_itf_1ga2d3ee83c4597e071f7b2dd563e5954bc>` (:ref:`cryptogetalgorithmbyid_struct <group___cmp_crypto___implementation_itf_1gab7387611df856bc764f1021eb80543ea>` * p)

- void :ref:`cryptogetasymmetrickeylength <group___cmp_crypto___implementation_itf_1gaf98225d144264dabcc05f4cf9f59317e>` (:ref:`cryptogetasymmetrickeylength_struct <group___cmp_crypto___implementation_itf_1gace88e4ed4aeab4ea0168747a501d1445>` * p)

- void :ref:`cryptogetfirstalgorithm <group___cmp_crypto___implementation_itf_1ga1f3305ea9eee09d52a87e242f02d2b7c>` (:ref:`cryptogetfirstalgorithm_struct <group___cmp_crypto___implementation_itf_1ga00b14d4628730acf21b78245f9dbd68e>` * p)

- void :ref:`cryptogetnextalgorithm <group___cmp_crypto___implementation_itf_1ga6481e0d534d4a0a98c0b50f2c419721f>` (:ref:`cryptogetnextalgorithm_struct <group___cmp_crypto___implementation_itf_1gade9645ac2a97fec399d2742ace1cf06f>` * p)

- void :ref:`cryptohmacsign <group___cmp_crypto___implementation_itf_1ga67d1ba31d7f48a9d6ce5c90ce4937164>` (:ref:`cryptohmacsign_struct <group___cmp_crypto___implementation_itf_1ga99c39b83c2e75adfbaa4a02491ac4258>` * p)

- void :ref:`cryptohmacverify <group___cmp_crypto___implementation_itf_1ga440f0347f4ab31dc9f6c137e37ce9c4a>` (:ref:`cryptohmacverify_struct <group___cmp_crypto___implementation_itf_1ga785cb4186390a70fcf192ea80f5351fd>` * p)

- void :ref:`cryptoimportasymmetrickey <group___cmp_crypto___implementation_itf_1ga08935477983b84854d7b50e295ab822b>` (:ref:`cryptoimportasymmetrickey_struct <group___cmp_crypto___implementation_itf_1ga2d59913249376d3bc4f5a4e76f7a5e92>` * p)

- void :ref:`cryptokeyexit <group___cmp_crypto___implementation_itf_1gab68494da3c5507828e25af14ab5ffc42>` (:ref:`cryptokeyexit_struct <group___cmp_crypto___implementation_itf_1gaefa9c48f9b1328a7b393a14e3c5ab683>` * p)

- void :ref:`cryptokeyinit <group___cmp_crypto___implementation_itf_1gab14a86fc05f8a16792911532cc77944e>` (:ref:`cryptokeyinit_struct <group___cmp_crypto___implementation_itf_1ga9689cfb7cae0c400a54294b255d919f7>` * p)

- void :ref:`cryptoloadprivatekey <group___cmp_crypto___implementation_itf_1gaeb1e492027806db7a4962fe985ae224b>` (:ref:`cryptoloadprivatekey_struct <group___cmp_crypto___implementation_itf_1ga1b4e24fbb446eded12a66d8f9489665f>` * p)

- void :ref:`cryptortsbytestringexit <group___cmp_crypto___implementation_itf_1gac93593b842d66018d57aaaa2a06314e1>` (:ref:`cryptortsbytestringexit_struct <group___cmp_crypto___implementation_itf_1ga310851d15be08a6d0ebb4481ef6f2f6c>` * p)

- void :ref:`cryptortsbytestringinit <group___cmp_crypto___implementation_itf_1ga33b5cad5c7eaf2e5693b24af18f1b186>` (:ref:`cryptortsbytestringinit_struct <group___cmp_crypto___implementation_itf_1gaf6b5b13eaf3db4a0e87ca078cb8e18de>` * p)

- void :ref:`cryptortsbytestringinit2 <group___cmp_crypto___implementation_itf_1gacd51b70b8ad6f85f96acf68bc4bc5598>` (:ref:`cryptortsbytestringinit2_struct <group___cmp_crypto___implementation_itf_1gafa5d65af67850d5a6ae69e6fca547c8b>` * p)

- void :ref:`cryptosignaturegenerate <group___cmp_crypto___implementation_itf_1gaefa32fa537d028a5b72d71f7a4bdfdab>` (:ref:`cryptosignaturegenerate_struct <group___cmp_crypto___implementation_itf_1ga8a4c52fd15248f8b1f4017ed32d309c1>` * p)

- void :ref:`cryptosignatureverify <group___cmp_crypto___implementation_itf_1ga0921707653e61830f7319b25de3149a3>` (:ref:`cryptosignatureverify_struct <group___cmp_crypto___implementation_itf_1gaa466b77b05ccb23cb6b3d6b20ee0222c>` * p)

- void :ref:`cryptostoreprivatekey <group___cmp_crypto___implementation_itf_1ga61b647cdf8e0dd71c579ea27b60715b9>` (:ref:`cryptostoreprivatekey_struct <group___cmp_crypto___implementation_itf_1ga31e4f61e97fc6d5dc8c599ca12eb95ac>` * p)

- void :ref:`cryptosymmetricdecrypt <group___cmp_crypto___implementation_itf_1ga429aa7f04d7eba721e3e22f7cc51df8b>` (:ref:`cryptosymmetricdecrypt_struct <group___cmp_crypto___implementation_itf_1gaaf3bcc4903e64d143be5385576619c50>` * p)

- void :ref:`cryptosymmetricencrypt <group___cmp_crypto___implementation_itf_1ga16d196e0bf642b00b97f9f723192ce10>` (:ref:`cryptosymmetricencrypt_struct <group___cmp_crypto___implementation_itf_1gafdadae40c983a197256093ae88cd9c1d>` * p)

Detailed Description
--------------------

Definition in file CmpCrypto_ImplementationItf.h

 
.. last line of file.rst template
.. last line of composition.rst template


