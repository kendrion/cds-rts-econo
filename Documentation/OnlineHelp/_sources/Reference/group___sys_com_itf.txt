.. first line of composition.rst template

.. first line of group.rst template

.. _group___sys_com_itf:

=========
SysComItf
=========

Interface of SysCom. :ref:`More... <group___sys_com_itf-details>`

Modules
-------

- :ref:`Baudrates <group___sys_com_itf___baudrates>`

- :ref:`Com port extended settings <group___sys_com_itf___comportextendedsettings>`

- :ref:`Com port settings <group___sys_com_itf___comportsettings>`

- :ref:`Com ports <group___sys_com_itf___comports>`

- :ref:`Event parameter <group___sys_com_itf___eventparameter>`

- :ref:`Events <group___sys_com_itf___events>`

- :ref:`Parity <group___sys_com_itf___parity>`

- :ref:`Settings <group___sys_com_itf___settings>`

- :ref:`Stop bits <group___sys_com_itf___stopbits>`

- :ref:`Timeouts <group___sys_com_itf___timeouts>`

Data Structures
---------------

- struct :ref:`tagsyscomclose_struct <structtagsyscomclose__struct>`

- struct :ref:`tagsyscomgetsettings_struct <structtagsyscomgetsettings__struct>`

- struct :ref:`tagsyscomopen_struct <structtagsyscomopen__struct>`

- struct :ref:`tagsyscomopen2_struct <structtagsyscomopen2__struct>`

- struct :ref:`tagsyscompurge_struct <structtagsyscompurge__struct>`

- struct :ref:`tagsyscomread_struct <structtagsyscomread__struct>`

- struct :ref:`tagsyscomsetsettings_struct <structtagsyscomsetsettings__struct>`

- struct :ref:`tagsyscomsettimeout_struct <structtagsyscomsettimeout__struct>`

- struct :ref:`tagsyscomwrite_struct <structtagsyscomwrite__struct>`

- struct :ref:`ISysCom_C <struct_i_sys_com___c>`

Macros
------

- #define :ref:`ITF_SysCom <group___sys_com_itf_1gabfca817154b1019275366a1702820eef>`

- #define :ref:`EXTITF_SysCom <group___sys_com_itf_1gaf6d44fd2e0ffb8d094d03e734870ed1e>`

Typedefs
--------

- typedef struct :ref:`tagsyscomclose_struct <structtagsyscomclose__struct>` :ref:`syscomclose_struct <group___sys_com_itf_1ga3308d78035caed2aef663e0bd8c7afd6>`

- typedef struct :ref:`tagsyscomgetsettings_struct <structtagsyscomgetsettings__struct>` :ref:`syscomgetsettings_struct <group___sys_com_itf_1ga7e26dd4ec2e7914f64f57e105442ca3c>`

- typedef struct :ref:`tagsyscomopen_struct <structtagsyscomopen__struct>` :ref:`syscomopen_struct <group___sys_com_itf_1gae0fb149d6fe5786904b1a985d3eea046>`

- typedef struct :ref:`tagsyscomopen2_struct <structtagsyscomopen2__struct>` :ref:`syscomopen2_struct <group___sys_com_itf_1ga68d1dc1ba9f40cd4a23fa307ff994fe1>`

- typedef struct :ref:`tagsyscompurge_struct <structtagsyscompurge__struct>` :ref:`syscompurge_struct <group___sys_com_itf_1gad21fe96acf909e0c0c4488f5af048986>`

- typedef struct :ref:`tagsyscomread_struct <structtagsyscomread__struct>` :ref:`syscomread_struct <group___sys_com_itf_1ga5826d9f8571af91c22ffddc6fc615dc1>`

- typedef struct :ref:`tagsyscomsetsettings_struct <structtagsyscomsetsettings__struct>` :ref:`syscomsetsettings_struct <group___sys_com_itf_1ga9d9a1056c695224dca3c30d419382463>`

- typedef struct :ref:`tagsyscomsettimeout_struct <structtagsyscomsettimeout__struct>` :ref:`syscomsettimeout_struct <group___sys_com_itf_1ga4cdb08bbc06f84e0baf0ef3208cb9500>`

- typedef struct :ref:`tagsyscomwrite_struct <structtagsyscomwrite__struct>` :ref:`syscomwrite_struct <group___sys_com_itf_1gae655e4f66c8b7201920833dc6e02c93d>`

- typedef :ref:`COM_Settings <group___sys_com_itf___comportsettings_1ga2a1e08f3cfcbf3f3553764f75c3b966a>` :ref:`COMSettings <group___sys_com_itf_1gac0d8d7a7a75e08eb5c7bbf5559874242>`

- typedef :ref:`COM_SettingsEx <group___sys_com_itf___comportextendedsettings_1ga850ed8a9016bc7f6f8e45c850379c4c9>` :ref:`COMSettingsEx <group___sys_com_itf_1gaf69acb721dcf34b93878e98aa44e433f>`

- typedef :ref:`ISysCom_C <struct_i_sys_com___c>` :ref:`ISysCom <group___sys_com_itf_1ga0b8fbec3154b167f3c6867a15ab44f88>`

Functions
---------

- void :ref:`syscomclose <group___sys_com_itf_1ga0df7b41fde082ecb1466b597d796de1d>` (:ref:`syscomclose_struct <group___sys_com_itf_1ga3308d78035caed2aef663e0bd8c7afd6>` * p)

- void :ref:`syscomgetsettings <group___sys_com_itf_1gae11e26a5385ee5ec33a28629a61d8dd7>` (:ref:`syscomgetsettings_struct <group___sys_com_itf_1ga7e26dd4ec2e7914f64f57e105442ca3c>` * p)

- void :ref:`syscomopen <group___sys_com_itf_1gac133791775821e103cef6e92ef824cb5>` (:ref:`syscomopen_struct <group___sys_com_itf_1gae0fb149d6fe5786904b1a985d3eea046>` * p)

- void :ref:`syscomopen2 <group___sys_com_itf_1ga8d94f973e3cb339573241cb102f3b81e>` (:ref:`syscomopen2_struct <group___sys_com_itf_1ga68d1dc1ba9f40cd4a23fa307ff994fe1>` * p)

- void :ref:`syscompurge <group___sys_com_itf_1gacf81be248974e6f79adf9130dbd975d2>` (:ref:`syscompurge_struct <group___sys_com_itf_1gad21fe96acf909e0c0c4488f5af048986>` * p)

- void :ref:`syscomread <group___sys_com_itf_1gac8ecb737346f72e608f02c515e5a09e5>` (:ref:`syscomread_struct <group___sys_com_itf_1ga5826d9f8571af91c22ffddc6fc615dc1>` * p)

- void :ref:`syscomsetsettings <group___sys_com_itf_1gad571f4b8ba2e624dfddf0c989b0c950d>` (:ref:`syscomsetsettings_struct <group___sys_com_itf_1ga9d9a1056c695224dca3c30d419382463>` * p)

- void :ref:`syscomsettimeout <group___sys_com_itf_1ga2de2eb1038c3d1740378dff5179ebec0>` (:ref:`syscomsettimeout_struct <group___sys_com_itf_1ga4cdb08bbc06f84e0baf0ef3208cb9500>` * p)

- void :ref:`syscomwrite <group___sys_com_itf_1ga53101f1df95b5fd10dce26ac552b188f>` (:ref:`syscomwrite_struct <group___sys_com_itf_1gae655e4f66c8b7201920833dc6e02c93d>` * p)

- RTS_RESULT :ref:`SysComOSInit <group___sys_com_itf_1ga5ed91811723c888f323839ae0fe24e96>` (INIT_STRUCT * pInit)

- RTS_RESULT :ref:`SysComOSHookFunction <group___sys_com_itf_1gab10557427484ee710e95f247b3367057>` (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)

- RTS_HANDLE :ref:`SysComOpen <group___sys_com_itf_1gacf40acf2958ee6cb83c02cf0cfa75716>` (short sPort, RTS_RESULT * pResult)

- RTS_HANDLE :ref:`SysComOpen2 <group___sys_com_itf_1ga846908a8dc90fdb5fc36d0bb18bb36c7>` (:ref:`COM_Settings <group___sys_com_itf___comportsettings_1ga2a1e08f3cfcbf3f3553764f75c3b966a>` * pSettings, :ref:`COM_SettingsEx <group___sys_com_itf___comportextendedsettings_1ga850ed8a9016bc7f6f8e45c850379c4c9>` * pSettingsEx, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysComSetSettings <group___sys_com_itf_1gae816607ac4a8146258416fc228da42e9>` (RTS_HANDLE hCom, :ref:`COM_Settings <group___sys_com_itf___comportsettings_1ga2a1e08f3cfcbf3f3553764f75c3b966a>` * pSettings, :ref:`COM_SettingsEx <group___sys_com_itf___comportextendedsettings_1ga850ed8a9016bc7f6f8e45c850379c4c9>` * pSettingsEx)

- RTS_RESULT :ref:`SysComGetSettings <group___sys_com_itf_1gaa6f95bd94a3d358f26ba49962623491d>` (RTS_HANDLE hCom, :ref:`COM_Settings <group___sys_com_itf___comportsettings_1ga2a1e08f3cfcbf3f3553764f75c3b966a>` * pSettings, :ref:`COM_SettingsEx <group___sys_com_itf___comportextendedsettings_1ga850ed8a9016bc7f6f8e45c850379c4c9>` * pSettingsEx)

- RTS_RESULT :ref:`SysComClose <group___sys_com_itf_1gae03e5ece86996b91333ca76ed0d7a634>` (RTS_HANDLE hCom)

- RTS_UI32 :ref:`SysComRead <group___sys_com_itf_1gaa28663547298bb38140095bda09e653f>` (RTS_HANDLE hCom, unsigned char * pbyBuffer, RTS_UI32 uiSize, RTS_UI32 ulTimeout, RTS_RESULT * pResult)

- RTS_UI32 :ref:`SysComWrite <group___sys_com_itf_1ga6df7263b8cdb70b1ce1d944dbe167d18>` (RTS_HANDLE hCom, unsigned char * pbyBuffer, RTS_UI32 uiSize, RTS_UI32 ulTimeout, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysComPurge <group___sys_com_itf_1gaf299ca75a046c99de02e82a9afa1bacb>` (RTS_HANDLE hCom)

- RTS_RESULT :ref:`SysComSetTimeout <group___sys_com_itf_1ga9fa7a0c0d1ea82160e247351e6883958>` (RTS_HANDLE hCom, RTS_UI32 ulTimeout)

.. _group___sys_com_itf-details:

Detailed Description
--------------------

Interface of SysCom.

The SysCom interface is projected to connect to a serial COM port (RS232) and to send and receive data via this port.

IMPLEMENTATION NODE: All routines must be realized asynchronous! You have to use the FIFO of the serial device! Don't block the read and write routines, until the operations are finished.

**Copyright:**

Copyright (c) 2017-2018 CODESYS GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Macro Definition Documentation
------------------------------
.. _group___sys_com_itf_1gabfca817154b1019275366a1702820eef:

#define ITF_SysCom
^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1gaf6d44fd2e0ffb8d094d03e734870ed1e:

#define EXTITF_SysCom
^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___sys_com_itf_1ga3308d78035caed2aef663e0bd8c7afd6:

typedef struct tagsyscomclose_struct  syscomclose_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Close a serial communication device.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_com_itf_1ga7e26dd4ec2e7914f64f57e105442ca3c:

typedef struct tagsyscomgetsettings_struct  syscomgetsettings_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get the parameter of the interface specified by handle.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_com_itf_1gae0fb149d6fe5786904b1a985d3eea046:

typedef struct tagsyscomopen_struct  syscomopen_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Open a serial communication device.
**Returns:**

*RESULT: Handle to the opened com port or RTS_INVALID_HANDLE if failed

.. _group___sys_com_itf_1ga68d1dc1ba9f40cd4a23fa307ff994fe1:

typedef struct tagsyscomopen2_struct  syscomopen2_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Opens a serial communication device specified by settings
**Returns:**

*RESULT: Handle to the opened com port or RTS_INVALID_HANDLE if failed

.. _group___sys_com_itf_1gad21fe96acf909e0c0c4488f5af048986:

typedef struct tagsyscompurge_struct  syscompurge_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Clear the fifo buffer of the serial interface
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_com_itf_1ga5826d9f8571af91c22ffddc6fc615dc1:

typedef struct tagsyscomread_struct  syscomread_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Reads a number bytes from the specifed device to the receive buffer.

IMPLEMENTATION NOTE: If the timeout elapsed until the requested number of bytes are received, the function returns with the bytes still received! This must be considered in the caller and the implementation!

**Returns:**

*RESULT: Number of actually read bytes

.. _group___sys_com_itf_1ga9d9a1056c695224dca3c30d419382463:

typedef struct tagsyscomsetsettings_struct  syscomsetsettings_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set the parameter of the interface specified by handle.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_com_itf_1ga4cdb08bbc06f84e0baf0ef3208cb9500:

typedef struct tagsyscomsettimeout_struct  syscomsettimeout_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set the timeout of the specified serial interface (hardware timeout). The Timeout is the time between two received or sent characters until the read or write operation will return. Typically this value should be 0 (returns immediately)
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_com_itf_1gae655e4f66c8b7201920833dc6e02c93d:

typedef struct tagsyscomwrite_struct  syscomwrite_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Writes a number bytes to the specifed device from the sent buffer.

IMPLEMENTATION NOTE: If the timeout elapsed until the requested number of bytes are sent, the function returns with the bytes still sent! This must be considered in the caller and the implementation!

**Returns:**

*RESULT: Number of actually written bytes

.. _group___sys_com_itf_1gac0d8d7a7a75e08eb5c7bbf5559874242:

typedef COM_Settings COMSettings
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION END

.. _group___sys_com_itf_1gaf69acb721dcf34b93878e98aa44e433f:

typedef COM_SettingsEx COMSettingsEx
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1ga0b8fbec3154b167f3c6867a15ab44f88:

typedef ISysCom_C ISysCom
^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___sys_com_itf_1ga0df7b41fde082ecb1466b597d796de1d:

void syscomclose (syscomclose_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1gae11e26a5385ee5ec33a28629a61d8dd7:

void syscomgetsettings (syscomgetsettings_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1gac133791775821e103cef6e92ef824cb5:

void syscomopen (syscomopen_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1ga8d94f973e3cb339573241cb102f3b81e:

void syscomopen2 (syscomopen2_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1gacf81be248974e6f79adf9130dbd975d2:

void syscompurge (syscompurge_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1gac8ecb737346f72e608f02c515e5a09e5:

void syscomread (syscomread_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1gad571f4b8ba2e624dfddf0c989b0c950d:

void syscomsetsettings (syscomsetsettings_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1ga2de2eb1038c3d1740378dff5179ebec0:

void syscomsettimeout (syscomsettimeout_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1ga53101f1df95b5fd10dce26ac552b188f:

void syscomwrite (syscomwrite_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1ga5ed91811723c888f323839ae0fe24e96:

RTS_RESULT SysComOSInit (INIT_STRUCT *pInit)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1gab10557427484ee710e95f247b3367057:

RTS_RESULT SysComOSHookFunction (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_com_itf_1gacf40acf2958ee6cb83c02cf0cfa75716:

RTS_HANDLE SysComOpen (short sPort, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Open a serial communication device

**Parameters**

+---------+---------+-------------------------------------------------+
| [in]    | sPort   | Number of the Port to open: 1=COM1, 2=COM2, ... |
+---------+---------+-------------------------------------------------+
| [out]   | pResult | Pointer to error code                           |
+---------+---------+-------------------------------------------------+

**Returns:**

Handle to the interface or RTS_INVALID_HANDLE if failed

.. _group___sys_com_itf_1ga846908a8dc90fdb5fc36d0bb18bb36c7:

RTS_HANDLE SysComOpen2 (COM_Settings *pSettings, COM_SettingsEx *pSettingsEx, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Opens a serial communication device specified with settings

**Parameters**

+---------+-------------+--------------------------------------------------------------------------------------------------+
| [in]    | pSettings   | Settings for the communication device. See category "Com port settings" for detailed information |
+---------+-------------+--------------------------------------------------------------------------------------------------+
| [in]    | pSettingsEx | Optional extended settings for the serial device. Can be NULL.                                   |
+---------+-------------+--------------------------------------------------------------------------------------------------+
| [out]   | pResult     | Pointer to error code                                                                            |
+---------+-------------+--------------------------------------------------------------------------------------------------+

**Returns:**

Handle to the interface or RTS_INVALID_HANDLE if failed

.. _group___sys_com_itf_1gae816607ac4a8146258416fc228da42e9:

RTS_RESULT SysComSetSettings (RTS_HANDLE hCom, COM_Settings *pSettings, COM_SettingsEx *pSettingsEx)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set the parameter of the interface specified by handle

**Parameters**

+---------+-------------+------------------------------+
| [in]    | hCom        | Handle to Com Port           |
+---------+-------------+------------------------------+
| [in]    | pSettings   | Pointer to new settings      |
+---------+-------------+------------------------------+
| [in]    | pSettingsEx | Pointer to extended settings |
+---------+-------------+------------------------------+

**Returns:**

error code

.. _group___sys_com_itf_1gaa6f95bd94a3d358f26ba49962623491d:

RTS_RESULT SysComGetSettings (RTS_HANDLE hCom, COM_Settings *pSettings, COM_SettingsEx *pSettingsEx)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get the parameter of the interface specified by handle

**Parameters**

+---------+-------------+------------------------------+
| [in]    | hCom        | Handle to Com Port           |
+---------+-------------+------------------------------+
| [in]    | pSettings   | Pointer to new settings      |
+---------+-------------+------------------------------+
| [in]    | pSettingsEx | Pointer to extended settings |
+---------+-------------+------------------------------+

**Returns:**

error code

.. _group___sys_com_itf_1gae03e5ece86996b91333ca76ed0d7a634:

RTS_RESULT SysComClose (RTS_HANDLE hCom)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Close a serial communication device

**Parameters**

+---------+------+--------------------+
| [in]    | hCom | Handle to com port |
+---------+------+--------------------+

**Returns:**

error code

.. _group___sys_com_itf_1gaa28663547298bb38140095bda09e653f:

RTS_UI32 SysComRead (RTS_HANDLE hCom, unsigned char *pbyBuffer, RTS_UI32 uiSize, RTS_UI32 ulTimeout, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Reads a number bytes from the specifed device to the receive buffer.

IMPLEMENTATION NOTE: If the timeout elapsed until the requested number of bytes are received, the function returns with the bytes still received! This must be considered in the caller and the implementation!

**Parameters**

+---------+-----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | hCom      | Handle to com port                                                                                                                                                                      |
+---------+-----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pbyBuffer | Pointer to data buffer for received data                                                                                                                                                |
+---------+-----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | uiSize    | Requested number of bytes to read. Must be less or equal the size of the receive buffer!                                                                                                |
+---------+-----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | ulTimeout | Timeout to read data from the device. 0=Immediate return. If the timeout elapsed, the function returns with the still received data (could be less then the requested number of bytes!) |
+---------+-----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pResult   | Pointer to error code, ERR_TIMEOUT if timeout elapsed                                                                                                                                   |
+---------+-----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Number of actually read bytes

.. _group___sys_com_itf_1ga6df7263b8cdb70b1ce1d944dbe167d18:

RTS_UI32 SysComWrite (RTS_HANDLE hCom, unsigned char *pbyBuffer, RTS_UI32 uiSize, RTS_UI32 ulTimeout, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Writes a number bytes to the specifed device from the sent buffer.

IMPLEMENTATION NOTE: If the timeout elapsed until the requested number of bytes are sent, the function returns with the bytes still sent! This must be considered in the caller and the implementation!

**Parameters**

+---------+-----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | hCom      | Handle to com port                                                                                                                                                                |
+---------+-----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pbyBuffer | Pointer to data buffer for sent data                                                                                                                                              |
+---------+-----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | uiSize    | Requested number of bytes to sent. Must be less or equal the size of the sent buffer!                                                                                             |
+---------+-----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | ulTimeout | Timeout to sent data to the device. 0=Immediate return. If the timeout elapsed, the function returns with the still sent data (could be less then the requested number of bytes!) |
+---------+-----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pResult   | Pointer to error code, ERR_TIMEOUT if timeout elapsed                                                                                                                             |
+---------+-----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Number of actually written bytes

.. _group___sys_com_itf_1gaf299ca75a046c99de02e82a9afa1bacb:

RTS_RESULT SysComPurge (RTS_HANDLE hCom)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Clear the fifo buffer of the serial interface

**Parameters**

+---------+------+--------------------+
| [in]    | hCom | Handle to com port |
+---------+------+--------------------+

**Returns:**

error code

.. _group___sys_com_itf_1ga9fa7a0c0d1ea82160e247351e6883958:

RTS_RESULT SysComSetTimeout (RTS_HANDLE hCom, RTS_UI32 ulTimeout)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set the timeout of the specified serial interface (hardware timeout). The Timeout is the time between two received or sent characters until the read or write operation will return. Typically this value should be 0 (returns immediately)

**Parameters**

+---------+-----------+--------------------+
| [in]    | hCom      | Handle to com port |
+---------+-----------+--------------------+
| [in]    | ulTimeout | Timeout to set     |
+---------+-----------+--------------------+

**Returns:**

error code

.. last line of group.rst template
.. last line of composition.rst template


