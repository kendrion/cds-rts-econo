.. first line of composition.rst template

:orphan:

.. first line of struct.rst template

.. _structtagiectaskcreate__struct:

========================================
tagiectaskcreate_struct Struct Reference
========================================

| #include ":ref:`CmpIecTaskItf.h <_cmp_iec_task_itf_8h>`"

Data Fields
-----------

- :ref:`APPLICATION <group___cmp_app_itf___applicationdescription_1gac7bd19d792c2ff88bf331821dd1978b7>` * :ref:`pApp <group___cmp_iec_task_itf_1ga5dfba42071cae0761d9e243874e92783>`
- :ref:`Task_Info <group___cmp_iec_task_itf___staticdefines_1ga56b1767676d541fc548c45a73424dd38>` * :ref:`pTaskInfo <group___cmp_iec_task_itf_1gaa96d45777c4a3fcbe4c46701b755a797>`
- RTS_IEC_RESULT * :ref:`pResult <group___cmp_iec_task_itf_1ga0b030a9775f2e307e730cec6342a9821>`
- RTS_IEC_HANDLE :ref:`IecTaskCreate <group___cmp_iec_task_itf_1gaec78a7dda67e749027cab8eeb71375e1>`

Detailed Description
--------------------

Create a new IEC Task

IEC Tasks itself are used by the scheduler of the runtime. They don't essentially need a corresponding OS task or timer. They might be handled by the scheduler in a completely different way.

.. note:: | Task_Info2.dwEventFunctionPointer: | Function pointer to the event check routine in case Task_Info2.KindOfTask = TaskEvent

.. code-block:: codesys

FUNCTION CheckEvent : BOOL VAR_INPUT END_VAR

(This function checks whether the event is triggered) (by returning TRUE: raising edge, status, etc.)

| Task_Info2.dwTaskEntryFunctionPointer: | Function pointer to the task code

.. code-block:: codesys

FUNCTION IecTaskCyclic : BOOL VAR_INPUT parameter : IEC_CYCLE_STRUCT; END_VAR VAR udiState : UDINT; hTask : RTS_IEC_HANDLE; END_VAR

( mandatory cyclic task frame code begin ) udiState := parameter.pApplication^.udiState; hTask := parameter.hTaskHandle; IF udiState = AS_STOP THEN RETURN; END_IF IF parameter.pTaskInfo^.bWatchdog THEN IecTaskEnableWatchdog(hTask); END_IF ( mandatory cyclic task frame code end )

Error code:

+ ERR_OK: The new task was successfully created.

+ ERR_FAILED: There was an error in a subsystem (e.g. the scheduler could not allocate his task handle).

+ ERR_PARAMETER: Invalid application- or task info pointer

+ ERR_OUT_OF_LIMITS: Maximum number of Tasks reached (target specific)

+ ERR_NOMEMORY: Unable to allocate the memory, that is necessary for the task description

:return: Handle to newly created task

Field Documentation
-------------------

.. _group___cmp_iec_task_itf_1ga5dfba42071cae0761d9e243874e92783:

APPLICATION* tagiectaskcreate_struct::pApp
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_iec_task_itf_1gaa96d45777c4a3fcbe4c46701b755a797:

Task_Info* tagiectaskcreate_struct::pTaskInfo
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_iec_task_itf_1ga0b030a9775f2e307e730cec6342a9821:

RTS_IEC_RESULT* tagiectaskcreate_struct::pResult
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_iec_task_itf_1gaec78a7dda67e749027cab8eeb71375e1:

RTS_IEC_HANDLE tagiectaskcreate_struct::IecTaskCreate
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The documentation for this struct was generated from the following file:
------------------------------------------------------------------------

CmpIecTaskItf.h

.. last line of struct.rst template
.. last line of composition.rst template


