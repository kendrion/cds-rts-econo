.. first line of composition.rst template

.. first line of group.rst template

.. _group___sys_process_itf:

=============
SysProcessItf
=============

Interface of SysProcess. :ref:`More... <group___sys_process_itf-details>`

Modules
-------

- :ref:`Priority ranges <group___sys_process_itf___priorityranges>`

- :ref:`Process creation flags <group___sys_process_itf___processcreationflags>`

- :ref:`Process status <group___sys_process_itf___processstatus>`

- :ref:`Settings <group___sys_process_itf___settings>`

Data Structures
---------------

- struct :ref:`tagsysprocesscreate_struct <structtagsysprocesscreate__struct>`

- struct :ref:`tagsysprocesscreate2_struct <structtagsysprocesscreate2__struct>`

- struct :ref:`tagsysprocessexecutecommand_struct <structtagsysprocessexecutecommand__struct>`

- struct :ref:`tagsysprocessexecutecommand2_struct <structtagsysprocessexecutecommand2__struct>`

- struct :ref:`tagsysprocessfreehandle_struct <structtagsysprocessfreehandle__struct>`

- struct :ref:`tagsysprocessgetcurrenthandle_struct <structtagsysprocessgetcurrenthandle__struct>`

- struct :ref:`tagsysprocessgetosid_struct <structtagsysprocessgetosid__struct>`

- struct :ref:`tagsysprocessgetpriority_struct <structtagsysprocessgetpriority__struct>`

- struct :ref:`tagsysprocessgetstate_struct <structtagsysprocessgetstate__struct>`

- struct :ref:`tagsysprocessresume_struct <structtagsysprocessresume__struct>`

- struct :ref:`tagsysprocesssetpriority_struct <structtagsysprocesssetpriority__struct>`

- struct :ref:`tagsysprocessterminate_struct <structtagsysprocessterminate__struct>`

- struct :ref:`ISysProcess_C <struct_i_sys_process___c>`

Macros
------

- #define :ref:`ITF_SysProcess <group___sys_process_itf_1gafad50e7d4478a70754cd430c193f4a1b>`

- #define :ref:`EXTITF_SysProcess <group___sys_process_itf_1ga0dee55e0aa198716038467389ff4be97>`

Typedefs
--------

- typedef struct :ref:`tagsysprocesscreate_struct <structtagsysprocesscreate__struct>` :ref:`sysprocesscreate_struct <group___sys_process_itf_1gabc89740423b5a30cf27e7c6ea309b0a1>`

- typedef struct :ref:`tagsysprocesscreate2_struct <structtagsysprocesscreate2__struct>` :ref:`sysprocesscreate2_struct <group___sys_process_itf_1ga62517b84811d742c9a7f08cc3adf6f4a>`

- typedef struct :ref:`tagsysprocessexecutecommand_struct <structtagsysprocessexecutecommand__struct>` :ref:`sysprocessexecutecommand_struct <group___sys_process_itf_1gafbbb5b6728d58905dcfc683c5c34cdc8>`

- typedef struct :ref:`tagsysprocessexecutecommand2_struct <structtagsysprocessexecutecommand2__struct>` :ref:`sysprocessexecutecommand2_struct <group___sys_process_itf_1ga46d30d4d0b4a68a801f684fa64280cd1>`

- typedef struct :ref:`tagsysprocessfreehandle_struct <structtagsysprocessfreehandle__struct>` :ref:`sysprocessfreehandle_struct <group___sys_process_itf_1ga3badf59c5abb843aafab5a1b5e974ad0>`

- typedef struct :ref:`tagsysprocessgetcurrenthandle_struct <structtagsysprocessgetcurrenthandle__struct>` :ref:`sysprocessgetcurrenthandle_struct <group___sys_process_itf_1ga9d145db06f3559b9bc53fe8cee39efce>`

- typedef struct :ref:`tagsysprocessgetosid_struct <structtagsysprocessgetosid__struct>` :ref:`sysprocessgetosid_struct <group___sys_process_itf_1gad2cf95d6c7b6abd4c845bb896f6be58b>`

- typedef struct :ref:`tagsysprocessgetpriority_struct <structtagsysprocessgetpriority__struct>` :ref:`sysprocessgetpriority_struct <group___sys_process_itf_1ga3592455356f4506f3e569a7058e1d003>`

- typedef struct :ref:`tagsysprocessgetstate_struct <structtagsysprocessgetstate__struct>` :ref:`sysprocessgetstate_struct <group___sys_process_itf_1ga238603aa908aa190844f8970e76435f2>`

- typedef struct :ref:`tagsysprocessresume_struct <structtagsysprocessresume__struct>` :ref:`sysprocessresume_struct <group___sys_process_itf_1ga8eeb15701e615c3f8e5d8a5ed21ccfbe>`

- typedef struct :ref:`tagsysprocesssetpriority_struct <structtagsysprocesssetpriority__struct>` :ref:`sysprocesssetpriority_struct <group___sys_process_itf_1gace210acb7625f41ee778399c898cf57e>`

- typedef struct :ref:`tagsysprocessterminate_struct <structtagsysprocessterminate__struct>` :ref:`sysprocessterminate_struct <group___sys_process_itf_1gadc48a21f0f8dabb555597d9b49077d21>`

- typedef :ref:`ISysProcess_C <struct_i_sys_process___c>` :ref:`ISysProcess <group___sys_process_itf_1gaed7ca8a26d1743d1df4e7cdc43637100>`

Functions
---------

- void :ref:`sysprocesscreate <group___sys_process_itf_1ga3e413f1bc7efa3fc2a43ea7d04892d09>` (:ref:`sysprocesscreate_struct <group___sys_process_itf_1gabc89740423b5a30cf27e7c6ea309b0a1>` * p)

- void :ref:`sysprocesscreate2 <group___sys_process_itf_1ga7977ec4184ff95e6abf11aa9fa69cb54>` (:ref:`sysprocesscreate2_struct <group___sys_process_itf_1ga62517b84811d742c9a7f08cc3adf6f4a>` * p)

- void :ref:`sysprocessexecutecommand <group___sys_process_itf_1ga5ec85e2ce1080dee03c7ad95f69f35a3>` (:ref:`sysprocessexecutecommand_struct <group___sys_process_itf_1gafbbb5b6728d58905dcfc683c5c34cdc8>` * p)

- void :ref:`sysprocessexecutecommand2 <group___sys_process_itf_1ga4a4a82f23850af0a2788dbbfcbd62d21>` (:ref:`sysprocessexecutecommand2_struct <group___sys_process_itf_1ga46d30d4d0b4a68a801f684fa64280cd1>` * p)

- void :ref:`sysprocessfreehandle <group___sys_process_itf_1gafe8b0ba66e53e1e9a304d1991dc2f306>` (:ref:`sysprocessfreehandle_struct <group___sys_process_itf_1ga3badf59c5abb843aafab5a1b5e974ad0>` * p)

- void :ref:`sysprocessgetcurrenthandle <group___sys_process_itf_1ga6a369f55ad376ca33fd12c9267fd2795>` (:ref:`sysprocessgetcurrenthandle_struct <group___sys_process_itf_1ga9d145db06f3559b9bc53fe8cee39efce>` * p)

- void :ref:`sysprocessgetosid <group___sys_process_itf_1ga3a53124ed88a1b0686d649f28b700cb2>` (:ref:`sysprocessgetosid_struct <group___sys_process_itf_1gad2cf95d6c7b6abd4c845bb896f6be58b>` * p)

- void :ref:`sysprocessgetpriority <group___sys_process_itf_1gac044e803dc85a21f4e152720f6da8707>` (:ref:`sysprocessgetpriority_struct <group___sys_process_itf_1ga3592455356f4506f3e569a7058e1d003>` * p)

- void :ref:`sysprocessgetstate <group___sys_process_itf_1ga3859c93231343178a5e0c00b918d713d>` (:ref:`sysprocessgetstate_struct <group___sys_process_itf_1ga238603aa908aa190844f8970e76435f2>` * p)

- void :ref:`sysprocessresume <group___sys_process_itf_1gad12a28cf4c59d879ad6bfdbce4fc5958>` (:ref:`sysprocessresume_struct <group___sys_process_itf_1ga8eeb15701e615c3f8e5d8a5ed21ccfbe>` * p)

- void :ref:`sysprocesssetpriority <group___sys_process_itf_1ga8a421a21e126c0bafeae5ae4813a985f>` (:ref:`sysprocesssetpriority_struct <group___sys_process_itf_1gace210acb7625f41ee778399c898cf57e>` * p)

- void :ref:`sysprocessterminate <group___sys_process_itf_1gab92d828fdb7f5027978da60b08de00a1>` (:ref:`sysprocessterminate_struct <group___sys_process_itf_1gadc48a21f0f8dabb555597d9b49077d21>` * p)

- RTS_RESULT :ref:`SysProcessOSInit <group___sys_process_itf_1ga3f6363782cc38bc0065281a9295dcb42>` (INIT_STRUCT * pInit)

- RTS_RESULT :ref:`SysProcessOSHookFunction <group___sys_process_itf_1gac1b5d1d6da197e8bad882d75b835d2a0>` (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)

- RTS_I32 :ref:`SysProcessExecuteCommand <group___sys_process_itf_1ga2647fafe7e14deb8882ae00cfa150069>` (char * pszCommand, RTS_RESULT * pResult)

- RTS_I32 :ref:`SysProcessExecuteCommand2 <group___sys_process_itf_1ga2e1e04882fc4a9bb5666189bab2fa5d9>` (char * pszCommand, char * pszStdOut, RTS_UI32 udiStdOutLen, RTS_RESULT * pResult)

- RTS_HANDLE :ref:`SysProcessCreate <group___sys_process_itf_1gaaeb32d7f8b4c5bba415db9a4c0b57ad1>` (char * pszApplication, char * pszCommandLine, RTS_UI32 ulFlags, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysProcessResume <group___sys_process_itf_1ga590aac9ac0786cd3fb57641c4e855845>` (RTS_HANDLE hProcess)

- RTS_RESULT :ref:`SysProcessTerminate <group___sys_process_itf_1ga78af11a909d89197a9e754da79916f8f>` (RTS_HANDLE hProcess)

- RTS_HANDLE :ref:`SysProcessGetCurrentHandle <group___sys_process_itf_1gaaf18eed1893fcd37092e2ac2f3d737ed>` (RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysProcessFreeHandle <group___sys_process_itf_1gacb2ef6005625e3e522f83a5fdf11a7d6>` (RTS_HANDLE hProcess)

- RTS_RESULT :ref:`SysProcessGetState <group___sys_process_itf_1gada567f3b57b55bd10c67de880ed35c74>` (RTS_HANDLE hProcess, RTS_I32 * piState)

- RTS_RESULT :ref:`SysProcessSetPriority <group___sys_process_itf_1gaeae869c1cd6e43fcb8121d8893f9fe79>` (RTS_HANDLE hProcess, RTS_UI32 ulPriority)

- RTS_RESULT :ref:`SysProcessGetPriority <group___sys_process_itf_1gae2f261e1a2c1ff516c63e63bd2e0e9c6>` (RTS_HANDLE hProcess, RTS_UI32 * pulPriority)

- RTS_UI32 :ref:`SysProcessGetOSId <group___sys_process_itf_1ga41ac619c030f4cf2e253bc0dd759b95c>` (RTS_HANDLE hProcess, RTS_RESULT * pResult)

.. _group___sys_process_itf-details:

Detailed Description
--------------------

Interface of SysProcess.

The SysProcess interface is projected to handle operating system processes. This can be implemented only on targets with an operating system with processes.

**Copyright:**

Copyright (c) 2017-2018 CODESYS GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Macro Definition Documentation
------------------------------
.. _group___sys_process_itf_1gafad50e7d4478a70754cd430c193f4a1b:

#define ITF_SysProcess
^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1ga0dee55e0aa198716038467389ff4be97:

#define EXTITF_SysProcess
^^^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___sys_process_itf_1gabc89740423b5a30cf27e7c6ea309b0a1:

typedef struct tagsysprocesscreate_struct  sysprocesscreate_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION BEGIN

Function to create a process. NOTE: Is only available on systems with processes! This function starts the specified application as new process, optionally either in the fore- or in the background.

**Returns:**

*RESULT: Handle to the created process or RTS_INVALID_HANDLE if failed.

.. _group___sys_process_itf_1ga62517b84811d742c9a7f08cc3adf6f4a:

typedef struct tagsysprocesscreate2_struct  sysprocesscreate2_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to create a process. NOTE: Is only available on systems with processes! This functions creates and eventually starts a new process for the specified application. The properties of the created process can be defined by appropriate flags.
**Returns:**

*RESULT: Handle to the created process or RTS_INVALID_HANDLE if failed.

.. _group___sys_process_itf_1gafbbb5b6728d58905dcfc683c5c34cdc8:

typedef struct tagsysprocessexecutecommand_struct  sysprocessexecutecommand_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to start a system command. The command is operating system dependant!
**Returns:**

*RESULT: Result of command after execution

.. _group___sys_process_itf_1ga46d30d4d0b4a68a801f684fa64280cd1:

typedef struct tagsysprocessexecutecommand2_struct  sysprocessexecutecommand2_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to start a system command. The command is operating system dependant! Command will be executed, only if allowed (see settings for details). Output of the executed command will be filled into pszStdOut.

**Returns:**

*RESULT: Number of bytes, read from the commands output.

.. _group___sys_process_itf_1ga3badf59c5abb843aafab5a1b5e974ad0:

typedef struct tagsysprocessfreehandle_struct  sysprocessfreehandle_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to release the process handle that is returned by SysProcessCreate or SysProcessGetCurrentHandle.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_process_itf_1ga9d145db06f3559b9bc53fe8cee39efce:

typedef struct tagsysprocessgetcurrenthandle_struct  sysprocessgetcurrenthandle_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to get a handle to the current process
**Returns:**

*RESULT: Returns the handle of the process actually running by the processor or RTS_INVALID_HANDLE if failed.

.. _group___sys_process_itf_1gad2cf95d6c7b6abd4c845bb896f6be58b:

typedef struct tagsysprocessgetosid_struct  sysprocessgetosid_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to determine an operatingsystem dependant identification of a process. This identification must be unique in the system at a defined time! SysProcessGetOSId can only applied to the process actually executed or to processes having been generated by SysProcessCreate.
**Returns:**

*RESULT: Returns the operating system specific identification of the process

.. _group___sys_process_itf_1ga3592455356f4506f3e569a7058e1d003:

typedef struct tagsysprocessgetpriority_struct  sysprocessgetpriority_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This function retrieves the priority of the process specified by its handle.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_process_itf_1ga238603aa908aa190844f8970e76435f2:

typedef struct tagsysprocessgetstate_struct  sysprocessgetstate_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This function retrieves the status of the process specified by its handle.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_process_itf_1ga8eeb15701e615c3f8e5d8a5ed21ccfbe:

typedef struct tagsysprocessresume_struct  sysprocessresume_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This function starts the process specified by its handle. For example, the function can be used for processes having been created in suspended mode by use of the flag SYSPROCESS_CREATEFLAG_CREATESUSPENDED.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_process_itf_1gace210acb7625f41ee778399c898cf57e:

typedef struct tagsysprocesssetpriority_struct  sysprocesssetpriority_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This function sets the priority of the process specified by its handle.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_process_itf_1gadc48a21f0f8dabb555597d9b49077d21:

typedef struct tagsysprocessterminate_struct  sysprocessterminate_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This function terminates the process specified by its handle.
**Returns:**

*RESULT: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_process_itf_1gaed7ca8a26d1743d1df4e7cdc43637100:

typedef ISysProcess_C ISysProcess
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___sys_process_itf_1ga3e413f1bc7efa3fc2a43ea7d04892d09:

void sysprocesscreate (sysprocesscreate_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1ga7977ec4184ff95e6abf11aa9fa69cb54:

void sysprocesscreate2 (sysprocesscreate2_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1ga5ec85e2ce1080dee03c7ad95f69f35a3:

void sysprocessexecutecommand (sysprocessexecutecommand_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1ga4a4a82f23850af0a2788dbbfcbd62d21:

void sysprocessexecutecommand2 (sysprocessexecutecommand2_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1gafe8b0ba66e53e1e9a304d1991dc2f306:

void sysprocessfreehandle (sysprocessfreehandle_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1ga6a369f55ad376ca33fd12c9267fd2795:

void sysprocessgetcurrenthandle (sysprocessgetcurrenthandle_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1ga3a53124ed88a1b0686d649f28b700cb2:

void sysprocessgetosid (sysprocessgetosid_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1gac044e803dc85a21f4e152720f6da8707:

void sysprocessgetpriority (sysprocessgetpriority_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1ga3859c93231343178a5e0c00b918d713d:

void sysprocessgetstate (sysprocessgetstate_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1gad12a28cf4c59d879ad6bfdbce4fc5958:

void sysprocessresume (sysprocessresume_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1ga8a421a21e126c0bafeae5ae4813a985f:

void sysprocesssetpriority (sysprocesssetpriority_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1gab92d828fdb7f5027978da60b08de00a1:

void sysprocessterminate (sysprocessterminate_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1ga3f6363782cc38bc0065281a9295dcb42:

RTS_RESULT SysProcessOSInit (INIT_STRUCT *pInit)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION END

.. _group___sys_process_itf_1gac1b5d1d6da197e8bad882d75b835d2a0:

RTS_RESULT SysProcessOSHookFunction (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_process_itf_1ga2647fafe7e14deb8882ae00cfa150069:

RTS_I32 SysProcessExecuteCommand (char *pszCommand, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to start a system command. The command is operating system dependant!

**Parameters**

+---------+------------+------------------------------+
| [in]    | pszCommand | String with the command line |
+---------+------------+------------------------------+

**Returns:**

Result after command execution

.. _group___sys_process_itf_1ga2e1e04882fc4a9bb5666189bab2fa5d9:

RTS_I32 SysProcessExecuteCommand2 (char *pszCommand, char *pszStdOut, RTS_UI32 udiStdOutLen, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to start a system command. The command is operating system dependant! If Pointer to buffer is not null for StdOut or StdErr the buffer will be filled.

**Parameters**

+---------+--------------+--------------------------------------------------------------+
| [in]    | pszCommand   | String with the command line                                 |
+---------+--------------+--------------------------------------------------------------+
| [in]    | pszStdOut    | Buffer for StdOut string                                     |
+---------+--------------+--------------------------------------------------------------+
| [in]    | udiStdOutLen | Buffersize for StdOut string buffer                          |
+---------+--------------+--------------------------------------------------------------+
| [out]   | pResult      | Pointer to runtime system error code (see CmpErrors.library) |
+---------+--------------+--------------------------------------------------------------+

.. _group___sys_process_itf_1gaaeb32d7f8b4c5bba415db9a4c0b57ad1:

RTS_HANDLE SysProcessCreate (char *pszApplication, char *pszCommandLine, RTS_UI32 ulFlags, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to create a process. Is only valid on systems with processes!

**Parameters**

+---------+----------------+--------------------------------------------------------------------+
| [in]    | pszApplication | Name of application to start as a separate process                 |
+---------+----------------+--------------------------------------------------------------------+
| [in]    | pszCommandLine | String with the command line                                       |
+---------+----------------+--------------------------------------------------------------------+
| [in]    | ulFlags        | A combination of flags like PROCESS_CREATEFLAG_HIDDEN for example. |
+---------+----------------+--------------------------------------------------------------------+
| [out]   | pResult        | Pointer to the result                                              |
+---------+----------------+--------------------------------------------------------------------+

**Returns:**

Handle to the process

.. _group___sys_process_itf_1ga590aac9ac0786cd3fb57641c4e855845:

RTS_RESULT SysProcessResume (RTS_HANDLE hProcess)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to resume a process specified by handle. This can be used, if a process is created with PROCESS_CREATEFLAG_CREATESUSPENDED flag.

**Parameters**

+---------+----------+-----------------------+
| [in]    | hProcess | Handle to the process |
+---------+----------+-----------------------+

**Returns:**

Error code: ERR_OK or ERR_FAILED

.. _group___sys_process_itf_1ga78af11a909d89197a9e754da79916f8f:

RTS_RESULT SysProcessTerminate (RTS_HANDLE hProcess)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to terminate a process specified by handle

**Parameters**

+---------+----------+-----------------------+
| [in]    | hProcess | Handle to the process |
+---------+----------+-----------------------+

**Returns:**

Error code: ERR_OK or ERR_FAILED

.. _group___sys_process_itf_1gaaf18eed1893fcd37092e2ac2f3d737ed:

RTS_HANDLE SysProcessGetCurrentHandle (RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to get a handle to the current process

**Parameters**

+---------+---------+-----------------------+
| [out]   | pResult | Pointer to the result |
+---------+---------+-----------------------+

**Returns:**

The handle of the topical process

.. _group___sys_process_itf_1gacb2ef6005625e3e522f83a5fdf11a7d6:

RTS_RESULT SysProcessFreeHandle (RTS_HANDLE hProcess)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to free the process handle that is returned by SysProcessCreate or SysProcessGetCurrentHandle

**Parameters**

+---------+----------+-----------------------+
| [in]    | hProcess | Handle to the process |
+---------+----------+-----------------------+

**Returns:**

Error code: ERR_OK or ERR_PARAMETER if handle is invalid

.. _group___sys_process_itf_1gada567f3b57b55bd10c67de880ed35c74:

RTS_RESULT SysProcessGetState (RTS_HANDLE hProcess, RTS_I32 *piState)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to get the actual state of a process

**Parameters**

+---------+----------+------------------------------------------------------------+
| [in]    | hProcess | Handle to the process                                      |
+---------+----------+------------------------------------------------------------+
| [out]   | piState  | Pointer to state of the process, see the definitions above |
+---------+----------+------------------------------------------------------------+

**Returns:**

Error code: ERR_OK or ERR_PARAMETER if handle is invalid

.. _group___sys_process_itf_1gaeae869c1cd6e43fcb8121d8893f9fe79:

RTS_RESULT SysProcessSetPriority (RTS_HANDLE hProcess, RTS_UI32 ulPriority)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to set the process priority

**Parameters**

+---------+------------+-----------------------+
| [in]    | hProcess   | Handle to the process |
+---------+------------+-----------------------+
| [in]    | ulPriority | Process priority      |
+---------+------------+-----------------------+

**Returns:**

Error code: ERR_OK or ERR_FAILED

.. _group___sys_process_itf_1gae2f261e1a2c1ff516c63e63bd2e0e9c6:

RTS_RESULT SysProcessGetPriority (RTS_HANDLE hProcess, RTS_UI32 *pulPriority)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to get the process priority

**Parameters**

+---------+-------------+-----------------------+
| [in]    | hProcess    | Handle to the process |
+---------+-------------+-----------------------+
| [out]   | pulPriority | Pointer to priority   |
+---------+-------------+-----------------------+

**Returns:**

Error code: ERR_OK or ERR_FAILED

.. _group___sys_process_itf_1ga41ac619c030f4cf2e253bc0dd759b95c:

RTS_UI32 SysProcessGetOSId (RTS_HANDLE hProcess, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to determine an operatingsystem dependant identification of a process. This identification must be unique in the system at a defined time! This function will only work on processes created with SysProcessCreate or on the current process

**Parameters**

+---------+----------+-----------------------+
| [in]    | hProcess | Handle to the process |
+---------+----------+-----------------------+
| [out]   | pResult  | Pointer to the result |
+---------+----------+-----------------------+

**Returns:**

The OS dependant id as a DWORD

.. last line of group.rst template
.. last line of composition.rst template


