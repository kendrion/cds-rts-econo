.. first line of composition.rst template

:orphan:

.. first line of group.rst template

.. _group___sys_mod_r_t_sub_itf:

==============
SysModRTSubItf
==============

.. contents::
    :local:
    :depth: 1

Interface of SysModRTSub.

Detailed Description
--------------------

**Copyright:**

Copyright (c) 2017-2020 CODESYS Development GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Modules
-------

- :ref:`Static defines <group___sys_mod_r_t_sub_itf___staticdefines>`

Data Structures
---------------

- struct :ref:`SysModRTSubFunctionTable <struct_sys_mod_r_t_sub_function_table>`

- struct :ref:`ISysModRTSub_C <struct_i_sys_mod_r_t_sub___c>`

Macros
------

- #define :ref:`USE_ModRTMainSysFlashErase <group___sys_mod_r_t_sub_itf_1gaea9613781f6f5bc1c8d06060c5a66e95>` :ref:`PFMODRTMAINSYSFLASHERASE <group___sys_mod_r_t_sub_itf_1ga784610c853e5b6dc43025ff4d3b3f55c>` pfModRTMainSysFlashErase;

- #define :ref:`EXT_ModRTMainSysFlashErase <group___sys_mod_r_t_sub_itf_1ga1070a582ee604f1244d1f4317e508914>` extern :ref:`PFMODRTMAINSYSFLASHERASE <group___sys_mod_r_t_sub_itf_1ga784610c853e5b6dc43025ff4d3b3f55c>` pfModRTMainSysFlashErase;

- #define :ref:`GET_ModRTMainSysFlashErase <group___sys_mod_r_t_sub_itf_1ga6e9cab065f9042413ee583e84e5e9e99>` s_pfCMGetAPI2( "ModRTMainSysFlashErase", (RTS_VOID_FCTPTR *)&pfModRTMainSysFlashErase, (fl), 0, 0)

- #define :ref:`CAL_ModRTMainSysFlashErase <group___sys_mod_r_t_sub_itf_1ga04c6da076134cdc7a2b6d036559706e4>` pfModRTMainSysFlashErase

- #define :ref:`CHK_ModRTMainSysFlashErase <group___sys_mod_r_t_sub_itf_1ga956cfdd867a9a240709535a0120b31b6>` (pfModRTMainSysFlashErase != NULL)

- #define :ref:`EXP_ModRTMainSysFlashErase <group___sys_mod_r_t_sub_itf_1gad7320ad1848e9c89bc62cb1256e337cb>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"ModRTMainSysFlashErase", (RTS_UINTPTR) :ref:`ModRTMainSysFlashErase <group___sys_mod_r_t_sub_itf_1ga26b84365bb824e1af1a37a42b0226b43>` , 0, 0)

- #define :ref:`USE_ModRTMainSysFlashWrite <group___sys_mod_r_t_sub_itf_1ga396f0d1f08b4276e4e80664b4d9d5f02>` :ref:`PFMODRTMAINSYSFLASHWRITE <group___sys_mod_r_t_sub_itf_1gae758a5d01875e0ba714761a9c1d862f7>` pfModRTMainSysFlashWrite;

- #define :ref:`EXT_ModRTMainSysFlashWrite <group___sys_mod_r_t_sub_itf_1ga36934e14b03358dee60d3635ef0e4508>` extern :ref:`PFMODRTMAINSYSFLASHWRITE <group___sys_mod_r_t_sub_itf_1gae758a5d01875e0ba714761a9c1d862f7>` pfModRTMainSysFlashWrite;

- #define :ref:`GET_ModRTMainSysFlashWrite <group___sys_mod_r_t_sub_itf_1gade2b3d69d74458dd934abc11493e49d1>` s_pfCMGetAPI2( "ModRTMainSysFlashWrite", (RTS_VOID_FCTPTR *)&pfModRTMainSysFlashWrite, (fl), 0, 0)

- #define :ref:`CAL_ModRTMainSysFlashWrite <group___sys_mod_r_t_sub_itf_1gabd04e4358d3a8d74f629ff4eafb41afe>` pfModRTMainSysFlashWrite

- #define :ref:`CHK_ModRTMainSysFlashWrite <group___sys_mod_r_t_sub_itf_1ga1b1194cc5d40a0467285112cd654a874>` (pfModRTMainSysFlashWrite != NULL)

- #define :ref:`EXP_ModRTMainSysFlashWrite <group___sys_mod_r_t_sub_itf_1ga83ffe33ca350efadeb8d5b801bf7f928>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"ModRTMainSysFlashWrite", (RTS_UINTPTR) :ref:`ModRTMainSysFlashWrite <group___sys_mod_r_t_sub_itf_1gada2b5914f6b240ce33b68f434545d155>` , 0, 0)

- #define :ref:`USE_ModRTMainSysFlashFlush <group___sys_mod_r_t_sub_itf_1ga3983990bef2d4669d9a7a9cfb5066840>` :ref:`PFMODRTMAINSYSFLASHFLUSH <group___sys_mod_r_t_sub_itf_1ga2a54416626eec5146e247263ab7e8a7f>` pfModRTMainSysFlashFlush;

- #define :ref:`EXT_ModRTMainSysFlashFlush <group___sys_mod_r_t_sub_itf_1ga117ef0907c6f80f350faea3d5116cd21>` extern :ref:`PFMODRTMAINSYSFLASHFLUSH <group___sys_mod_r_t_sub_itf_1ga2a54416626eec5146e247263ab7e8a7f>` pfModRTMainSysFlashFlush;

- #define :ref:`GET_ModRTMainSysFlashFlush <group___sys_mod_r_t_sub_itf_1ga66a217509d362b2db97c93f6edebd2c1>` s_pfCMGetAPI2( "ModRTMainSysFlashFlush", (RTS_VOID_FCTPTR *)&pfModRTMainSysFlashFlush, (fl), 0, 0)

- #define :ref:`CAL_ModRTMainSysFlashFlush <group___sys_mod_r_t_sub_itf_1ga7dab591de96a5a696aafb2f9babccb19>` pfModRTMainSysFlashFlush

- #define :ref:`CHK_ModRTMainSysFlashFlush <group___sys_mod_r_t_sub_itf_1gaa76faf7e5ce1e89e051890f8eeb82ac4>` (pfModRTMainSysFlashFlush != NULL)

- #define :ref:`EXP_ModRTMainSysFlashFlush <group___sys_mod_r_t_sub_itf_1ga258b205276e71efb772d701546147540>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"ModRTMainSysFlashFlush", (RTS_UINTPTR) :ref:`ModRTMainSysFlashFlush <group___sys_mod_r_t_sub_itf_1ga923863970726a4f75630ff5d2bfe125d>` , 0, 0)

- #define :ref:`USE_ModRTMainSysTimeGetMs <group___sys_mod_r_t_sub_itf_1ga9cfac5a9df39b738f909096e6bd4017f>` :ref:`PFMODRTMAINSYSTIMEGETMS <group___sys_mod_r_t_sub_itf_1ga622a41ac7164e9c244bb96949139cf0b>` pfModRTMainSysTimeGetMs;

- #define :ref:`EXT_ModRTMainSysTimeGetMs <group___sys_mod_r_t_sub_itf_1ga14c7b9fab5c4736b00f61c7f19e4572b>` extern :ref:`PFMODRTMAINSYSTIMEGETMS <group___sys_mod_r_t_sub_itf_1ga622a41ac7164e9c244bb96949139cf0b>` pfModRTMainSysTimeGetMs;

- #define :ref:`GET_ModRTMainSysTimeGetMs <group___sys_mod_r_t_sub_itf_1gadc0db56d881cdd3deb47fc7a6e3ca72f>` s_pfCMGetAPI2( "ModRTMainSysTimeGetMs", (RTS_VOID_FCTPTR *)&pfModRTMainSysTimeGetMs, (fl), 0, 0)

- #define :ref:`CAL_ModRTMainSysTimeGetMs <group___sys_mod_r_t_sub_itf_1ga3c191e90ee6d9945b6be090e8bbbb4e0>` pfModRTMainSysTimeGetMs

- #define :ref:`CHK_ModRTMainSysTimeGetMs <group___sys_mod_r_t_sub_itf_1ga9ce3e74d67bbef288b4982e5f7de07bb>` (pfModRTMainSysTimeGetMs != NULL)

- #define :ref:`EXP_ModRTMainSysTimeGetMs <group___sys_mod_r_t_sub_itf_1ga6a28edfefca778eb0c4c51696c8fb648>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"ModRTMainSysTimeGetMs", (RTS_UINTPTR) :ref:`ModRTMainSysTimeGetMs <group___sys_mod_r_t_sub_itf_1ga1605f789cad24c69ba8d7536de79f9bd>` , 0, 0)

- #define :ref:`USE_ModRTMainSysTimeGetUs <group___sys_mod_r_t_sub_itf_1ga684c0894ff86d707c144c96d8ff248ab>` :ref:`PFMODRTMAINSYSTIMEGETUS <group___sys_mod_r_t_sub_itf_1ga4405421868685e7f330a82f943c6cc93>` pfModRTMainSysTimeGetUs;

- #define :ref:`EXT_ModRTMainSysTimeGetUs <group___sys_mod_r_t_sub_itf_1gaafe70446910e99af5c85b631da4c331a>` extern :ref:`PFMODRTMAINSYSTIMEGETUS <group___sys_mod_r_t_sub_itf_1ga4405421868685e7f330a82f943c6cc93>` pfModRTMainSysTimeGetUs;

- #define :ref:`GET_ModRTMainSysTimeGetUs <group___sys_mod_r_t_sub_itf_1ga4ab18038c68ca004931ebb7f332dc67e>` s_pfCMGetAPI2( "ModRTMainSysTimeGetUs", (RTS_VOID_FCTPTR *)&pfModRTMainSysTimeGetUs, (fl), 0, 0)

- #define :ref:`CAL_ModRTMainSysTimeGetUs <group___sys_mod_r_t_sub_itf_1ga12b8faab7349d3168ea216da17e5cfe5>` pfModRTMainSysTimeGetUs

- #define :ref:`CHK_ModRTMainSysTimeGetUs <group___sys_mod_r_t_sub_itf_1ga93021dae7e459017cb87b3923e2b3c49>` (pfModRTMainSysTimeGetUs != NULL)

- #define :ref:`EXP_ModRTMainSysTimeGetUs <group___sys_mod_r_t_sub_itf_1ga3f2b5e3f56f7699e17f19cd1af634888>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"ModRTMainSysTimeGetUs", (RTS_UINTPTR) :ref:`ModRTMainSysTimeGetUs <group___sys_mod_r_t_sub_itf_1ga2f1c9fd746b8f3190845df1fca7b7321>` , 0, 0)

- #define :ref:`USE_ModRTMainSysTimeGetNs <group___sys_mod_r_t_sub_itf_1gad86600cd4a23a83877264728c600dbbe>` :ref:`PFMODRTMAINSYSTIMEGETNS <group___sys_mod_r_t_sub_itf_1ga5f3c34d03c06fdb049ae67dfc6dab13c>` pfModRTMainSysTimeGetNs;

- #define :ref:`EXT_ModRTMainSysTimeGetNs <group___sys_mod_r_t_sub_itf_1ga2c8dd5f3167419e4fec2a61e814a0b9c>` extern :ref:`PFMODRTMAINSYSTIMEGETNS <group___sys_mod_r_t_sub_itf_1ga5f3c34d03c06fdb049ae67dfc6dab13c>` pfModRTMainSysTimeGetNs;

- #define :ref:`GET_ModRTMainSysTimeGetNs <group___sys_mod_r_t_sub_itf_1ga55e1e10a127cf0efa183e2502e27e89f>` s_pfCMGetAPI2( "ModRTMainSysTimeGetNs", (RTS_VOID_FCTPTR *)&pfModRTMainSysTimeGetNs, (fl), 0, 0)

- #define :ref:`CAL_ModRTMainSysTimeGetNs <group___sys_mod_r_t_sub_itf_1ga01d7e95ae49fa7044eccf2726ef05839>` pfModRTMainSysTimeGetNs

- #define :ref:`CHK_ModRTMainSysTimeGetNs <group___sys_mod_r_t_sub_itf_1gaa00941276fb7b6fc83c856452259de33>` (pfModRTMainSysTimeGetNs != NULL)

- #define :ref:`EXP_ModRTMainSysTimeGetNs <group___sys_mod_r_t_sub_itf_1ga533ef2bc71eaaefe687c6ac18b976bee>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"ModRTMainSysTimeGetNs", (RTS_UINTPTR) :ref:`ModRTMainSysTimeGetNs <group___sys_mod_r_t_sub_itf_1ga6474ac6129d8be65b15a70b7f2bcdcdf>` , 0, 0)

- #define :ref:`EXTITF_SysModRTSub <group___sys_mod_r_t_sub_itf_1gaf3be99d90d4c981900b839d20ebaf7c8>`

Typedefs
--------

- typedef void(* :ref:`PFMODRTSUBINIT <group___sys_mod_r_t_sub_itf_1ga2dd0efac52ddead04b2376236ff9cce7>`)(void)

- typedef void(* :ref:`PFMODRTSUBCOMMCYCLE <group___sys_mod_r_t_sub_itf_1ga0e5cccf2c80657c3b4d1882367607c40>`)(void)

- typedef RTS_RESULT(* :ref:`PFMODRTMAINSYSFLASHERASE <group___sys_mod_r_t_sub_itf_1ga784610c853e5b6dc43025ff4d3b3f55c>`)(FlashArea fa, RTS_SIZE ulSize, RTS_SIZE ulOffset)

- typedef RTS_RESULT(* :ref:`PFMODRTMAINSYSFLASHWRITE <group___sys_mod_r_t_sub_itf_1gae758a5d01875e0ba714761a9c1d862f7>`)(FlashArea fa, char *pcSource, RTS_SIZE ulSize, RTS_SIZE ulOffset)

- typedef RTS_RESULT(* :ref:`PFMODRTMAINSYSFLASHFLUSH <group___sys_mod_r_t_sub_itf_1ga2a54416626eec5146e247263ab7e8a7f>`)(FlashArea fa, RTS_SIZE ulSize, RTS_SIZE ulOffset)

- typedef RTS_UI32(* :ref:`PFMODRTMAINSYSTIMEGETMS <group___sys_mod_r_t_sub_itf_1ga622a41ac7164e9c244bb96949139cf0b>`)(void)

- typedef RTS_RESULT(* :ref:`PFMODRTMAINSYSTIMEGETUS <group___sys_mod_r_t_sub_itf_1ga4405421868685e7f330a82f943c6cc93>`)(RTS_SYSTIME *pTime)

- typedef RTS_RESULT(* :ref:`PFMODRTMAINSYSTIMEGETNS <group___sys_mod_r_t_sub_itf_1ga5f3c34d03c06fdb049ae67dfc6dab13c>`)(RTS_SYSTIME *pTime)

- typedef :ref:`ISysModRTSub_C <struct_i_sys_mod_r_t_sub___c>` :ref:`ISysModRTSub <group___sys_mod_r_t_sub_itf_1ga6187151968409072a2aeaaf4105095cd>`

Functions
---------

- void :ref:`ModRTSubInit <group___sys_mod_r_t_sub_itf_1gae27c46a17462f0eaee51f26b56e07b19>` (void)

- void :ref:`ModRTSubCommCycle <group___sys_mod_r_t_sub_itf_1gae675bed1bfffba60017fa91da0e4e873>` (void)

- RTS_RESULT :ref:`ModRTMainSysFlashErase <group___sys_mod_r_t_sub_itf_1ga26b84365bb824e1af1a37a42b0226b43>` (:ref:`FlashArea <group___sys_flash_itf___settings_1ga592e77b8379be53433be404615060ceb>`  fa, RTS_SIZE ulSize, RTS_SIZE ulOffset)

- RTS_RESULT :ref:`ModRTMainSysFlashWrite <group___sys_mod_r_t_sub_itf_1gada2b5914f6b240ce33b68f434545d155>` (:ref:`FlashArea <group___sys_flash_itf___settings_1ga592e77b8379be53433be404615060ceb>`  fa, char * pcSource, RTS_SIZE ulSize, RTS_SIZE ulOffset)

- RTS_RESULT :ref:`ModRTMainSysFlashFlush <group___sys_mod_r_t_sub_itf_1ga923863970726a4f75630ff5d2bfe125d>` (:ref:`FlashArea <group___sys_flash_itf___settings_1ga592e77b8379be53433be404615060ceb>`  fa, RTS_SIZE ulSize, RTS_SIZE ulOffset)

- RTS_UI32 :ref:`ModRTMainSysTimeGetMs <group___sys_mod_r_t_sub_itf_1ga1605f789cad24c69ba8d7536de79f9bd>` (void)

- RTS_RESULT :ref:`ModRTMainSysTimeGetUs <group___sys_mod_r_t_sub_itf_1ga2f1c9fd746b8f3190845df1fca7b7321>` (:ref:`RTS_SYSTIME <group___sys_time_itf_1ga10c9d9a4c57129d83432fb02923858bf>` * pTime)

- RTS_RESULT :ref:`ModRTMainSysTimeGetNs <group___sys_mod_r_t_sub_itf_1ga6474ac6129d8be65b15a70b7f2bcdcdf>` (:ref:`RTS_SYSTIME <group___sys_time_itf_1ga10c9d9a4c57129d83432fb02923858bf>` * pTime)

Macro Definition Documentation
------------------------------
.. _group___sys_mod_r_t_sub_itf_1gaea9613781f6f5bc1c8d06060c5a66e95:

#define USE_ModRTMainSysFlashErase :ref:`PFMODRTMAINSYSFLASHERASE <group___sys_mod_r_t_sub_itf_1ga784610c853e5b6dc43025ff4d3b3f55c>` pfModRTMainSysFlashErase;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga1070a582ee604f1244d1f4317e508914:

#define EXT_ModRTMainSysFlashErase extern :ref:`PFMODRTMAINSYSFLASHERASE <group___sys_mod_r_t_sub_itf_1ga784610c853e5b6dc43025ff4d3b3f55c>` pfModRTMainSysFlashErase;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga6e9cab065f9042413ee583e84e5e9e99:

#define GET_ModRTMainSysFlashErase s_pfCMGetAPI2( "ModRTMainSysFlashErase", (RTS_VOID_FCTPTR *)&pfModRTMainSysFlashErase, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga04c6da076134cdc7a2b6d036559706e4:

#define CAL_ModRTMainSysFlashErase pfModRTMainSysFlashErase
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga956cfdd867a9a240709535a0120b31b6:

#define CHK_ModRTMainSysFlashErase (pfModRTMainSysFlashErase != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1gad7320ad1848e9c89bc62cb1256e337cb:

#define EXP_ModRTMainSysFlashErase s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"ModRTMainSysFlashErase", (RTS_UINTPTR) :ref:`ModRTMainSysFlashErase <group___sys_mod_r_t_sub_itf_1ga26b84365bb824e1af1a37a42b0226b43>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga396f0d1f08b4276e4e80664b4d9d5f02:

#define USE_ModRTMainSysFlashWrite :ref:`PFMODRTMAINSYSFLASHWRITE <group___sys_mod_r_t_sub_itf_1gae758a5d01875e0ba714761a9c1d862f7>` pfModRTMainSysFlashWrite;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga36934e14b03358dee60d3635ef0e4508:

#define EXT_ModRTMainSysFlashWrite extern :ref:`PFMODRTMAINSYSFLASHWRITE <group___sys_mod_r_t_sub_itf_1gae758a5d01875e0ba714761a9c1d862f7>` pfModRTMainSysFlashWrite;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1gade2b3d69d74458dd934abc11493e49d1:

#define GET_ModRTMainSysFlashWrite s_pfCMGetAPI2( "ModRTMainSysFlashWrite", (RTS_VOID_FCTPTR *)&pfModRTMainSysFlashWrite, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1gabd04e4358d3a8d74f629ff4eafb41afe:

#define CAL_ModRTMainSysFlashWrite pfModRTMainSysFlashWrite
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga1b1194cc5d40a0467285112cd654a874:

#define CHK_ModRTMainSysFlashWrite (pfModRTMainSysFlashWrite != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga83ffe33ca350efadeb8d5b801bf7f928:

#define EXP_ModRTMainSysFlashWrite s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"ModRTMainSysFlashWrite", (RTS_UINTPTR) :ref:`ModRTMainSysFlashWrite <group___sys_mod_r_t_sub_itf_1gada2b5914f6b240ce33b68f434545d155>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga3983990bef2d4669d9a7a9cfb5066840:

#define USE_ModRTMainSysFlashFlush :ref:`PFMODRTMAINSYSFLASHFLUSH <group___sys_mod_r_t_sub_itf_1ga2a54416626eec5146e247263ab7e8a7f>` pfModRTMainSysFlashFlush;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga117ef0907c6f80f350faea3d5116cd21:

#define EXT_ModRTMainSysFlashFlush extern :ref:`PFMODRTMAINSYSFLASHFLUSH <group___sys_mod_r_t_sub_itf_1ga2a54416626eec5146e247263ab7e8a7f>` pfModRTMainSysFlashFlush;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga66a217509d362b2db97c93f6edebd2c1:

#define GET_ModRTMainSysFlashFlush s_pfCMGetAPI2( "ModRTMainSysFlashFlush", (RTS_VOID_FCTPTR *)&pfModRTMainSysFlashFlush, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga7dab591de96a5a696aafb2f9babccb19:

#define CAL_ModRTMainSysFlashFlush pfModRTMainSysFlashFlush
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1gaa76faf7e5ce1e89e051890f8eeb82ac4:

#define CHK_ModRTMainSysFlashFlush (pfModRTMainSysFlashFlush != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga258b205276e71efb772d701546147540:

#define EXP_ModRTMainSysFlashFlush s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"ModRTMainSysFlashFlush", (RTS_UINTPTR) :ref:`ModRTMainSysFlashFlush <group___sys_mod_r_t_sub_itf_1ga923863970726a4f75630ff5d2bfe125d>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga9cfac5a9df39b738f909096e6bd4017f:

#define USE_ModRTMainSysTimeGetMs :ref:`PFMODRTMAINSYSTIMEGETMS <group___sys_mod_r_t_sub_itf_1ga622a41ac7164e9c244bb96949139cf0b>` pfModRTMainSysTimeGetMs;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga14c7b9fab5c4736b00f61c7f19e4572b:

#define EXT_ModRTMainSysTimeGetMs extern :ref:`PFMODRTMAINSYSTIMEGETMS <group___sys_mod_r_t_sub_itf_1ga622a41ac7164e9c244bb96949139cf0b>` pfModRTMainSysTimeGetMs;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1gadc0db56d881cdd3deb47fc7a6e3ca72f:

#define GET_ModRTMainSysTimeGetMs s_pfCMGetAPI2( "ModRTMainSysTimeGetMs", (RTS_VOID_FCTPTR *)&pfModRTMainSysTimeGetMs, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga3c191e90ee6d9945b6be090e8bbbb4e0:

#define CAL_ModRTMainSysTimeGetMs pfModRTMainSysTimeGetMs
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga9ce3e74d67bbef288b4982e5f7de07bb:

#define CHK_ModRTMainSysTimeGetMs (pfModRTMainSysTimeGetMs != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga6a28edfefca778eb0c4c51696c8fb648:

#define EXP_ModRTMainSysTimeGetMs s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"ModRTMainSysTimeGetMs", (RTS_UINTPTR) :ref:`ModRTMainSysTimeGetMs <group___sys_mod_r_t_sub_itf_1ga1605f789cad24c69ba8d7536de79f9bd>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga684c0894ff86d707c144c96d8ff248ab:

#define USE_ModRTMainSysTimeGetUs :ref:`PFMODRTMAINSYSTIMEGETUS <group___sys_mod_r_t_sub_itf_1ga4405421868685e7f330a82f943c6cc93>` pfModRTMainSysTimeGetUs;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1gaafe70446910e99af5c85b631da4c331a:

#define EXT_ModRTMainSysTimeGetUs extern :ref:`PFMODRTMAINSYSTIMEGETUS <group___sys_mod_r_t_sub_itf_1ga4405421868685e7f330a82f943c6cc93>` pfModRTMainSysTimeGetUs;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga4ab18038c68ca004931ebb7f332dc67e:

#define GET_ModRTMainSysTimeGetUs s_pfCMGetAPI2( "ModRTMainSysTimeGetUs", (RTS_VOID_FCTPTR *)&pfModRTMainSysTimeGetUs, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga12b8faab7349d3168ea216da17e5cfe5:

#define CAL_ModRTMainSysTimeGetUs pfModRTMainSysTimeGetUs
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga93021dae7e459017cb87b3923e2b3c49:

#define CHK_ModRTMainSysTimeGetUs (pfModRTMainSysTimeGetUs != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga3f2b5e3f56f7699e17f19cd1af634888:

#define EXP_ModRTMainSysTimeGetUs s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"ModRTMainSysTimeGetUs", (RTS_UINTPTR) :ref:`ModRTMainSysTimeGetUs <group___sys_mod_r_t_sub_itf_1ga2f1c9fd746b8f3190845df1fca7b7321>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1gad86600cd4a23a83877264728c600dbbe:

#define USE_ModRTMainSysTimeGetNs :ref:`PFMODRTMAINSYSTIMEGETNS <group___sys_mod_r_t_sub_itf_1ga5f3c34d03c06fdb049ae67dfc6dab13c>` pfModRTMainSysTimeGetNs;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga2c8dd5f3167419e4fec2a61e814a0b9c:

#define EXT_ModRTMainSysTimeGetNs extern :ref:`PFMODRTMAINSYSTIMEGETNS <group___sys_mod_r_t_sub_itf_1ga5f3c34d03c06fdb049ae67dfc6dab13c>` pfModRTMainSysTimeGetNs;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga55e1e10a127cf0efa183e2502e27e89f:

#define GET_ModRTMainSysTimeGetNs s_pfCMGetAPI2( "ModRTMainSysTimeGetNs", (RTS_VOID_FCTPTR *)&pfModRTMainSysTimeGetNs, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga01d7e95ae49fa7044eccf2726ef05839:

#define CAL_ModRTMainSysTimeGetNs pfModRTMainSysTimeGetNs
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1gaa00941276fb7b6fc83c856452259de33:

#define CHK_ModRTMainSysTimeGetNs (pfModRTMainSysTimeGetNs != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga533ef2bc71eaaefe687c6ac18b976bee:

#define EXP_ModRTMainSysTimeGetNs s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"ModRTMainSysTimeGetNs", (RTS_UINTPTR) :ref:`ModRTMainSysTimeGetNs <group___sys_mod_r_t_sub_itf_1ga6474ac6129d8be65b15a70b7f2bcdcdf>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1gaf3be99d90d4c981900b839d20ebaf7c8:

#define EXTITF_SysModRTSub
^^^^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___sys_mod_r_t_sub_itf_1ga2dd0efac52ddead04b2376236ff9cce7:

typedef void( * PFMODRTSUBINIT) (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Memory address of :ref:`SysModRTSubFunctionTable <struct_sys_mod_r_t_sub_function_table>` EXTERN LIB SECTION BEGIN

.. _group___sys_mod_r_t_sub_itf_1ga0e5cccf2c80657c3b4d1882367607c40:

typedef void( * PFMODRTSUBCOMMCYCLE) (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga784610c853e5b6dc43025ff4d3b3f55c:

typedef RTS_RESULT( *  PFMODRTMAINSYSFLASHERASE) (FlashArea fa, RTS_SIZE ulSize, RTS_SIZE ulOffset)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1gae758a5d01875e0ba714761a9c1d862f7:

typedef RTS_RESULT( *  PFMODRTMAINSYSFLASHWRITE) (FlashArea fa, char *pcSource, RTS_SIZE ulSize, RTS_SIZE ulOffset)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga2a54416626eec5146e247263ab7e8a7f:

typedef RTS_RESULT( *  PFMODRTMAINSYSFLASHFLUSH) (FlashArea fa, RTS_SIZE ulSize, RTS_SIZE ulOffset)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga622a41ac7164e9c244bb96949139cf0b:

typedef RTS_UI32( *  PFMODRTMAINSYSTIMEGETMS) (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga4405421868685e7f330a82f943c6cc93:

typedef RTS_RESULT( *  PFMODRTMAINSYSTIMEGETUS) (RTS_SYSTIME *pTime)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga5f3c34d03c06fdb049ae67dfc6dab13c:

typedef RTS_RESULT( *  PFMODRTMAINSYSTIMEGETNS) (RTS_SYSTIME *pTime)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga6187151968409072a2aeaaf4105095cd:

typedef ISysModRTSub_C ISysModRTSub
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___sys_mod_r_t_sub_itf_1gae27c46a17462f0eaee51f26b56e07b19:

void ModRTSubInit (void)
^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1gae675bed1bfffba60017fa91da0e4e873:

void ModRTSubCommCycle (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_mod_r_t_sub_itf_1ga26b84365bb824e1af1a37a42b0226b43:

RTS_RESULT ModRTMainSysFlashErase (FlashArea fa, RTS_SIZE ulSize, RTS_SIZE ulOffset)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Interface wrapper function to ModRTMain. Erases a block of flash memory. You must erase a flash area before writing to it. This function is implemented in the generic part of SysFlash and splits up the block to erase in several smaller pieces with the maximum size of EraseBlockSize. For each piece :ref:`SysFlashErase_() <group___sys_flash_itf_1ga21fd79f255440888df20a0a73f181d87>` and the CommCycleHook is called, to keep the rest of the RTS also on single-tasking systems alive.

**Parameters**

+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | fa       | Flash area that shall be used for the operation. Now, FA_CODE and FA_FILE are defined. RANGE=[FA_UNKNOWN,FA_FILE,FA_CODE]                                                        |
+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | ulSize   | Size of flash area to erase RANGE=[0,VALID_FLASH_SIZE,INVALID_FLASH_SIZE]                                                                                                        |
+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | ulOffset | Offset of flash area to erase. The function adds the start address of the flash to calculate the physical address of the area. RANGE=[0,VALID_FLASH_OFFSET,INVALID_FLASH_OFFSET] |
+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+-------------------+------------------------------------+
| ERR_OK            | Flash erase was successful         |
+-------------------+------------------------------------+
| ERR_NOT_SUPPORTED | Type of Flasharea is not supported |
+-------------------+------------------------------------+
| ERR_PARAMETER     | size or offset wrong               |
+-------------------+------------------------------------+
| ERR_FAILED        | Flash could not be erased          |
+-------------------+------------------------------------+

**Returns:**

error code

.. _group___sys_mod_r_t_sub_itf_1gada2b5914f6b240ce33b68f434545d155:

RTS_RESULT ModRTMainSysFlashWrite (FlashArea fa, char *pcSource, RTS_SIZE ulSize, RTS_SIZE ulOffset)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Interface wrapper function to ModRTMain. Writes a block of data to the flash. The flash area has to be erased first with SysFlashErase. This function is implemented in the generic part of SysFlash and splits up the block to write in several smaller pieces with the maximum size of WriteBlockSize. For each piece :ref:`SysFlashWrite() <group___sys_flash_itf_1ga7f6f843ecfa4d0a430cfea4c5b0c7dc0>` and the CommCycleHook is called, to keep the rest of the RTS also on single-tasking systems alive.

**Parameters**

+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | fa       | Flash area that shall be used for the operation. Now, FA_CODE and FA_FILE are defined. RANGE=[FA_UNKNOWN,FA_FILE,FA_CODE]                                                           |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pcSource | Pointer to buffer that contains the data RANGE=[0,INVALID_SRC_BUFFER,VALID_SRC_BUFFER]                                                                                              |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | ulSize   | Size of the buffer RANGE=[0,VALID_BUFFER_SIZE,INVALID_BUFFER_SIZE]                                                                                                                  |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | ulOffset | Offset of flash area to write to. The function adds the start address of the flash to calculate the physical address of the area. RANGE=[0,VALID_FLASH_OFFSET,INVALID_FLASH_OFFSET] |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+-------------------+------------------------------------+
| ERR_OK            | Flash read was successful          |
+-------------------+------------------------------------+
| ERR_NOT_SUPPORTED | Type of Flasharea is not supported |
+-------------------+------------------------------------+
| ERR_PARAMETER     | pcSrc,size or offset wrong or null |
+-------------------+------------------------------------+
| ERR_FAILED        | Flash could not be read            |
+-------------------+------------------------------------+

**Returns:**

error code

.. _group___sys_mod_r_t_sub_itf_1ga923863970726a4f75630ff5d2bfe125d:

RTS_RESULT ModRTMainSysFlashFlush (FlashArea fa, RTS_SIZE ulSize, RTS_SIZE ulOffset)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Interface wrapper function to ModRTMain. Called when a file that was opened for writing is closed. This function is implemented in the generic part of SysFlash and splits up the block to flush in several smaller pieces with the maximum size of FlushBlockSize. For each piece :ref:`SysFlashFlush() <group___sys_flash_itf_1gaf63efee5ecd81889352162c5d8dc4ca3>` and the CommCycleHook is called, to keep the rest of the RTS also on single-tasking systems alive.

**Parameters**

+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | fa       | Flash area that shall be used for the operation. Now, FA_CODE and FA_FILE are defined. RANGE=[FA_UNKNOWN,FA_FILE,FA_CODE]                                                           |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | ulSize   | Size of the buffer RANGE=[0,VALID_BUFFER_SIZE,INVALID_BUFFER_SIZE]                                                                                                                  |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | ulOffset | Offset of flash area to write to. The function adds the start address of the flash to calculate the physical address of the area. RANGE=[0,VALID_FLASH_OFFSET,INVALID_FLASH_OFFSET] |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+-------------------+------------------------------------+
| ERR_OK            | Flash flush was successful         |
+-------------------+------------------------------------+
| ERR_NOT_SUPPORTED | Type of Flasharea is not supported |
+-------------------+------------------------------------+
| ERR_PARAMETER     | size or offset wrong or null       |
+-------------------+------------------------------------+
| ERR_FAILED        | Flash could not be flushed         |
+-------------------+------------------------------------+

**Returns:**

error code

.. _group___sys_mod_r_t_sub_itf_1ga1605f789cad24c69ba8d7536de79f9bd:

RTS_UI32 ModRTMainSysTimeGetMs (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Interface wrapper function to ModRTMain.

Return a monotonic, rising millisecond tick.

**Returns:**

Returns the millisecond tick

.. _group___sys_mod_r_t_sub_itf_1ga2f1c9fd746b8f3190845df1fca7b7321:

RTS_RESULT ModRTMainSysTimeGetUs (RTS_SYSTIME *pTime)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Interface wrapper function to ModRTMain.

Return a monotonic, rising microsecond tick.

**Parameters**

+---------+-------+----------------------------------------------------------+
| [inout] | pTime | Pointer to the time tick result RANGE=[NULL,VALID_PTIME] |
+---------+-------+----------------------------------------------------------+

**Returns:**

error code

**Return values**

+---------------+--------------------------------+
| ERR_OK        | Time was returned successfully |
+---------------+--------------------------------+
| ERR_PARAMETER | pTime was NULL                 |
+---------------+--------------------------------+
| ERR_FAILED    | Internal Error                 |
+---------------+--------------------------------+

.. _group___sys_mod_r_t_sub_itf_1ga6474ac6129d8be65b15a70b7f2bcdcdf:

RTS_RESULT ModRTMainSysTimeGetNs (RTS_SYSTIME *pTime)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Interface wrapper function to ModRTMain.

Return a monotonic, rising nanosecond tick.

**Parameters**

+---------+-------+----------------------------------------------------------+
| [inout] | pTime | Pointer to the time tick result RANGE=[NULL,VALID_PTIME] |
+---------+-------+----------------------------------------------------------+

**Returns:**

error code

**Return values**

+---------------+--------------------------------+
| ERR_OK        | Time was returned successfully |
+---------------+--------------------------------+
| ERR_PARAMETER | pTime was NULL                 |
+---------------+--------------------------------+
| ERR_FAILED    | Internal Error                 |
+---------------+--------------------------------+

.. last line of group.rst template
.. last line of composition.rst template


