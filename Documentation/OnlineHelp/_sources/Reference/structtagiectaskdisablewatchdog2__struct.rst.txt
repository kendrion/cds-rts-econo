.. first line of composition.rst template

:orphan:

.. first line of struct.rst template

.. _structtagiectaskdisablewatchdog2__struct:

==================================================
tagiectaskdisablewatchdog2_struct Struct Reference
==================================================

| #include ":ref:`CmpIecTaskItf.h <_cmp_iec_task_itf_8h>`"

Data Fields
-----------

- RTS_IEC_HANDLE :ref:`hIecTask <group___cmp_iec_task_itf_1gae6f7dc186dd27c0b703defbe0fa6f28e>`
- RTS_IEC_RESULT :ref:`IecTaskDisableWatchdog2 <group___cmp_iec_task_itf_1gaec9ff95b20548266633ea94597a23ef2>`

Detailed Description
--------------------

Disable watchdog for the specified task

.. note::

  - You have to enable the watchdog of the task with |IecTaskEnableWatchdog2| and _not_ with |IecTaskEnableWatchdog|, because they act on different task flags!

  - The watchdog is disabled until |IecTaskEnableWatchdog2| is called!!! So this is a security issue, if you never enable the watchdog!

  - As a consequence, you always have to call |IecTaskDisableWatchdog2| and |IecTaskEnableWatchdog2| symmetrical

  - Can be called nested. First call disables the watchdog. :return: Returns the runtime system error code (see CmpErrors.library) + ERR_OK: The watchdog for the task was disabled + ERR_PARAMETER: The task handle was invalid

Field Documentation
-------------------

.. _group___cmp_iec_task_itf_1gae6f7dc186dd27c0b703defbe0fa6f28e:

RTS_IEC_HANDLE tagiectaskdisablewatchdog2_struct::hIecTask
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_iec_task_itf_1gaec9ff95b20548266633ea94597a23ef2:

RTS_IEC_RESULT tagiectaskdisablewatchdog2_struct::IecTaskDisableWatchdog2
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The documentation for this struct was generated from the following file:
------------------------------------------------------------------------

CmpIecTaskItf.h

.. last line of struct.rst template
.. last line of composition.rst template


