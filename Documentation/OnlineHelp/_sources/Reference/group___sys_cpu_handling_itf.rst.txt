.. first line of composition.rst template

:orphan:

.. first line of group.rst template

.. _group___sys_cpu_handling_itf:

=================
SysCpuHandlingItf
=================

.. contents::
    :local:
    :depth: 1

Interface of SysCpuHandling.

Detailed Description
--------------------

The SysCpuHandling interface contains all CPU specific routines.

To detect, for which platform the component is compiled, there are special defines that must be set in sysdefines.h dependent of the compiler specific options (see category "Processor ID" in :ref:`SysTargetItf.h <_sys_target_itf_8h>` )

**Copyright:**

Copyright (c) 2017-2020 CODESYS Development GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Modules
-------

- :ref:`!	Platform defines - IEC code-generator specific! <group___sys_cpu_handling_itf___platformdefines-_i_e_ccode-generatorspecific>`

- :ref:`Platform defines <group___sys_cpu_handling_itf___platformdefines>`

- :ref:`Register Offsets <group___sys_cpu_handling_itf___register_offsets>`

- :ref:`Settings <group___sys_cpu_handling_itf___settings>`

- :ref:`Static defines <group___sys_cpu_handling_itf___staticdefines>`

Data Structures
---------------

- struct :ref:`tagsyscpuatomicadd_struct <structtagsyscpuatomicadd__struct>`

- struct :ref:`tagsyscpuatomicadd64_struct <structtagsyscpuatomicadd64__struct>`

- struct :ref:`tagsyscpuatomiccompareandswap_struct <structtagsyscpuatomiccompareandswap__struct>`

- struct :ref:`tagsyscpucalliecfuncwithparams_struct <structtagsyscpucalliecfuncwithparams__struct>`

- struct :ref:`tagsyscputestandreset_struct <structtagsyscputestandreset__struct>`

- struct :ref:`tagsyscputestandset_struct <structtagsyscputestandset__struct>`

- struct :ref:`tagsyscputestandsetbit_struct <structtagsyscputestandsetbit__struct>`

- struct :ref:`ISysCpuHandling_C <struct_i_sys_cpu_handling___c>`

Macros
------

- #define :ref:`USE_syscpuatomicadd <group___sys_cpu_handling_itf_1ga10e59d1b5d82c3f477ea2e335180b4d8>` :ref:`PFSYSCPUATOMICADD_IEC <group___sys_cpu_handling_itf_1gaf68bd8aaeb367d89521cf84035eb5f61>` pfsyscpuatomicadd;

- #define :ref:`EXT_syscpuatomicadd <group___sys_cpu_handling_itf_1gabc582a3dacc9acade7079a0cd13b4c31>` extern :ref:`PFSYSCPUATOMICADD_IEC <group___sys_cpu_handling_itf_1gaf68bd8aaeb367d89521cf84035eb5f61>` pfsyscpuatomicadd;

- #define :ref:`GET_syscpuatomicadd <group___sys_cpu_handling_itf_1ga1054eddf7034e6d2ec0aa6ac2ef9bd8c>` s_pfCMGetAPI2( "syscpuatomicadd", (RTS_VOID_FCTPTR *)&pfsyscpuatomicadd, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x414E4706, 0x03050D00)

- #define :ref:`CAL_syscpuatomicadd <group___sys_cpu_handling_itf_1ga1fc37320295182a459392956b681df77>` pfsyscpuatomicadd

- #define :ref:`CHK_syscpuatomicadd <group___sys_cpu_handling_itf_1ga604fe8aae094544370a200af9db5a6c1>` (pfsyscpuatomicadd != NULL)

- #define :ref:`EXP_syscpuatomicadd <group___sys_cpu_handling_itf_1ga240c97793e2a2db18dbdcfcae0b94f7a>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscpuatomicadd", (RTS_UINTPTR) :ref:`syscpuatomicadd <group___sys_cpu_handling_itf_1ga8c261020d58afb5468eb75cd51370829>` , 1, 0x414E4706, 0x03050D00)

- #define :ref:`USE_syscpuatomicadd64 <group___sys_cpu_handling_itf_1ga31a17e43e4c3d086d84f182deac86cee>` :ref:`PFSYSCPUATOMICADD64_IEC <group___sys_cpu_handling_itf_1ga621f00738d737c5dd8f241680cd54f4a>` pfsyscpuatomicadd64;

- #define :ref:`EXT_syscpuatomicadd64 <group___sys_cpu_handling_itf_1ga9b19b7e85ef865fa41e41c7f56c41b8c>` extern :ref:`PFSYSCPUATOMICADD64_IEC <group___sys_cpu_handling_itf_1ga621f00738d737c5dd8f241680cd54f4a>` pfsyscpuatomicadd64;

- #define :ref:`GET_syscpuatomicadd64 <group___sys_cpu_handling_itf_1ga4b4ca4e2aa107330fcf30cc4fc399afb>` s_pfCMGetAPI2( "syscpuatomicadd64", (RTS_VOID_FCTPTR *)&pfsyscpuatomicadd64, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xA535E8A0, 0x03050D00)

- #define :ref:`CAL_syscpuatomicadd64 <group___sys_cpu_handling_itf_1gaaa922149347fd2a167d3e21bd5b6386c>` pfsyscpuatomicadd64

- #define :ref:`CHK_syscpuatomicadd64 <group___sys_cpu_handling_itf_1ga06071e08a0e872d761f99bc415fe1554>` (pfsyscpuatomicadd64 != NULL)

- #define :ref:`EXP_syscpuatomicadd64 <group___sys_cpu_handling_itf_1ga7a4fada701b1c9e2deea92cced163adf>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscpuatomicadd64", (RTS_UINTPTR) :ref:`syscpuatomicadd64 <group___sys_cpu_handling_itf_1gaee858b810cf1482f1a5ba709f0774e72>` , 1, 0xA535E8A0, 0x03050D00)

- #define :ref:`USE_syscpuatomiccompareandswap <group___sys_cpu_handling_itf_1ga47577f06097fd293e723fb5b55783694>` :ref:`PFSYSCPUATOMICCOMPAREANDSWAP_IEC <group___sys_cpu_handling_itf_1ga15ffaf344bb9c51831a7b4bb01c71186>` pfsyscpuatomiccompareandswap;

- #define :ref:`EXT_syscpuatomiccompareandswap <group___sys_cpu_handling_itf_1ga1e5aa3ea17a0c404273872703b34ef04>` extern :ref:`PFSYSCPUATOMICCOMPAREANDSWAP_IEC <group___sys_cpu_handling_itf_1ga15ffaf344bb9c51831a7b4bb01c71186>` pfsyscpuatomiccompareandswap;

- #define :ref:`GET_syscpuatomiccompareandswap <group___sys_cpu_handling_itf_1ga4e527aa2d8dbadbc31a4a39250e11fe4>` s_pfCMGetAPI2( "syscpuatomiccompareandswap", (RTS_VOID_FCTPTR *)&pfsyscpuatomiccompareandswap, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xCBB4ED00, 0x03050D00)

- #define :ref:`CAL_syscpuatomiccompareandswap <group___sys_cpu_handling_itf_1ga3a6b52e0cbca40811eadb7e21a37d764>` pfsyscpuatomiccompareandswap

- #define :ref:`CHK_syscpuatomiccompareandswap <group___sys_cpu_handling_itf_1gaf6ddcfd3b394d88ec8ccdf061cd8bd8e>` (pfsyscpuatomiccompareandswap != NULL)

- #define :ref:`EXP_syscpuatomiccompareandswap <group___sys_cpu_handling_itf_1gac948a861779f9a6ed1a6c7c3e3717c34>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscpuatomiccompareandswap", (RTS_UINTPTR) :ref:`syscpuatomiccompareandswap <group___sys_cpu_handling_itf_1gaacc60cea73b09061bc6579895cab7f3b>` , 1, 0xCBB4ED00, 0x03050D00)

- #define :ref:`USE_syscpucalliecfuncwithparams <group___sys_cpu_handling_itf_1ga9f54ad7d8465b63fb9b7cb536d120ad6>` :ref:`PFSYSCPUCALLIECFUNCWITHPARAMS_IEC <group___sys_cpu_handling_itf_1gaf2028feb6cbd3464ad518fca55b5e087>` pfsyscpucalliecfuncwithparams;

- #define :ref:`EXT_syscpucalliecfuncwithparams <group___sys_cpu_handling_itf_1gafb908d87273250b554e71b944ff748a3>` extern :ref:`PFSYSCPUCALLIECFUNCWITHPARAMS_IEC <group___sys_cpu_handling_itf_1gaf2028feb6cbd3464ad518fca55b5e087>` pfsyscpucalliecfuncwithparams;

- #define :ref:`GET_syscpucalliecfuncwithparams <group___sys_cpu_handling_itf_1ga453bca072bde904d203214de2f667b94>` s_pfCMGetAPI2( "syscpucalliecfuncwithparams", (RTS_VOID_FCTPTR *)&pfsyscpucalliecfuncwithparams, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, RTSITF_GET_SIGNATURE(0, 0x837FB349), 0x03050500)

- #define :ref:`CAL_syscpucalliecfuncwithparams <group___sys_cpu_handling_itf_1ga75208601fac1732e3df72e7b897ec3c2>` pfsyscpucalliecfuncwithparams

- #define :ref:`CHK_syscpucalliecfuncwithparams <group___sys_cpu_handling_itf_1ga549273d2cb849e3da36732680d4f7b73>` (pfsyscpucalliecfuncwithparams != NULL)

- #define :ref:`EXP_syscpucalliecfuncwithparams <group___sys_cpu_handling_itf_1gafb988115137a390c03cfb4a9ebb036c6>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscpucalliecfuncwithparams", (RTS_UINTPTR) :ref:`syscpucalliecfuncwithparams <group___sys_cpu_handling_itf_1ga342ad004d7518950bad3f3b11a7b9bc0>` , 1, RTSITF_GET_SIGNATURE(0, 0x837FB349), 0x03050500)

- #define :ref:`USE_syscputestandreset <group___sys_cpu_handling_itf_1ga331521678e2f42c54e0fa435b2821a3b>` :ref:`PFSYSCPUTESTANDRESET_IEC <group___sys_cpu_handling_itf_1ga936373ae1fd39ceeb626d4ed5a9b7d31>` pfsyscputestandreset;

- #define :ref:`EXT_syscputestandreset <group___sys_cpu_handling_itf_1ga1c694a6c55e182d6296ead9286bf1645>` extern :ref:`PFSYSCPUTESTANDRESET_IEC <group___sys_cpu_handling_itf_1ga936373ae1fd39ceeb626d4ed5a9b7d31>` pfsyscputestandreset;

- #define :ref:`GET_syscputestandreset <group___sys_cpu_handling_itf_1gab68af17efcb919c627f1f879f2d09b33>` s_pfCMGetAPI2( "syscputestandreset", (RTS_VOID_FCTPTR *)&pfsyscputestandreset, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, RTSITF_GET_SIGNATURE(0, 0xCD8E165F), 0x03050500)

- #define :ref:`CAL_syscputestandreset <group___sys_cpu_handling_itf_1gafba9555b1ff8d8dac909b064450b551c>` pfsyscputestandreset

- #define :ref:`CHK_syscputestandreset <group___sys_cpu_handling_itf_1ga73be2d9c242226633051eb77dfde12a3>` (pfsyscputestandreset != NULL)

- #define :ref:`EXP_syscputestandreset <group___sys_cpu_handling_itf_1ga66faf95039e85e2648c44bd9bb3aead7>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscputestandreset", (RTS_UINTPTR) :ref:`syscputestandreset <group___sys_cpu_handling_itf_1ga9e0dc508a43652ec1d666a63d4e0e92d>` , 1, RTSITF_GET_SIGNATURE(0, 0xCD8E165F), 0x03050500)

- #define :ref:`USE_syscputestandset <group___sys_cpu_handling_itf_1ga407a6d953955bd61123e1402eb9d1ea2>` :ref:`PFSYSCPUTESTANDSET_IEC <group___sys_cpu_handling_itf_1gaa7fd50aa60ddf5063888d1a05cd3565e>` pfsyscputestandset;

- #define :ref:`EXT_syscputestandset <group___sys_cpu_handling_itf_1ga1699b37d794a1f5d1956421c027b0490>` extern :ref:`PFSYSCPUTESTANDSET_IEC <group___sys_cpu_handling_itf_1gaa7fd50aa60ddf5063888d1a05cd3565e>` pfsyscputestandset;

- #define :ref:`GET_syscputestandset <group___sys_cpu_handling_itf_1gabac1e69249310880be26d7fa8959ed81>` s_pfCMGetAPI2( "syscputestandset", (RTS_VOID_FCTPTR *)&pfsyscputestandset, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, RTSITF_GET_SIGNATURE(0, 0xC50F8C00), 0x03050500)

- #define :ref:`CAL_syscputestandset <group___sys_cpu_handling_itf_1gac35dfad8a79ef5f45b8cb74bed3ca6d5>` pfsyscputestandset

- #define :ref:`CHK_syscputestandset <group___sys_cpu_handling_itf_1ga278c9243e5b81f5ae46bd721ed6896fa>` (pfsyscputestandset != NULL)

- #define :ref:`EXP_syscputestandset <group___sys_cpu_handling_itf_1ga793d978b26793550dd0c941d55172ab7>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscputestandset", (RTS_UINTPTR) :ref:`syscputestandset <group___sys_cpu_handling_itf_1ga6e1edd6a282e2dc1bbd01b01de3750cf>` , 1, RTSITF_GET_SIGNATURE(0, 0xC50F8C00), 0x03050500)

- #define :ref:`USE_syscputestandsetbit <group___sys_cpu_handling_itf_1gad634e80747dd799ee5e721eaeed37be3>` :ref:`PFSYSCPUTESTANDSETBIT_IEC <group___sys_cpu_handling_itf_1gac1e17efa43987e41e1bb87496ccc1fea>` pfsyscputestandsetbit;

- #define :ref:`EXT_syscputestandsetbit <group___sys_cpu_handling_itf_1ga5e2244626ec543a9bacf663dec6baa59>` extern :ref:`PFSYSCPUTESTANDSETBIT_IEC <group___sys_cpu_handling_itf_1gac1e17efa43987e41e1bb87496ccc1fea>` pfsyscputestandsetbit;

- #define :ref:`GET_syscputestandsetbit <group___sys_cpu_handling_itf_1ga56ccf523d323ac14f032e12eb3018307>` s_pfCMGetAPI2( "syscputestandsetbit", (RTS_VOID_FCTPTR *)&pfsyscputestandsetbit, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x6A76133F, 0x03050D00)

- #define :ref:`CAL_syscputestandsetbit <group___sys_cpu_handling_itf_1gaef0569743d5471aa609dde1f1b0d2fa8>` pfsyscputestandsetbit

- #define :ref:`CHK_syscputestandsetbit <group___sys_cpu_handling_itf_1ga3e2d2813744a336b514d5dfa471eb075>` (pfsyscputestandsetbit != NULL)

- #define :ref:`EXP_syscputestandsetbit <group___sys_cpu_handling_itf_1ga54d142a233dfea879189c04ae747573f>` s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscputestandsetbit", (RTS_UINTPTR) :ref:`syscputestandsetbit <group___sys_cpu_handling_itf_1gac254a4ee5e08aae17ac9e1ac68b1b22c>` , 1, 0x6A76133F, 0x03050D00)

- #define :ref:`USE_SysCpuFlushInstructionCache <group___sys_cpu_handling_itf_1gae5bf649086ddcd7de2ec5c94b2715219>` :ref:`PFSYSCPUFLUSHINSTRUCTIONCACHE <group___sys_cpu_handling_itf_1gaa4952391bb9e086195591dcff1be56e1>` pfSysCpuFlushInstructionCache;

- #define :ref:`EXT_SysCpuFlushInstructionCache <group___sys_cpu_handling_itf_1ga364cf0c2a9034b0b298999081b7bf777>` extern :ref:`PFSYSCPUFLUSHINSTRUCTIONCACHE <group___sys_cpu_handling_itf_1gaa4952391bb9e086195591dcff1be56e1>` pfSysCpuFlushInstructionCache;

- #define :ref:`GET_SysCpuFlushInstructionCache <group___sys_cpu_handling_itf_1gadfe0f71462720370c6d64d74e52caadc>` s_pfCMGetAPI2( "SysCpuFlushInstructionCache", (RTS_VOID_FCTPTR *)&pfSysCpuFlushInstructionCache, (fl), 0, 0)

- #define :ref:`CAL_SysCpuFlushInstructionCache <group___sys_cpu_handling_itf_1ga0ae1cb1005d919d83ddb946bf69ce831>` pfSysCpuFlushInstructionCache

- #define :ref:`CHK_SysCpuFlushInstructionCache <group___sys_cpu_handling_itf_1ga759a8043125018b6c0f997198d0ef720>` (pfSysCpuFlushInstructionCache != NULL)

- #define :ref:`EXP_SysCpuFlushInstructionCache <group___sys_cpu_handling_itf_1gab743eada5ec5e3bc6407ec0f40218bd9>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuFlushInstructionCache", (RTS_UINTPTR) :ref:`SysCpuFlushInstructionCache <group___sys_cpu_handling_itf_1gad9c708fa59e4da7c362a2bd305dee8bc>` , 0, 0)

- #define :ref:`USE_SysCpuCallIecFuncWithParams <group___sys_cpu_handling_itf_1gab78792bdcb72c73d279477a24c70cd1b>` :ref:`PFSYSCPUCALLIECFUNCWITHPARAMS <group___sys_cpu_handling_itf_1ga85850e6d3370de26ea93ca7504b36873>` pfSysCpuCallIecFuncWithParams;

- #define :ref:`EXT_SysCpuCallIecFuncWithParams <group___sys_cpu_handling_itf_1gaeba2b0381f869de0632f99b90de4cdb4>` extern :ref:`PFSYSCPUCALLIECFUNCWITHPARAMS <group___sys_cpu_handling_itf_1ga85850e6d3370de26ea93ca7504b36873>` pfSysCpuCallIecFuncWithParams;

- #define :ref:`GET_SysCpuCallIecFuncWithParams <group___sys_cpu_handling_itf_1ga632ef46a33273bed1882d2071acab6f9>` s_pfCMGetAPI2( "SysCpuCallIecFuncWithParams", (RTS_VOID_FCTPTR *)&pfSysCpuCallIecFuncWithParams, (fl), 0, 0)

- #define :ref:`CAL_SysCpuCallIecFuncWithParams <group___sys_cpu_handling_itf_1ga545c3946e2f93851f1c215d51c723639>` pfSysCpuCallIecFuncWithParams

- #define :ref:`CHK_SysCpuCallIecFuncWithParams <group___sys_cpu_handling_itf_1ga9225224435dbe574499e020d97754fdb>` (pfSysCpuCallIecFuncWithParams != NULL)

- #define :ref:`EXP_SysCpuCallIecFuncWithParams <group___sys_cpu_handling_itf_1gaadb2d324fe745e9edbdb57f132eaccab>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuCallIecFuncWithParams", (RTS_UINTPTR) :ref:`SysCpuCallIecFuncWithParams <group___sys_cpu_handling_itf_1ga008f25292ebc98e6882d51ebd6303c14>` , 0, 0)

- #define :ref:`USE_SysCpuSetRegisterValue <group___sys_cpu_handling_itf_1ga8a157e465b86073f0fb0bbb98a5cb32c>` :ref:`PFSYSCPUSETREGISTERVALUE <group___sys_cpu_handling_itf_1ga7ee9c8f0ec12115d47c5138b2f5e9da7>` pfSysCpuSetRegisterValue;

- #define :ref:`EXT_SysCpuSetRegisterValue <group___sys_cpu_handling_itf_1ga50daf6e83108204b940d0fab67b54b9f>` extern :ref:`PFSYSCPUSETREGISTERVALUE <group___sys_cpu_handling_itf_1ga7ee9c8f0ec12115d47c5138b2f5e9da7>` pfSysCpuSetRegisterValue;

- #define :ref:`GET_SysCpuSetRegisterValue <group___sys_cpu_handling_itf_1ga561023ba32bb2fade5e08bfb623cb6e7>` s_pfCMGetAPI2( "SysCpuSetRegisterValue", (RTS_VOID_FCTPTR *)&pfSysCpuSetRegisterValue, (fl), 0, 0)

- #define :ref:`CAL_SysCpuSetRegisterValue <group___sys_cpu_handling_itf_1ga49477f7d056f9475bead7507fec40f89>` pfSysCpuSetRegisterValue

- #define :ref:`CHK_SysCpuSetRegisterValue <group___sys_cpu_handling_itf_1gac1c28dbd61895cf0ca751e008930aed5>` (pfSysCpuSetRegisterValue != NULL)

- #define :ref:`EXP_SysCpuSetRegisterValue <group___sys_cpu_handling_itf_1ga7fcf8ee5eb8f36fb6927c8d22a43eb17>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuSetRegisterValue", (RTS_UINTPTR) :ref:`SysCpuSetRegisterValue <group___sys_cpu_handling_itf_1gab93592451daf8f547df9e5ff298104a2>` , 0, 0)

- #define :ref:`USE_syscpudebughandler <group___sys_cpu_handling_itf_1ga1f7f8c0672c9a1c1d5dc7a8a2f1f39fb>` :ref:`PFSYSCPUDEBUGHANDLER_IEC <group___sys_cpu_handling_itf_1ga88ef50d0ca5e9249d6d5b6578ff1ae56>` pfsyscpudebughandler;

- #define :ref:`EXT_syscpudebughandler <group___sys_cpu_handling_itf_1ga994d8c89502a690a695ec6cf7ae2ecec>` extern :ref:`PFSYSCPUDEBUGHANDLER_IEC <group___sys_cpu_handling_itf_1ga88ef50d0ca5e9249d6d5b6578ff1ae56>` pfsyscpudebughandler;

- #define :ref:`GET_syscpudebughandler <group___sys_cpu_handling_itf_1gaf257ed4c66792629b28d86f7bcc48841>` s_pfCMGetAPI2( "syscpudebughandler", (RTS_VOID_FCTPTR *)&pfsyscpudebughandler, (fl), 0, 0)

- #define :ref:`CAL_syscpudebughandler <group___sys_cpu_handling_itf_1gaa924d8272d75c3391fbf8f63facba848>` pfsyscpudebughandler

- #define :ref:`CHK_syscpudebughandler <group___sys_cpu_handling_itf_1gaabe33d1dbfd2640f2a40f0275801729d>` (pfsyscpudebughandler != NULL)

- #define :ref:`EXP_syscpudebughandler <group___sys_cpu_handling_itf_1ga6242193c95266086f0ebd35db2b0215a>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"syscpudebughandler", (RTS_UINTPTR) :ref:`syscpudebughandler <group___sys_cpu_handling_itf_1gaf578b1b3a5575decb892beb9ce698a90>` , 1, 0)

- #define :ref:`USE_SysCpuGetBreakpointCode <group___sys_cpu_handling_itf_1gae5d844e1e347d742756cd340587b4c33>` :ref:`PFSYSCPUGETBREAKPOINTCODE <group___sys_cpu_handling_itf_1ga5a2e442f638383827a9d69f1db735b07>` pfSysCpuGetBreakpointCode;

- #define :ref:`EXT_SysCpuGetBreakpointCode <group___sys_cpu_handling_itf_1ga7af94ae3dfe8601ed81cc645e9ef2ea9>` extern :ref:`PFSYSCPUGETBREAKPOINTCODE <group___sys_cpu_handling_itf_1ga5a2e442f638383827a9d69f1db735b07>` pfSysCpuGetBreakpointCode;

- #define :ref:`GET_SysCpuGetBreakpointCode <group___sys_cpu_handling_itf_1ga8911b5feeb68ab21950468138e1660d5>` s_pfCMGetAPI2( "SysCpuGetBreakpointCode", (RTS_VOID_FCTPTR *)&pfSysCpuGetBreakpointCode, (fl), 0, 0)

- #define :ref:`CAL_SysCpuGetBreakpointCode <group___sys_cpu_handling_itf_1gae20c23475957674d52717724e17ad29b>` pfSysCpuGetBreakpointCode

- #define :ref:`CHK_SysCpuGetBreakpointCode <group___sys_cpu_handling_itf_1gae42a2853c4424184ce625ebfbcb4ffa5>` (pfSysCpuGetBreakpointCode != NULL)

- #define :ref:`EXP_SysCpuGetBreakpointCode <group___sys_cpu_handling_itf_1gad580d9006c4175994c1528ed8d1b4900>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetBreakpointCode", (RTS_UINTPTR) :ref:`SysCpuGetBreakpointCode <group___sys_cpu_handling_itf_1gaebc0723f197000901171b7967ee8969e>` , 0, 0)

- #define :ref:`USE_SysCpuGetCallstackEntry <group___sys_cpu_handling_itf_1gae724daef57ca2f6d63ea297728e1766d>` :ref:`PFSYSCPUGETCALLSTACKENTRY <group___sys_cpu_handling_itf_1ga3105ecadc630e77649434d8a3b642403>` pfSysCpuGetCallstackEntry;

- #define :ref:`EXT_SysCpuGetCallstackEntry <group___sys_cpu_handling_itf_1ga79ca688c91c32830a7d59c5095261bf9>` extern :ref:`PFSYSCPUGETCALLSTACKENTRY <group___sys_cpu_handling_itf_1ga3105ecadc630e77649434d8a3b642403>` pfSysCpuGetCallstackEntry;

- #define :ref:`GET_SysCpuGetCallstackEntry <group___sys_cpu_handling_itf_1ga098f5e017caa94e6447d65bad7047a97>` s_pfCMGetAPI2( "SysCpuGetCallstackEntry", (RTS_VOID_FCTPTR *)&pfSysCpuGetCallstackEntry, (fl), 0, 0)

- #define :ref:`CAL_SysCpuGetCallstackEntry <group___sys_cpu_handling_itf_1ga47f014e71047ad7de12fff9d28e2a424>` pfSysCpuGetCallstackEntry

- #define :ref:`CHK_SysCpuGetCallstackEntry <group___sys_cpu_handling_itf_1ga6bb8f1771d55263e155f12671024b9cf>` (pfSysCpuGetCallstackEntry != NULL)

- #define :ref:`EXP_SysCpuGetCallstackEntry <group___sys_cpu_handling_itf_1ga1ef68aaaef4aa30ccf86c6b6659b64a1>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetCallstackEntry", (RTS_UINTPTR) :ref:`SysCpuGetCallstackEntry <group___sys_cpu_handling_itf_1gacd19edb2dbc783f7deb654d33d60102a>` , 0, 0)

- #define :ref:`USE_SysCpuGetCallstackEntry2 <group___sys_cpu_handling_itf_1gaa9824b1c4c39afeeb06898dcfa7cfab0>` :ref:`PFSYSCPUGETCALLSTACKENTRY2 <group___sys_cpu_handling_itf_1ga6f5748e387744dad9079c9058b4e70d9>` pfSysCpuGetCallstackEntry2;

- #define :ref:`EXT_SysCpuGetCallstackEntry2 <group___sys_cpu_handling_itf_1ga59a87843e7aa4ab6c7cfdecbeedfef2c>` extern :ref:`PFSYSCPUGETCALLSTACKENTRY2 <group___sys_cpu_handling_itf_1ga6f5748e387744dad9079c9058b4e70d9>` pfSysCpuGetCallstackEntry2;

- #define :ref:`GET_SysCpuGetCallstackEntry2 <group___sys_cpu_handling_itf_1gaa681bf13ebc11d1f5c36462ef1a093dd>` s_pfCMGetAPI2( "SysCpuGetCallstackEntry2", (RTS_VOID_FCTPTR *)&pfSysCpuGetCallstackEntry2, (fl), 0, 0)

- #define :ref:`CAL_SysCpuGetCallstackEntry2 <group___sys_cpu_handling_itf_1gabb0bda6d5fa05142bcc4bc931d3f6a6c>` pfSysCpuGetCallstackEntry2

- #define :ref:`CHK_SysCpuGetCallstackEntry2 <group___sys_cpu_handling_itf_1gaec39bb2fe35bebe5f92f5997906d1f06>` (pfSysCpuGetCallstackEntry2 != NULL)

- #define :ref:`EXP_SysCpuGetCallstackEntry2 <group___sys_cpu_handling_itf_1ga4a11afabbc3c03e536f77dec72f03dbb>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetCallstackEntry2", (RTS_UINTPTR) :ref:`SysCpuGetCallstackEntry2 <group___sys_cpu_handling_itf_1ga81a59c15038759a6a8b84f8fc1a776bf>` , 0, 0)

- #define :ref:`USE_SysCpuGetCallstackEntry3 <group___sys_cpu_handling_itf_1gaac5943b3ec3c69417c83b898a9986cef>` :ref:`PFSYSCPUGETCALLSTACKENTRY3 <group___sys_cpu_handling_itf_1ga4e6ebdcd6574bf5903b8d350c1878490>` pfSysCpuGetCallstackEntry3;

- #define :ref:`EXT_SysCpuGetCallstackEntry3 <group___sys_cpu_handling_itf_1ga3b983f861fc62ab73dd222d0fec5c58c>` extern :ref:`PFSYSCPUGETCALLSTACKENTRY3 <group___sys_cpu_handling_itf_1ga4e6ebdcd6574bf5903b8d350c1878490>` pfSysCpuGetCallstackEntry3;

- #define :ref:`GET_SysCpuGetCallstackEntry3 <group___sys_cpu_handling_itf_1ga6849d6ab69ec54ac28c7e3c73142daf7>` s_pfCMGetAPI2( "SysCpuGetCallstackEntry3", (RTS_VOID_FCTPTR *)&pfSysCpuGetCallstackEntry3, (fl), 0, 0)

- #define :ref:`CAL_SysCpuGetCallstackEntry3 <group___sys_cpu_handling_itf_1gadad9737c89446c31d3fc6907ed72a73d>` pfSysCpuGetCallstackEntry3

- #define :ref:`CHK_SysCpuGetCallstackEntry3 <group___sys_cpu_handling_itf_1gac8b9c46a41d6e52819ddfe27a992efcf>` (pfSysCpuGetCallstackEntry3 != NULL)

- #define :ref:`EXP_SysCpuGetCallstackEntry3 <group___sys_cpu_handling_itf_1gaba35acf0bf7db7cda5819035410d180e>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetCallstackEntry3", (RTS_UINTPTR) :ref:`SysCpuGetCallstackEntry3 <group___sys_cpu_handling_itf_1gad47b07d01ccaab9a433ea87080d89ab1>` , 0, 0)

- #define :ref:`USE_SysCpuSearchOnStack_ <group___sys_cpu_handling_itf_1ga36595eb9a83e272ea8eb9488ce2c73cc>` :ref:`PFSYSCPUSEARCHONSTACK_ <group___sys_cpu_handling_itf_1ga3f010bb68826762bbf482d53ffa75edb>` pfSysCpuSearchOnStack_;

- #define :ref:`EXT_SysCpuSearchOnStack_ <group___sys_cpu_handling_itf_1ga376cee1651bf6abc362944aac5042efd>` extern :ref:`PFSYSCPUSEARCHONSTACK_ <group___sys_cpu_handling_itf_1ga3f010bb68826762bbf482d53ffa75edb>` pfSysCpuSearchOnStack_;

- #define :ref:`GET_SysCpuSearchOnStack_ <group___sys_cpu_handling_itf_1gab568b52272870ef88f1bf12053fee66d>` s_pfCMGetAPI2( "SysCpuSearchOnStack_", (RTS_VOID_FCTPTR *)&pfSysCpuSearchOnStack_, (fl), 0, 0)

- #define :ref:`CAL_SysCpuSearchOnStack_ <group___sys_cpu_handling_itf_1ga6c98af76b2599f3709dc37bbe0ddf2a3>` pfSysCpuSearchOnStack_

- #define :ref:`CHK_SysCpuSearchOnStack_ <group___sys_cpu_handling_itf_1gaec5583e2e57c788bb36156e19b190452>` (pfSysCpuSearchOnStack_ != NULL)

- #define :ref:`EXP_SysCpuSearchOnStack_ <group___sys_cpu_handling_itf_1ga06fa1535b4112f6db4f00e975cbb5ad6>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuSearchOnStack_", (RTS_UINTPTR) :ref:`SysCpuSearchOnStack_ <group___sys_cpu_handling_itf_1ga29efadcd4e9cb59135d39c400a764105>` , 0, 0)

- #define :ref:`USE_SysCpuGetInstancePointer <group___sys_cpu_handling_itf_1ga47447f25f6da992acb46420526ddf51e>` :ref:`PFSYSCPUGETINSTANCEPOINTER <group___sys_cpu_handling_itf_1ga201b576d5a1dc626be4e70d617ca45c2>` pfSysCpuGetInstancePointer;

- #define :ref:`EXT_SysCpuGetInstancePointer <group___sys_cpu_handling_itf_1ga98772947e93332c6e0ed2cd3b65b07fa>` extern :ref:`PFSYSCPUGETINSTANCEPOINTER <group___sys_cpu_handling_itf_1ga201b576d5a1dc626be4e70d617ca45c2>` pfSysCpuGetInstancePointer;

- #define :ref:`GET_SysCpuGetInstancePointer <group___sys_cpu_handling_itf_1ga9eeaabcc002e825a5769418638bd1557>` s_pfCMGetAPI2( "SysCpuGetInstancePointer", (RTS_VOID_FCTPTR *)&pfSysCpuGetInstancePointer, (fl), 0, 0)

- #define :ref:`CAL_SysCpuGetInstancePointer <group___sys_cpu_handling_itf_1ga1d8d6a13e67a8089ca95aa28aa67d68f>` pfSysCpuGetInstancePointer

- #define :ref:`CHK_SysCpuGetInstancePointer <group___sys_cpu_handling_itf_1ga14491da3f6f0ffebe4d7e725a3300442>` (pfSysCpuGetInstancePointer != NULL)

- #define :ref:`EXP_SysCpuGetInstancePointer <group___sys_cpu_handling_itf_1ga6a603f9728f8aa0e43ce802a8d41e7d7>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetInstancePointer", (RTS_UINTPTR) :ref:`SysCpuGetInstancePointer <group___sys_cpu_handling_itf_1ga2722c29654c8d24b447b45026f539318>` , 0, 0)

- #define :ref:`USE_SysCpuGetMonitoringBase <group___sys_cpu_handling_itf_1ga6b4af6c509f09b36025f617b442a9649>` :ref:`PFSYSCPUGETMONITORINGBASE <group___sys_cpu_handling_itf_1ga1b8a5f9594bc12610b96175cf4a0055e>` pfSysCpuGetMonitoringBase;

- #define :ref:`EXT_SysCpuGetMonitoringBase <group___sys_cpu_handling_itf_1ga3e30d9b4c8e46e37539ba43b71e7b324>` extern :ref:`PFSYSCPUGETMONITORINGBASE <group___sys_cpu_handling_itf_1ga1b8a5f9594bc12610b96175cf4a0055e>` pfSysCpuGetMonitoringBase;

- #define :ref:`GET_SysCpuGetMonitoringBase <group___sys_cpu_handling_itf_1gaa24435c80e76ea81a0ebc512e2710f94>` s_pfCMGetAPI2( "SysCpuGetMonitoringBase", (RTS_VOID_FCTPTR *)&pfSysCpuGetMonitoringBase, (fl), 0, 0)

- #define :ref:`CAL_SysCpuGetMonitoringBase <group___sys_cpu_handling_itf_1gab1efeaacd1b40d044c6bddde35962cd7>` pfSysCpuGetMonitoringBase

- #define :ref:`CHK_SysCpuGetMonitoringBase <group___sys_cpu_handling_itf_1gaf0b3e5eebe2155505d73c60ddfc76418>` (pfSysCpuGetMonitoringBase != NULL)

- #define :ref:`EXP_SysCpuGetMonitoringBase <group___sys_cpu_handling_itf_1gaed45f98cf11b4cc98f379c7b2c508db6>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetMonitoringBase", (RTS_UINTPTR) :ref:`SysCpuGetMonitoringBase <group___sys_cpu_handling_itf_1ga404cef3173477767d7ca48ae0f1cd21b>` , 0, 0)

- #define :ref:`USE_SysCpuTestAndSet <group___sys_cpu_handling_itf_1ga34681d6293caccdbe19b2a0083f68f3a>` :ref:`PFSYSCPUTESTANDSET <group___sys_cpu_handling_itf_1gaf2c6964cc5304d8c0d450b41a5b3a751>` pfSysCpuTestAndSet;

- #define :ref:`EXT_SysCpuTestAndSet <group___sys_cpu_handling_itf_1ga893293759999aff3e2277b26f0e34698>` extern :ref:`PFSYSCPUTESTANDSET <group___sys_cpu_handling_itf_1gaf2c6964cc5304d8c0d450b41a5b3a751>` pfSysCpuTestAndSet;

- #define :ref:`GET_SysCpuTestAndSet <group___sys_cpu_handling_itf_1gaba56c337357b75d9adb4b936eb5a912c>` s_pfCMGetAPI2( "SysCpuTestAndSet", (RTS_VOID_FCTPTR *)&pfSysCpuTestAndSet, (fl), 0, 0)

- #define :ref:`CAL_SysCpuTestAndSet <group___sys_cpu_handling_itf_1gaee164bae0aea3c5744e5321bdbb5691f>` pfSysCpuTestAndSet

- #define :ref:`CHK_SysCpuTestAndSet <group___sys_cpu_handling_itf_1ga154e17e66b73e9d9376ccd31ccbaa2de>` (pfSysCpuTestAndSet != NULL)

- #define :ref:`EXP_SysCpuTestAndSet <group___sys_cpu_handling_itf_1gab6cc1ed1dbc2e20e9dd256f545fb5a73>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuTestAndSet", (RTS_UINTPTR) :ref:`SysCpuTestAndSet <group___sys_cpu_handling_itf_1gaad809fbddfc71b5cd8948e0df09dfc16>` , 0, 0)

- #define :ref:`USE_SysCpuTestAndReset <group___sys_cpu_handling_itf_1ga39c6cb61cd1f1a28bda800cbc1278d47>` :ref:`PFSYSCPUTESTANDRESET <group___sys_cpu_handling_itf_1gae2b088e48ae8cbda1e4750416d2d935e>` pfSysCpuTestAndReset;

- #define :ref:`EXT_SysCpuTestAndReset <group___sys_cpu_handling_itf_1ga4affab8aeb443b1348e1e6ba5e815636>` extern :ref:`PFSYSCPUTESTANDRESET <group___sys_cpu_handling_itf_1gae2b088e48ae8cbda1e4750416d2d935e>` pfSysCpuTestAndReset;

- #define :ref:`GET_SysCpuTestAndReset <group___sys_cpu_handling_itf_1ga846bb393795145b64807d8bd21e58fe1>` s_pfCMGetAPI2( "SysCpuTestAndReset", (RTS_VOID_FCTPTR *)&pfSysCpuTestAndReset, (fl), 0, 0)

- #define :ref:`CAL_SysCpuTestAndReset <group___sys_cpu_handling_itf_1gac458736540348f27cace19339b6a00ee>` pfSysCpuTestAndReset

- #define :ref:`CHK_SysCpuTestAndReset <group___sys_cpu_handling_itf_1gaefc49ca67cbb77d8cfe74dcac9bfa394>` (pfSysCpuTestAndReset != NULL)

- #define :ref:`EXP_SysCpuTestAndReset <group___sys_cpu_handling_itf_1ga4bdf402cb4b5db2a63f3ae2d932ea277>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuTestAndReset", (RTS_UINTPTR) :ref:`SysCpuTestAndReset <group___sys_cpu_handling_itf_1ga5aa3e6598c2ed1d99444811172505991>` , 0, 0)

- #define :ref:`USE_SysCpuTestAndSetBit <group___sys_cpu_handling_itf_1gaef6f32963f4fdab5abda88d4e635f370>` :ref:`PFSYSCPUTESTANDSETBIT <group___sys_cpu_handling_itf_1ga9da344169e7bf1f91bd8e0b5f8f66f9b>` pfSysCpuTestAndSetBit;

- #define :ref:`EXT_SysCpuTestAndSetBit <group___sys_cpu_handling_itf_1gad48e5c222adba74f0c7917b537db1eb0>` extern :ref:`PFSYSCPUTESTANDSETBIT <group___sys_cpu_handling_itf_1ga9da344169e7bf1f91bd8e0b5f8f66f9b>` pfSysCpuTestAndSetBit;

- #define :ref:`GET_SysCpuTestAndSetBit <group___sys_cpu_handling_itf_1ga43e3d24d0e15e498380196d4c76306ba>` s_pfCMGetAPI2( "SysCpuTestAndSetBit", (RTS_VOID_FCTPTR *)&pfSysCpuTestAndSetBit, (fl), 0, 0)

- #define :ref:`CAL_SysCpuTestAndSetBit <group___sys_cpu_handling_itf_1ga0989435ed0355d58e885717db5d57a47>` pfSysCpuTestAndSetBit

- #define :ref:`CHK_SysCpuTestAndSetBit <group___sys_cpu_handling_itf_1ga8a14cc997e802c59386d81ba28bc2e16>` (pfSysCpuTestAndSetBit != NULL)

- #define :ref:`EXP_SysCpuTestAndSetBit <group___sys_cpu_handling_itf_1gab6ec9773efad4e95a66d8a22cc70c996>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuTestAndSetBit", (RTS_UINTPTR) :ref:`SysCpuTestAndSetBit <group___sys_cpu_handling_itf_1ga6f2a3920d62c0af0c60ba69fec79fff4>` , 0, 0)

- #define :ref:`USE_SysCpuTestAndSetBit2 <group___sys_cpu_handling_itf_1ga99c7cc70e9e6ac1be663f5a97a709ea1>` :ref:`PFSYSCPUTESTANDSETBIT2 <group___sys_cpu_handling_itf_1gaac9cf15db704b20717524fcb0bdf9086>` pfSysCpuTestAndSetBit2;

- #define :ref:`EXT_SysCpuTestAndSetBit2 <group___sys_cpu_handling_itf_1ga8047b66d7c3f0775decef73fab40e4cd>` extern :ref:`PFSYSCPUTESTANDSETBIT2 <group___sys_cpu_handling_itf_1gaac9cf15db704b20717524fcb0bdf9086>` pfSysCpuTestAndSetBit2;

- #define :ref:`GET_SysCpuTestAndSetBit2 <group___sys_cpu_handling_itf_1ga1d0bcb6ff0e7134a57e615706ee91259>` s_pfCMGetAPI2( "SysCpuTestAndSetBit2", (RTS_VOID_FCTPTR *)&pfSysCpuTestAndSetBit2, (fl), 0, 0)

- #define :ref:`CAL_SysCpuTestAndSetBit2 <group___sys_cpu_handling_itf_1ga4459a972a0600117a09a5d1cb4e80cc2>` pfSysCpuTestAndSetBit2

- #define :ref:`CHK_SysCpuTestAndSetBit2 <group___sys_cpu_handling_itf_1gafdcc53564725d7e97acc07c564a20f34>` (pfSysCpuTestAndSetBit2 != NULL)

- #define :ref:`EXP_SysCpuTestAndSetBit2 <group___sys_cpu_handling_itf_1gaf21dea2fffd9a2bf2a2d2953a2501876>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuTestAndSetBit2", (RTS_UINTPTR) :ref:`SysCpuTestAndSetBit2 <group___sys_cpu_handling_itf_1ga09ee5812ea46b913838c38203e770a86>` , 0, 0)

- #define :ref:`USE_SysCpuGetContext <group___sys_cpu_handling_itf_1gaf5c33290100857a06a14ad0d43338d11>` :ref:`PFSYSCPUGETCONTEXT <group___sys_cpu_handling_itf_1ga48196f76fc07d4f6f6bad68aae091391>` pfSysCpuGetContext;

- #define :ref:`EXT_SysCpuGetContext <group___sys_cpu_handling_itf_1ga88bcc59bbb43897520e7e2c7c3fa873e>` extern :ref:`PFSYSCPUGETCONTEXT <group___sys_cpu_handling_itf_1ga48196f76fc07d4f6f6bad68aae091391>` pfSysCpuGetContext;

- #define :ref:`GET_SysCpuGetContext <group___sys_cpu_handling_itf_1ga6614b14e5c805eea807149b59af00ada>` s_pfCMGetAPI2( "SysCpuGetContext", (RTS_VOID_FCTPTR *)&pfSysCpuGetContext, (fl), 0, 0)

- #define :ref:`CAL_SysCpuGetContext <group___sys_cpu_handling_itf_1gaaad3f7d436c6a2364dded515b8308da7>` pfSysCpuGetContext

- #define :ref:`CHK_SysCpuGetContext <group___sys_cpu_handling_itf_1ga24f1eafbeb29f0722ef4788bd1fc0a02>` (pfSysCpuGetContext != NULL)

- #define :ref:`EXP_SysCpuGetContext <group___sys_cpu_handling_itf_1ga1d1a0023a4c21666a59c241191f7119f>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetContext", (RTS_UINTPTR) :ref:`SysCpuGetContext <group___sys_cpu_handling_itf_1ga84f32e87a6568e4aab2cb573aebbf0be>` , 0, 0)

- #define :ref:`USE_SysCpuAtomicAdd <group___sys_cpu_handling_itf_1ga575ae0025a68a6d66ed9dfbcfe407392>` :ref:`PFSYSCPUATOMICADD <group___sys_cpu_handling_itf_1ga38a42f720a552ec10bcc319a8f86ad20>` pfSysCpuAtomicAdd;

- #define :ref:`EXT_SysCpuAtomicAdd <group___sys_cpu_handling_itf_1ga5b7c95ea353ce6cb1ad764e11b837aa0>` extern :ref:`PFSYSCPUATOMICADD <group___sys_cpu_handling_itf_1ga38a42f720a552ec10bcc319a8f86ad20>` pfSysCpuAtomicAdd;

- #define :ref:`GET_SysCpuAtomicAdd <group___sys_cpu_handling_itf_1ga3998266f2ce0f8328b12bf50ad4ce894>` s_pfCMGetAPI2( "SysCpuAtomicAdd", (RTS_VOID_FCTPTR *)&pfSysCpuAtomicAdd, (fl), 0, 0)

- #define :ref:`CAL_SysCpuAtomicAdd <group___sys_cpu_handling_itf_1ga71fe464385e28701ba13aee398ff17ef>` pfSysCpuAtomicAdd

- #define :ref:`CHK_SysCpuAtomicAdd <group___sys_cpu_handling_itf_1gac207a23d8e9c812a657eaae92e2aa1be>` (pfSysCpuAtomicAdd != NULL)

- #define :ref:`EXP_SysCpuAtomicAdd <group___sys_cpu_handling_itf_1gab9142606a3f6e13a8492e621fa281603>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuAtomicAdd", (RTS_UINTPTR) :ref:`SysCpuAtomicAdd <group___sys_cpu_handling_itf_1gaa546c6642b797434c619a165d0cd3714>` , 0, 0)

- #define :ref:`USE_SysCpuAtomicAdd64 <group___sys_cpu_handling_itf_1ga61edd47b7037ee782968a7d1a0a10885>` :ref:`PFSYSCPUATOMICADD64 <group___sys_cpu_handling_itf_1ga0794ab1d1f4909933e66b7b5ec63ff31>` pfSysCpuAtomicAdd64;

- #define :ref:`EXT_SysCpuAtomicAdd64 <group___sys_cpu_handling_itf_1ga74b4eee4c4cdc7bba861adbdd07dc55e>` extern :ref:`PFSYSCPUATOMICADD64 <group___sys_cpu_handling_itf_1ga0794ab1d1f4909933e66b7b5ec63ff31>` pfSysCpuAtomicAdd64;

- #define :ref:`GET_SysCpuAtomicAdd64 <group___sys_cpu_handling_itf_1gafb53b4df15f493cb055c670d81482d39>` s_pfCMGetAPI2( "SysCpuAtomicAdd64", (RTS_VOID_FCTPTR *)&pfSysCpuAtomicAdd64, (fl), 0, 0)

- #define :ref:`CAL_SysCpuAtomicAdd64 <group___sys_cpu_handling_itf_1ga996adfc00966174fdbefa1c2439144c4>` pfSysCpuAtomicAdd64

- #define :ref:`CHK_SysCpuAtomicAdd64 <group___sys_cpu_handling_itf_1ga1969e0141b454ae6b33ed798c2060ee7>` (pfSysCpuAtomicAdd64 != NULL)

- #define :ref:`EXP_SysCpuAtomicAdd64 <group___sys_cpu_handling_itf_1ga3632300922cb0205d4006dc9d083f8bc>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuAtomicAdd64", (RTS_UINTPTR) :ref:`SysCpuAtomicAdd64 <group___sys_cpu_handling_itf_1ga76fae609a3a3212e3ba964a7f563a1c1>` , 0, 0)

- #define :ref:`USE_SysCpuAtomicCompareAndSwap <group___sys_cpu_handling_itf_1ga011b3d72eeb9ea4715297747cf920ad0>` :ref:`PFSYSCPUATOMICCOMPAREANDSWAP <group___sys_cpu_handling_itf_1ga5e466630f90e3112f71a0a0c11071abe>` pfSysCpuAtomicCompareAndSwap;

- #define :ref:`EXT_SysCpuAtomicCompareAndSwap <group___sys_cpu_handling_itf_1ga906f4048ed994f048a4396aafd1db179>` extern :ref:`PFSYSCPUATOMICCOMPAREANDSWAP <group___sys_cpu_handling_itf_1ga5e466630f90e3112f71a0a0c11071abe>` pfSysCpuAtomicCompareAndSwap;

- #define :ref:`GET_SysCpuAtomicCompareAndSwap <group___sys_cpu_handling_itf_1ga41f951d00fc5c3f32b38dff44e29b945>` s_pfCMGetAPI2( "SysCpuAtomicCompareAndSwap", (RTS_VOID_FCTPTR *)&pfSysCpuAtomicCompareAndSwap, (fl), 0, 0)

- #define :ref:`CAL_SysCpuAtomicCompareAndSwap <group___sys_cpu_handling_itf_1gae8b4f656d00099af12cdb3c47a5790a1>` pfSysCpuAtomicCompareAndSwap

- #define :ref:`CHK_SysCpuAtomicCompareAndSwap <group___sys_cpu_handling_itf_1ga4b8ae882f0fabc7fc179a43b2b24ad8f>` (pfSysCpuAtomicCompareAndSwap != NULL)

- #define :ref:`EXP_SysCpuAtomicCompareAndSwap <group___sys_cpu_handling_itf_1ga362e71ed5ef8d22910907289241ad892>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuAtomicCompareAndSwap", (RTS_UINTPTR) :ref:`SysCpuAtomicCompareAndSwap <group___sys_cpu_handling_itf_1gab1318c09a385367612ec8efbae08ed22>` , 0, 0)

- #define :ref:`USE_SysCpuReadInt64 <group___sys_cpu_handling_itf_1gaa1f395bf7dd25dbbcbdaee83ab1df3aa>` :ref:`PFSYSCPUREADINT64 <group___sys_cpu_handling_itf_1gab3f2424bf538ac86d5efa7b8a48399a3>` pfSysCpuReadInt64;

- #define :ref:`EXT_SysCpuReadInt64 <group___sys_cpu_handling_itf_1ga24ac4ce7264939ffe04af9f5fca1fdb4>` extern :ref:`PFSYSCPUREADINT64 <group___sys_cpu_handling_itf_1gab3f2424bf538ac86d5efa7b8a48399a3>` pfSysCpuReadInt64;

- #define :ref:`GET_SysCpuReadInt64 <group___sys_cpu_handling_itf_1ga26ea5dd76c605216e6308af0542f68da>` s_pfCMGetAPI2( "SysCpuReadInt64", (RTS_VOID_FCTPTR *)&pfSysCpuReadInt64, (fl), 0, 0)

- #define :ref:`CAL_SysCpuReadInt64 <group___sys_cpu_handling_itf_1ga8c4e61026d83a4f439392d4b6980f848>` pfSysCpuReadInt64

- #define :ref:`CHK_SysCpuReadInt64 <group___sys_cpu_handling_itf_1gad2ffc124305285ad5fc1371496d8163d>` (pfSysCpuReadInt64 != NULL)

- #define :ref:`EXP_SysCpuReadInt64 <group___sys_cpu_handling_itf_1ga70371065554548ef29b8caa8081d78ce>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuReadInt64", (RTS_UINTPTR) :ref:`SysCpuReadInt64 <group___sys_cpu_handling_itf_1ga61ac7c09ad81724a97709944a601dc9f>` , 0, 0)

- #define :ref:`USE_SysCpuWriteInt64 <group___sys_cpu_handling_itf_1gaa60e531c796f51e13393133c480290cf>` :ref:`PFSYSCPUWRITEINT64 <group___sys_cpu_handling_itf_1gaf1cf7ef5c1afbfd87370d8506e300666>` pfSysCpuWriteInt64;

- #define :ref:`EXT_SysCpuWriteInt64 <group___sys_cpu_handling_itf_1gab1328b9db20ef89bf73a5a10904beb1a>` extern :ref:`PFSYSCPUWRITEINT64 <group___sys_cpu_handling_itf_1gaf1cf7ef5c1afbfd87370d8506e300666>` pfSysCpuWriteInt64;

- #define :ref:`GET_SysCpuWriteInt64 <group___sys_cpu_handling_itf_1ga27e1bdc46c0bec53667e4d5954759024>` s_pfCMGetAPI2( "SysCpuWriteInt64", (RTS_VOID_FCTPTR *)&pfSysCpuWriteInt64, (fl), 0, 0)

- #define :ref:`CAL_SysCpuWriteInt64 <group___sys_cpu_handling_itf_1ga4fc429a0c2c244c18732e9b2e99eeb4f>` pfSysCpuWriteInt64

- #define :ref:`CHK_SysCpuWriteInt64 <group___sys_cpu_handling_itf_1gaea4fde9f13028df0db8b00cb95704f3a>` (pfSysCpuWriteInt64 != NULL)

- #define :ref:`EXP_SysCpuWriteInt64 <group___sys_cpu_handling_itf_1gae6825de9fe48df80d44c7c935332ca42>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuWriteInt64", (RTS_UINTPTR) :ref:`SysCpuWriteInt64 <group___sys_cpu_handling_itf_1gadcdac72472ff6647d7649236eb71de26>` , 0, 0)

- #define :ref:`USE_SysCpuReadReal64 <group___sys_cpu_handling_itf_1ga6f1ee3025157c05c36f3ccd81acb3c38>` :ref:`PFSYSCPUREADREAL64 <group___sys_cpu_handling_itf_1ga5f76b98ee6817f06c4ce23d89c74556f>` pfSysCpuReadReal64;

- #define :ref:`EXT_SysCpuReadReal64 <group___sys_cpu_handling_itf_1ga80bfbc905a9368bef49bc5d988a1399f>` extern :ref:`PFSYSCPUREADREAL64 <group___sys_cpu_handling_itf_1ga5f76b98ee6817f06c4ce23d89c74556f>` pfSysCpuReadReal64;

- #define :ref:`GET_SysCpuReadReal64 <group___sys_cpu_handling_itf_1gad4432f49a0cb891ca14a5899177713af>` s_pfCMGetAPI2( "SysCpuReadReal64", (RTS_VOID_FCTPTR *)&pfSysCpuReadReal64, (fl), 0, 0)

- #define :ref:`CAL_SysCpuReadReal64 <group___sys_cpu_handling_itf_1ga2267fe856aae9691069ca3ebf37aaa74>` pfSysCpuReadReal64

- #define :ref:`CHK_SysCpuReadReal64 <group___sys_cpu_handling_itf_1ga0a5e6e0ff5b46b43d47683fbddec6092>` (pfSysCpuReadReal64 != NULL)

- #define :ref:`EXP_SysCpuReadReal64 <group___sys_cpu_handling_itf_1ga753eb8f687de2705d8680887aa98494d>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuReadReal64", (RTS_UINTPTR) :ref:`SysCpuReadReal64 <group___sys_cpu_handling_itf_1ga385c32805057dd999ad5a02452b1f2b2>` , 0, 0)

- #define :ref:`USE_SysCpuWriteReal64 <group___sys_cpu_handling_itf_1ga51deba8d4e3596876a0451490d636656>` :ref:`PFSYSCPUWRITEREAL64 <group___sys_cpu_handling_itf_1ga2e05044c13abcc9b23611bc0d22d082c>` pfSysCpuWriteReal64;

- #define :ref:`EXT_SysCpuWriteReal64 <group___sys_cpu_handling_itf_1ga63efa07128d9e7562ee893f4fde8ac66>` extern :ref:`PFSYSCPUWRITEREAL64 <group___sys_cpu_handling_itf_1ga2e05044c13abcc9b23611bc0d22d082c>` pfSysCpuWriteReal64;

- #define :ref:`GET_SysCpuWriteReal64 <group___sys_cpu_handling_itf_1ga02822a87c7be0393e5c3d60f79b596df>` s_pfCMGetAPI2( "SysCpuWriteReal64", (RTS_VOID_FCTPTR *)&pfSysCpuWriteReal64, (fl), 0, 0)

- #define :ref:`CAL_SysCpuWriteReal64 <group___sys_cpu_handling_itf_1ga66b351800fbe602abd34691eee75f2f3>` pfSysCpuWriteReal64

- #define :ref:`CHK_SysCpuWriteReal64 <group___sys_cpu_handling_itf_1ga72659eb5613ab93ce9084d8d76256cdc>` (pfSysCpuWriteReal64 != NULL)

- #define :ref:`EXP_SysCpuWriteReal64 <group___sys_cpu_handling_itf_1gad9a11ac1ea4b908616955c4081a84e8e>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuWriteReal64", (RTS_UINTPTR) :ref:`SysCpuWriteReal64 <group___sys_cpu_handling_itf_1gaedab8a704ce10c7088ac852a99c2905d>` , 0, 0)

- #define :ref:`USE_SysCpuWriteValueAtomic <group___sys_cpu_handling_itf_1gaa20b63d8d739f2d591fa95770513fdf4>` :ref:`PFSYSCPUWRITEVALUEATOMIC <group___sys_cpu_handling_itf_1gab97cbd30b63bdda59fa8211ba316d4a4>` pfSysCpuWriteValueAtomic;

- #define :ref:`EXT_SysCpuWriteValueAtomic <group___sys_cpu_handling_itf_1ga4a03b4aa7b45ab07b158d3df209d5302>` extern :ref:`PFSYSCPUWRITEVALUEATOMIC <group___sys_cpu_handling_itf_1gab97cbd30b63bdda59fa8211ba316d4a4>` pfSysCpuWriteValueAtomic;

- #define :ref:`GET_SysCpuWriteValueAtomic <group___sys_cpu_handling_itf_1ga7677187c29c6d9decb3a3bb919015eeb>` s_pfCMGetAPI2( "SysCpuWriteValueAtomic", (RTS_VOID_FCTPTR *)&pfSysCpuWriteValueAtomic, (fl), 0, 0)

- #define :ref:`CAL_SysCpuWriteValueAtomic <group___sys_cpu_handling_itf_1ga6a701ed2cadbd07f60f04e4c3f16bc16>` pfSysCpuWriteValueAtomic

- #define :ref:`CHK_SysCpuWriteValueAtomic <group___sys_cpu_handling_itf_1gaba40a54c6cc90771b65ab1810c0d9148>` (pfSysCpuWriteValueAtomic != NULL)

- #define :ref:`EXP_SysCpuWriteValueAtomic <group___sys_cpu_handling_itf_1gadc26d43d95bb25faf3fc97ad25c0e61b>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuWriteValueAtomic", (RTS_UINTPTR) :ref:`SysCpuWriteValueAtomic <group___sys_cpu_handling_itf_1ga8e4cc6e035e5082ca20a32ea4a904be3>` , 0, 0)

- #define :ref:`USE_SysCpuReadValueAtomic <group___sys_cpu_handling_itf_1ga8b3ca86bc9f15d6c9b38f57a22bcec75>` :ref:`PFSYSCPUREADVALUEATOMIC <group___sys_cpu_handling_itf_1ga8bc5fd7b31399ced0d552ec058d5df4a>` pfSysCpuReadValueAtomic;

- #define :ref:`EXT_SysCpuReadValueAtomic <group___sys_cpu_handling_itf_1ga31203a159bb2c4db1ab5e7134015a699>` extern :ref:`PFSYSCPUREADVALUEATOMIC <group___sys_cpu_handling_itf_1ga8bc5fd7b31399ced0d552ec058d5df4a>` pfSysCpuReadValueAtomic;

- #define :ref:`GET_SysCpuReadValueAtomic <group___sys_cpu_handling_itf_1gab66b2540996f4db22b1d79b8c67db26b>` s_pfCMGetAPI2( "SysCpuReadValueAtomic", (RTS_VOID_FCTPTR *)&pfSysCpuReadValueAtomic, (fl), 0, 0)

- #define :ref:`CAL_SysCpuReadValueAtomic <group___sys_cpu_handling_itf_1ga7d49294493763859063fc6ce0dbe2ecb>` pfSysCpuReadValueAtomic

- #define :ref:`CHK_SysCpuReadValueAtomic <group___sys_cpu_handling_itf_1ga3753d955ae2b22c42b51ebde2c417b5a>` (pfSysCpuReadValueAtomic != NULL)

- #define :ref:`EXP_SysCpuReadValueAtomic <group___sys_cpu_handling_itf_1gabb3f21e17b32ea64c8c8c36a3c0ae4e4>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuReadValueAtomic", (RTS_UINTPTR) :ref:`SysCpuReadValueAtomic <group___sys_cpu_handling_itf_1ga83020bd88a10f540befa908c6fafa96c>` , 0, 0)

- #define :ref:`ITF_SysCpuHandling <group___sys_cpu_handling_itf_1ga7714b75559c7f21bb5d6dd01bf3bcee5>`

- #define :ref:`EXTITF_SysCpuHandling <group___sys_cpu_handling_itf_1ga5624e438e0e63b44d0defa028bf4d467>`

Typedefs
--------

- typedef struct :ref:`tagsyscpuatomicadd_struct <structtagsyscpuatomicadd__struct>` :ref:`syscpuatomicadd_struct <group___sys_cpu_handling_itf_1ga50aabc20d5e6ebeb33501c4c2a08176a>`

- typedef void(* :ref:`PFSYSCPUATOMICADD_IEC <group___sys_cpu_handling_itf_1gaf68bd8aaeb367d89521cf84035eb5f61>`)(syscpuatomicadd_struct *p)

- typedef struct :ref:`tagsyscpuatomicadd64_struct <structtagsyscpuatomicadd64__struct>` :ref:`syscpuatomicadd64_struct <group___sys_cpu_handling_itf_1ga2d5fc38c2d2b1686471aa0b2777465f7>`

- typedef void(* :ref:`PFSYSCPUATOMICADD64_IEC <group___sys_cpu_handling_itf_1ga621f00738d737c5dd8f241680cd54f4a>`)(syscpuatomicadd64_struct *p)

- typedef struct :ref:`tagsyscpuatomiccompareandswap_struct <structtagsyscpuatomiccompareandswap__struct>` :ref:`syscpuatomiccompareandswap_struct <group___sys_cpu_handling_itf_1ga514f459b5057ef79692f596e01b87271>`

- typedef void(* :ref:`PFSYSCPUATOMICCOMPAREANDSWAP_IEC <group___sys_cpu_handling_itf_1ga15ffaf344bb9c51831a7b4bb01c71186>`)(syscpuatomiccompareandswap_struct *p)

- typedef struct :ref:`tagsyscpucalliecfuncwithparams_struct <structtagsyscpucalliecfuncwithparams__struct>` :ref:`syscpucalliecfuncwithparams_struct <group___sys_cpu_handling_itf_1ga9ad4c2d68fbe821e17fc3e1ddddc92d7>`

- typedef void(* :ref:`PFSYSCPUCALLIECFUNCWITHPARAMS_IEC <group___sys_cpu_handling_itf_1gaf2028feb6cbd3464ad518fca55b5e087>`)(syscpucalliecfuncwithparams_struct *p)

- typedef struct :ref:`tagsyscputestandreset_struct <structtagsyscputestandreset__struct>` :ref:`syscputestandreset_struct <group___sys_cpu_handling_itf_1ga4ce7f1fe46dbd728cef005e0d1ea2e07>`

- typedef void(* :ref:`PFSYSCPUTESTANDRESET_IEC <group___sys_cpu_handling_itf_1ga936373ae1fd39ceeb626d4ed5a9b7d31>`)(syscputestandreset_struct *p)

- typedef struct :ref:`tagsyscputestandset_struct <structtagsyscputestandset__struct>` :ref:`syscputestandset_struct <group___sys_cpu_handling_itf_1ga9ce286678bdba5814a3661e511732d2b>`

- typedef void(* :ref:`PFSYSCPUTESTANDSET_IEC <group___sys_cpu_handling_itf_1gaa7fd50aa60ddf5063888d1a05cd3565e>`)(syscputestandset_struct *p)

- typedef struct :ref:`tagsyscputestandsetbit_struct <structtagsyscputestandsetbit__struct>` :ref:`syscputestandsetbit_struct <group___sys_cpu_handling_itf_1ga3d7349a82fde096015e748c153642176>`

- typedef void(* :ref:`PFSYSCPUTESTANDSETBIT_IEC <group___sys_cpu_handling_itf_1gac1e17efa43987e41e1bb87496ccc1fea>`)(syscputestandsetbit_struct *p)

- typedef int(* :ref:`PFSYSCPUFLUSHINSTRUCTIONCACHE <group___sys_cpu_handling_itf_1gaa4952391bb9e086195591dcff1be56e1>`)(void *pBaseAddress, unsigned long ulSize)

- typedef RTS_RESULT(* :ref:`PFSYSCPUCALLIECFUNCWITHPARAMS <group___sys_cpu_handling_itf_1ga85850e6d3370de26ea93ca7504b36873>`)(RTS_VOID_FCTPTR pfIECFunc, void *pParam, int iSize)

- typedef RTS_RESULT(* :ref:`PFSYSCPUSETREGISTERVALUE <group___sys_cpu_handling_itf_1ga7ee9c8f0ec12115d47c5138b2f5e9da7>`)(RTS_UINTPTR *pRegBuff, RTS_I32 nRegisterNumber, RTS_UINTPTR newValue)

- typedef void(* :ref:`PFSYSCPUDEBUGHANDLER_IEC <group___sys_cpu_handling_itf_1ga88ef50d0ca5e9249d6d5b6578ff1ae56>`)(void)

- typedef RTS_RESULT(* :ref:`PFSYSCPUGETBREAKPOINTCODE <group___sys_cpu_handling_itf_1ga5a2e442f638383827a9d69f1db735b07>`)(unsigned char *pbyAreaStart, unsigned char *pbyBPAddress, unsigned char *pbyOpCode, int *piOpcodeSize)

- typedef RTS_RESULT(* :ref:`PFSYSCPUGETCALLSTACKENTRY <group___sys_cpu_handling_itf_1ga3105ecadc630e77649434d8a3b642403>`)(RTS_UINTPTR *pBP, void **ppAddress)

- typedef RTS_RESULT(* :ref:`PFSYSCPUGETCALLSTACKENTRY2 <group___sys_cpu_handling_itf_1ga6f5748e387744dad9079c9058b4e70d9>`)(RTS_I32 bIecCode, RTS_UINTPTR *pBP, void **ppAddress)

- typedef RTS_RESULT(* :ref:`PFSYSCPUGETCALLSTACKENTRY3 <group___sys_cpu_handling_itf_1ga4e6ebdcd6574bf5903b8d350c1878490>`)(RTS_I32 bIecCode, RegContext *pContext, void **ppAddress)

- typedef RTS_UINTPTR *(* :ref:`PFSYSCPUSEARCHONSTACK_ <group___sys_cpu_handling_itf_1ga3f010bb68826762bbf482d53ffa75edb>`)(RTS_UINTPTR *pSP, RTS_UINTPTR pattern, RTS_RESULT *pResult)

- typedef RTS_RESULT(* :ref:`PFSYSCPUGETINSTANCEPOINTER <group___sys_cpu_handling_itf_1ga201b576d5a1dc626be4e70d617ca45c2>`)(RTS_UINTPTR *pBP, void **ppInstancePointer)

- typedef RTS_RESULT(* :ref:`PFSYSCPUGETMONITORINGBASE <group___sys_cpu_handling_itf_1ga1b8a5f9594bc12610b96175cf4a0055e>`)(RTS_UINTPTR *pBP)

- typedef RTS_RESULT(* :ref:`PFSYSCPUTESTANDSET <group___sys_cpu_handling_itf_1gaf2c6964cc5304d8c0d450b41a5b3a751>`)(RTS_UI32 *pul, int iBit)

- typedef RTS_RESULT(* :ref:`PFSYSCPUTESTANDRESET <group___sys_cpu_handling_itf_1gae2b088e48ae8cbda1e4750416d2d935e>`)(RTS_UI32 *pul, int iBit)

- typedef RTS_RESULT(* :ref:`PFSYSCPUTESTANDSETBIT <group___sys_cpu_handling_itf_1ga9da344169e7bf1f91bd8e0b5f8f66f9b>`)(void *pAddress, int nLen, int iBit, int bSet)

- typedef RTS_RESULT(* :ref:`PFSYSCPUTESTANDSETBIT2 <group___sys_cpu_handling_itf_1gaac9cf15db704b20717524fcb0bdf9086>`)(void *pMemory, RTS_SIZE siLen, RTS_SIZE siBit, RTS_BOOL bSet)

- typedef RTS_RESULT(* :ref:`PFSYSCPUGETCONTEXT <group___sys_cpu_handling_itf_1ga48196f76fc07d4f6f6bad68aae091391>`)(RegContext *pContext)

- typedef RTS_I32(* :ref:`PFSYSCPUATOMICADD <group___sys_cpu_handling_itf_1ga38a42f720a552ec10bcc319a8f86ad20>`)(RTS_I32 *piValue, RTS_I32 nSum, RTS_RESULT *pResult)

- typedef RTS_I64(* :ref:`PFSYSCPUATOMICADD64 <group___sys_cpu_handling_itf_1ga0794ab1d1f4909933e66b7b5ec63ff31>`)(RTS_I64 *pi64Value, RTS_I64 nSum, RTS_RESULT *pResult)

- typedef RTS_RESULT(* :ref:`PFSYSCPUATOMICCOMPAREANDSWAP <group___sys_cpu_handling_itf_1ga5e466630f90e3112f71a0a0c11071abe>`)(void *pAddress, void *pSwapValue, void *pCompareValue, RTS_UI8 valueSize)

- typedef RTS_I64(* :ref:`PFSYSCPUREADINT64 <group___sys_cpu_handling_itf_1gab3f2424bf538ac86d5efa7b8a48399a3>`)(RTS_I64 *pSrc, RTS_RESULT *pResult)

- typedef RTS_RESULT(* :ref:`PFSYSCPUWRITEINT64 <group___sys_cpu_handling_itf_1gaf1cf7ef5c1afbfd87370d8506e300666>`)(RTS_I64 *pDest, RTS_I64 i64Value)

- typedef RTS_REAL64(* :ref:`PFSYSCPUREADREAL64 <group___sys_cpu_handling_itf_1ga5f76b98ee6817f06c4ce23d89c74556f>`)(RTS_REAL64 *pSrc, RTS_RESULT *pResult)

- typedef RTS_RESULT(* :ref:`PFSYSCPUWRITEREAL64 <group___sys_cpu_handling_itf_1ga2e05044c13abcc9b23611bc0d22d082c>`)(RTS_REAL64 *pDest, RTS_REAL64 r64Value)

- typedef RTS_RESULT(* :ref:`PFSYSCPUWRITEVALUEATOMIC <group___sys_cpu_handling_itf_1gab97cbd30b63bdda59fa8211ba316d4a4>`)(void *pDest, void *pSrc, RTS_UI32 nLen)

- typedef RTS_RESULT(* :ref:`PFSYSCPUREADVALUEATOMIC <group___sys_cpu_handling_itf_1ga8bc5fd7b31399ced0d552ec058d5df4a>`)(void *pSrc, void *pDest, RTS_UI32 nLen)

- typedef :ref:`ISysCpuHandling_C <struct_i_sys_cpu_handling___c>` :ref:`ISysCpuHandling <group___sys_cpu_handling_itf_1ga117e46ae162923b95d2a653634b0a217>`

Functions
---------

- void :ref:`syscpuatomicadd <group___sys_cpu_handling_itf_1ga8c261020d58afb5468eb75cd51370829>` (:ref:`syscpuatomicadd_struct <group___sys_cpu_handling_itf_1ga50aabc20d5e6ebeb33501c4c2a08176a>` * p)

- void :ref:`syscpuatomicadd64 <group___sys_cpu_handling_itf_1gaee858b810cf1482f1a5ba709f0774e72>` (:ref:`syscpuatomicadd64_struct <group___sys_cpu_handling_itf_1ga2d5fc38c2d2b1686471aa0b2777465f7>` * p)

- void :ref:`syscpuatomiccompareandswap <group___sys_cpu_handling_itf_1gaacc60cea73b09061bc6579895cab7f3b>` (:ref:`syscpuatomiccompareandswap_struct <group___sys_cpu_handling_itf_1ga514f459b5057ef79692f596e01b87271>` * p)

- void :ref:`syscpucalliecfuncwithparams <group___sys_cpu_handling_itf_1ga342ad004d7518950bad3f3b11a7b9bc0>` (:ref:`syscpucalliecfuncwithparams_struct <group___sys_cpu_handling_itf_1ga9ad4c2d68fbe821e17fc3e1ddddc92d7>` * p)

- void :ref:`syscputestandreset <group___sys_cpu_handling_itf_1ga9e0dc508a43652ec1d666a63d4e0e92d>` (:ref:`syscputestandreset_struct <group___sys_cpu_handling_itf_1ga4ce7f1fe46dbd728cef005e0d1ea2e07>` * p)

- void :ref:`syscputestandset <group___sys_cpu_handling_itf_1ga6e1edd6a282e2dc1bbd01b01de3750cf>` (:ref:`syscputestandset_struct <group___sys_cpu_handling_itf_1ga9ce286678bdba5814a3661e511732d2b>` * p)

- void :ref:`syscputestandsetbit <group___sys_cpu_handling_itf_1gac254a4ee5e08aae17ac9e1ac68b1b22c>` (:ref:`syscputestandsetbit_struct <group___sys_cpu_handling_itf_1ga3d7349a82fde096015e748c153642176>` * p)

- RTS_RESULT :ref:`SysCpuHandlingOSInit <group___sys_cpu_handling_itf_1gadce9940c690ed21f47d007f9878c5519>` (INIT_STRUCT * pInit)

- RTS_RESULT :ref:`SysCpuHandlingOSHookFunction <group___sys_cpu_handling_itf_1ga215b7f5823e79aee802deef8bcfd39ca>` (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)

- int :ref:`SysCpuFlushInstructionCache <group___sys_cpu_handling_itf_1gad9c708fa59e4da7c362a2bd305dee8bc>` (void * pBaseAddress, unsigned long ulSize)

- RTS_RESULT :ref:`SysCpuCallIecFuncWithParams <group___sys_cpu_handling_itf_1ga008f25292ebc98e6882d51ebd6303c14>` (RTS_VOID_FCTPTR pfIECFunc, void * pParam, int iSize)

- RTS_RESULT :ref:`SysCpuSetRegisterValue <group___sys_cpu_handling_itf_1gab93592451daf8f547df9e5ff298104a2>` (RTS_UINTPTR * pRegBuff, RTS_I32 nRegisterNumber, RTS_UINTPTR newValue)

- void :ref:`syscpudebughandler <group___sys_cpu_handling_itf_1gaf578b1b3a5575decb892beb9ce698a90>` (void)

- RTS_RESULT :ref:`SysCpuGetBreakpointCode <group___sys_cpu_handling_itf_1gaebc0723f197000901171b7967ee8969e>` (unsigned char * pbyAreaStart, unsigned char * pbyBPAddress, unsigned char * pbyOpCode, int * piOpcodeSize)

- RTS_RESULT :ref:`SysCpuGetCallstackEntry <group___sys_cpu_handling_itf_1gacd19edb2dbc783f7deb654d33d60102a>` (RTS_UINTPTR * pBP, void ** ppAddress)

- RTS_RESULT :ref:`SysCpuGetCallstackEntry2 <group___sys_cpu_handling_itf_1ga81a59c15038759a6a8b84f8fc1a776bf>` (RTS_I32 bIecCode, RTS_UINTPTR * pBP, void ** ppAddress)

- RTS_RESULT :ref:`SysCpuGetCallstackEntry3 <group___sys_cpu_handling_itf_1gad47b07d01ccaab9a433ea87080d89ab1>` (RTS_I32 bIecCode, :ref:`RegContext <group___sys_except_itf___exceptioncontext_1gab00884ef66266dc256618d479aade118>` * pContext, void ** ppAddress)

- RTS_UINTPTR * :ref:`SysCpuSearchOnStack_ <group___sys_cpu_handling_itf_1ga29efadcd4e9cb59135d39c400a764105>` (RTS_UINTPTR * pSP, RTS_UINTPTR pattern, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysCpuGetInstancePointer <group___sys_cpu_handling_itf_1ga2722c29654c8d24b447b45026f539318>` (RTS_UINTPTR * pBP, void ** ppInstancePointer)

- RTS_RESULT :ref:`SysCpuGetMonitoringBase <group___sys_cpu_handling_itf_1ga404cef3173477767d7ca48ae0f1cd21b>` (RTS_UINTPTR * pBP)

- RTS_RESULT :ref:`SysCpuTestAndSet <group___sys_cpu_handling_itf_1gaad809fbddfc71b5cd8948e0df09dfc16>` (RTS_UI32 * pul, int iBit)

- RTS_RESULT :ref:`SysCpuTestAndReset <group___sys_cpu_handling_itf_1ga5aa3e6598c2ed1d99444811172505991>` (RTS_UI32 * pul, int iBit)

- RTS_RESULT :ref:`SysCpuTestAndSetBit <group___sys_cpu_handling_itf_1ga6f2a3920d62c0af0c60ba69fec79fff4>` (void * pAddress, int nLen, int iBit, int bSet)

- RTS_RESULT :ref:`SysCpuTestAndSetBit2 <group___sys_cpu_handling_itf_1ga09ee5812ea46b913838c38203e770a86>` (void * pMemory, RTS_SIZE siLen, RTS_SIZE siBit, RTS_BOOL bSet)

- RTS_RESULT :ref:`SysCpuGetContext <group___sys_cpu_handling_itf_1ga84f32e87a6568e4aab2cb573aebbf0be>` (:ref:`RegContext <group___sys_except_itf___exceptioncontext_1gab00884ef66266dc256618d479aade118>` * pContext)

- RTS_I32 :ref:`SysCpuAtomicAdd <group___sys_cpu_handling_itf_1gaa546c6642b797434c619a165d0cd3714>` (RTS_I32 * piValue, RTS_I32 nSum, RTS_RESULT * pResult)

- RTS_I64 :ref:`SysCpuAtomicAdd64 <group___sys_cpu_handling_itf_1ga76fae609a3a3212e3ba964a7f563a1c1>` (RTS_I64 * pi64Value, RTS_I64 nSum, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysCpuAtomicCompareAndSwap <group___sys_cpu_handling_itf_1gab1318c09a385367612ec8efbae08ed22>` (void * pAddress, void * pSwapValue, void * pCompareValue, RTS_UI8 valueSize)

- RTS_I64 :ref:`SysCpuReadInt64 <group___sys_cpu_handling_itf_1ga61ac7c09ad81724a97709944a601dc9f>` (RTS_I64 * pSrc, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysCpuWriteInt64 <group___sys_cpu_handling_itf_1gadcdac72472ff6647d7649236eb71de26>` (RTS_I64 * pDest, RTS_I64 i64Value)

- RTS_REAL64 :ref:`SysCpuReadReal64 <group___sys_cpu_handling_itf_1ga385c32805057dd999ad5a02452b1f2b2>` (RTS_REAL64 * pSrc, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysCpuWriteReal64 <group___sys_cpu_handling_itf_1gaedab8a704ce10c7088ac852a99c2905d>` (RTS_REAL64 * pDest, RTS_REAL64 r64Value)

- RTS_RESULT :ref:`SysCpuWriteValueAtomic <group___sys_cpu_handling_itf_1ga8e4cc6e035e5082ca20a32ea4a904be3>` (void * pDest, void * pSrc, RTS_UI32 nLen)

- RTS_RESULT :ref:`SysCpuReadValueAtomic <group___sys_cpu_handling_itf_1ga83020bd88a10f540befa908c6fafa96c>` (void * pSrc, void * pDest, RTS_UI32 nLen)

Macro Definition Documentation
------------------------------
.. _group___sys_cpu_handling_itf_1ga10e59d1b5d82c3f477ea2e335180b4d8:

#define USE_syscpuatomicadd :ref:`PFSYSCPUATOMICADD_IEC <group___sys_cpu_handling_itf_1gaf68bd8aaeb367d89521cf84035eb5f61>` pfsyscpuatomicadd;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gabc582a3dacc9acade7079a0cd13b4c31:

#define EXT_syscpuatomicadd extern :ref:`PFSYSCPUATOMICADD_IEC <group___sys_cpu_handling_itf_1gaf68bd8aaeb367d89521cf84035eb5f61>` pfsyscpuatomicadd;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga1054eddf7034e6d2ec0aa6ac2ef9bd8c:

#define GET_syscpuatomicadd s_pfCMGetAPI2( "syscpuatomicadd", (RTS_VOID_FCTPTR *)&pfsyscpuatomicadd, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x414E4706, 0x03050D00)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga1fc37320295182a459392956b681df77:

#define CAL_syscpuatomicadd pfsyscpuatomicadd
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga604fe8aae094544370a200af9db5a6c1:

#define CHK_syscpuatomicadd (pfsyscpuatomicadd != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga240c97793e2a2db18dbdcfcae0b94f7a:

#define EXP_syscpuatomicadd s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscpuatomicadd", (RTS_UINTPTR) :ref:`syscpuatomicadd <group___sys_cpu_handling_itf_1ga8c261020d58afb5468eb75cd51370829>` , 1, 0x414E4706, 0x03050D00)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga31a17e43e4c3d086d84f182deac86cee:

#define USE_syscpuatomicadd64 :ref:`PFSYSCPUATOMICADD64_IEC <group___sys_cpu_handling_itf_1ga621f00738d737c5dd8f241680cd54f4a>` pfsyscpuatomicadd64;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga9b19b7e85ef865fa41e41c7f56c41b8c:

#define EXT_syscpuatomicadd64 extern :ref:`PFSYSCPUATOMICADD64_IEC <group___sys_cpu_handling_itf_1ga621f00738d737c5dd8f241680cd54f4a>` pfsyscpuatomicadd64;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga4b4ca4e2aa107330fcf30cc4fc399afb:

#define GET_syscpuatomicadd64 s_pfCMGetAPI2( "syscpuatomicadd64", (RTS_VOID_FCTPTR *)&pfsyscpuatomicadd64, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xA535E8A0, 0x03050D00)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaaa922149347fd2a167d3e21bd5b6386c:

#define CAL_syscpuatomicadd64 pfsyscpuatomicadd64
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga06071e08a0e872d761f99bc415fe1554:

#define CHK_syscpuatomicadd64 (pfsyscpuatomicadd64 != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga7a4fada701b1c9e2deea92cced163adf:

#define EXP_syscpuatomicadd64 s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscpuatomicadd64", (RTS_UINTPTR) :ref:`syscpuatomicadd64 <group___sys_cpu_handling_itf_1gaee858b810cf1482f1a5ba709f0774e72>` , 1, 0xA535E8A0, 0x03050D00)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga47577f06097fd293e723fb5b55783694:

#define USE_syscpuatomiccompareandswap :ref:`PFSYSCPUATOMICCOMPAREANDSWAP_IEC <group___sys_cpu_handling_itf_1ga15ffaf344bb9c51831a7b4bb01c71186>` pfsyscpuatomiccompareandswap;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga1e5aa3ea17a0c404273872703b34ef04:

#define EXT_syscpuatomiccompareandswap extern :ref:`PFSYSCPUATOMICCOMPAREANDSWAP_IEC <group___sys_cpu_handling_itf_1ga15ffaf344bb9c51831a7b4bb01c71186>` pfsyscpuatomiccompareandswap;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga4e527aa2d8dbadbc31a4a39250e11fe4:

#define GET_syscpuatomiccompareandswap s_pfCMGetAPI2( "syscpuatomiccompareandswap", (RTS_VOID_FCTPTR *)&pfsyscpuatomiccompareandswap, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0xCBB4ED00, 0x03050D00)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga3a6b52e0cbca40811eadb7e21a37d764:

#define CAL_syscpuatomiccompareandswap pfsyscpuatomiccompareandswap
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaf6ddcfd3b394d88ec8ccdf061cd8bd8e:

#define CHK_syscpuatomiccompareandswap (pfsyscpuatomiccompareandswap != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gac948a861779f9a6ed1a6c7c3e3717c34:

#define EXP_syscpuatomiccompareandswap s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscpuatomiccompareandswap", (RTS_UINTPTR) :ref:`syscpuatomiccompareandswap <group___sys_cpu_handling_itf_1gaacc60cea73b09061bc6579895cab7f3b>` , 1, 0xCBB4ED00, 0x03050D00)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga9f54ad7d8465b63fb9b7cb536d120ad6:

#define USE_syscpucalliecfuncwithparams :ref:`PFSYSCPUCALLIECFUNCWITHPARAMS_IEC <group___sys_cpu_handling_itf_1gaf2028feb6cbd3464ad518fca55b5e087>` pfsyscpucalliecfuncwithparams;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gafb908d87273250b554e71b944ff748a3:

#define EXT_syscpucalliecfuncwithparams extern :ref:`PFSYSCPUCALLIECFUNCWITHPARAMS_IEC <group___sys_cpu_handling_itf_1gaf2028feb6cbd3464ad518fca55b5e087>` pfsyscpucalliecfuncwithparams;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga453bca072bde904d203214de2f667b94:

#define GET_syscpucalliecfuncwithparams s_pfCMGetAPI2( "syscpucalliecfuncwithparams", (RTS_VOID_FCTPTR *)&pfsyscpucalliecfuncwithparams, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, RTSITF_GET_SIGNATURE(0, 0x837FB349), 0x03050500)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga75208601fac1732e3df72e7b897ec3c2:

#define CAL_syscpucalliecfuncwithparams pfsyscpucalliecfuncwithparams
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga549273d2cb849e3da36732680d4f7b73:

#define CHK_syscpucalliecfuncwithparams (pfsyscpucalliecfuncwithparams != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gafb988115137a390c03cfb4a9ebb036c6:

#define EXP_syscpucalliecfuncwithparams s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscpucalliecfuncwithparams", (RTS_UINTPTR) :ref:`syscpucalliecfuncwithparams <group___sys_cpu_handling_itf_1ga342ad004d7518950bad3f3b11a7b9bc0>` , 1, RTSITF_GET_SIGNATURE(0, 0x837FB349), 0x03050500)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga331521678e2f42c54e0fa435b2821a3b:

#define USE_syscputestandreset :ref:`PFSYSCPUTESTANDRESET_IEC <group___sys_cpu_handling_itf_1ga936373ae1fd39ceeb626d4ed5a9b7d31>` pfsyscputestandreset;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga1c694a6c55e182d6296ead9286bf1645:

#define EXT_syscputestandreset extern :ref:`PFSYSCPUTESTANDRESET_IEC <group___sys_cpu_handling_itf_1ga936373ae1fd39ceeb626d4ed5a9b7d31>` pfsyscputestandreset;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gab68af17efcb919c627f1f879f2d09b33:

#define GET_syscputestandreset s_pfCMGetAPI2( "syscputestandreset", (RTS_VOID_FCTPTR *)&pfsyscputestandreset, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, RTSITF_GET_SIGNATURE(0, 0xCD8E165F), 0x03050500)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gafba9555b1ff8d8dac909b064450b551c:

#define CAL_syscputestandreset pfsyscputestandreset
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga73be2d9c242226633051eb77dfde12a3:

#define CHK_syscputestandreset (pfsyscputestandreset != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga66faf95039e85e2648c44bd9bb3aead7:

#define EXP_syscputestandreset s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscputestandreset", (RTS_UINTPTR) :ref:`syscputestandreset <group___sys_cpu_handling_itf_1ga9e0dc508a43652ec1d666a63d4e0e92d>` , 1, RTSITF_GET_SIGNATURE(0, 0xCD8E165F), 0x03050500)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga407a6d953955bd61123e1402eb9d1ea2:

#define USE_syscputestandset :ref:`PFSYSCPUTESTANDSET_IEC <group___sys_cpu_handling_itf_1gaa7fd50aa60ddf5063888d1a05cd3565e>` pfsyscputestandset;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga1699b37d794a1f5d1956421c027b0490:

#define EXT_syscputestandset extern :ref:`PFSYSCPUTESTANDSET_IEC <group___sys_cpu_handling_itf_1gaa7fd50aa60ddf5063888d1a05cd3565e>` pfsyscputestandset;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gabac1e69249310880be26d7fa8959ed81:

#define GET_syscputestandset s_pfCMGetAPI2( "syscputestandset", (RTS_VOID_FCTPTR *)&pfsyscputestandset, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, RTSITF_GET_SIGNATURE(0, 0xC50F8C00), 0x03050500)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gac35dfad8a79ef5f45b8cb74bed3ca6d5:

#define CAL_syscputestandset pfsyscputestandset
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga278c9243e5b81f5ae46bd721ed6896fa:

#define CHK_syscputestandset (pfsyscputestandset != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga793d978b26793550dd0c941d55172ab7:

#define EXP_syscputestandset s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscputestandset", (RTS_UINTPTR) :ref:`syscputestandset <group___sys_cpu_handling_itf_1ga6e1edd6a282e2dc1bbd01b01de3750cf>` , 1, RTSITF_GET_SIGNATURE(0, 0xC50F8C00), 0x03050500)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gad634e80747dd799ee5e721eaeed37be3:

#define USE_syscputestandsetbit :ref:`PFSYSCPUTESTANDSETBIT_IEC <group___sys_cpu_handling_itf_1gac1e17efa43987e41e1bb87496ccc1fea>` pfsyscputestandsetbit;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga5e2244626ec543a9bacf663dec6baa59:

#define EXT_syscputestandsetbit extern :ref:`PFSYSCPUTESTANDSETBIT_IEC <group___sys_cpu_handling_itf_1gac1e17efa43987e41e1bb87496ccc1fea>` pfsyscputestandsetbit;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga56ccf523d323ac14f032e12eb3018307:

#define GET_syscputestandsetbit s_pfCMGetAPI2( "syscputestandsetbit", (RTS_VOID_FCTPTR *)&pfsyscputestandsetbit, (fl) | CM_IMPORT_EXTERNAL_LIB_FUNCTION, 0x6A76133F, 0x03050D00)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaef0569743d5471aa609dde1f1b0d2fa8:

#define CAL_syscputestandsetbit pfsyscputestandsetbit
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga3e2d2813744a336b514d5dfa471eb075:

#define CHK_syscputestandsetbit (pfsyscputestandsetbit != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga54d142a233dfea879189c04ae747573f:

#define EXP_syscputestandsetbit s_pfCMRegisterAPI2( (const CMP_EXT_FUNCTION_REF*)"syscputestandsetbit", (RTS_UINTPTR) :ref:`syscputestandsetbit <group___sys_cpu_handling_itf_1gac254a4ee5e08aae17ac9e1ac68b1b22c>` , 1, 0x6A76133F, 0x03050D00)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gae5bf649086ddcd7de2ec5c94b2715219:

#define USE_SysCpuFlushInstructionCache :ref:`PFSYSCPUFLUSHINSTRUCTIONCACHE <group___sys_cpu_handling_itf_1gaa4952391bb9e086195591dcff1be56e1>` pfSysCpuFlushInstructionCache;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga364cf0c2a9034b0b298999081b7bf777:

#define EXT_SysCpuFlushInstructionCache extern :ref:`PFSYSCPUFLUSHINSTRUCTIONCACHE <group___sys_cpu_handling_itf_1gaa4952391bb9e086195591dcff1be56e1>` pfSysCpuFlushInstructionCache;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gadfe0f71462720370c6d64d74e52caadc:

#define GET_SysCpuFlushInstructionCache s_pfCMGetAPI2( "SysCpuFlushInstructionCache", (RTS_VOID_FCTPTR *)&pfSysCpuFlushInstructionCache, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga0ae1cb1005d919d83ddb946bf69ce831:

#define CAL_SysCpuFlushInstructionCache pfSysCpuFlushInstructionCache
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga759a8043125018b6c0f997198d0ef720:

#define CHK_SysCpuFlushInstructionCache (pfSysCpuFlushInstructionCache != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gab743eada5ec5e3bc6407ec0f40218bd9:

#define EXP_SysCpuFlushInstructionCache s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuFlushInstructionCache", (RTS_UINTPTR) :ref:`SysCpuFlushInstructionCache <group___sys_cpu_handling_itf_1gad9c708fa59e4da7c362a2bd305dee8bc>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gab78792bdcb72c73d279477a24c70cd1b:

#define USE_SysCpuCallIecFuncWithParams :ref:`PFSYSCPUCALLIECFUNCWITHPARAMS <group___sys_cpu_handling_itf_1ga85850e6d3370de26ea93ca7504b36873>` pfSysCpuCallIecFuncWithParams;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaeba2b0381f869de0632f99b90de4cdb4:

#define EXT_SysCpuCallIecFuncWithParams extern :ref:`PFSYSCPUCALLIECFUNCWITHPARAMS <group___sys_cpu_handling_itf_1ga85850e6d3370de26ea93ca7504b36873>` pfSysCpuCallIecFuncWithParams;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga632ef46a33273bed1882d2071acab6f9:

#define GET_SysCpuCallIecFuncWithParams s_pfCMGetAPI2( "SysCpuCallIecFuncWithParams", (RTS_VOID_FCTPTR *)&pfSysCpuCallIecFuncWithParams, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga545c3946e2f93851f1c215d51c723639:

#define CAL_SysCpuCallIecFuncWithParams pfSysCpuCallIecFuncWithParams
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga9225224435dbe574499e020d97754fdb:

#define CHK_SysCpuCallIecFuncWithParams (pfSysCpuCallIecFuncWithParams != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaadb2d324fe745e9edbdb57f132eaccab:

#define EXP_SysCpuCallIecFuncWithParams s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuCallIecFuncWithParams", (RTS_UINTPTR) :ref:`SysCpuCallIecFuncWithParams <group___sys_cpu_handling_itf_1ga008f25292ebc98e6882d51ebd6303c14>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga8a157e465b86073f0fb0bbb98a5cb32c:

#define USE_SysCpuSetRegisterValue :ref:`PFSYSCPUSETREGISTERVALUE <group___sys_cpu_handling_itf_1ga7ee9c8f0ec12115d47c5138b2f5e9da7>` pfSysCpuSetRegisterValue;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga50daf6e83108204b940d0fab67b54b9f:

#define EXT_SysCpuSetRegisterValue extern :ref:`PFSYSCPUSETREGISTERVALUE <group___sys_cpu_handling_itf_1ga7ee9c8f0ec12115d47c5138b2f5e9da7>` pfSysCpuSetRegisterValue;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga561023ba32bb2fade5e08bfb623cb6e7:

#define GET_SysCpuSetRegisterValue s_pfCMGetAPI2( "SysCpuSetRegisterValue", (RTS_VOID_FCTPTR *)&pfSysCpuSetRegisterValue, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga49477f7d056f9475bead7507fec40f89:

#define CAL_SysCpuSetRegisterValue pfSysCpuSetRegisterValue
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gac1c28dbd61895cf0ca751e008930aed5:

#define CHK_SysCpuSetRegisterValue (pfSysCpuSetRegisterValue != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga7fcf8ee5eb8f36fb6927c8d22a43eb17:

#define EXP_SysCpuSetRegisterValue s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuSetRegisterValue", (RTS_UINTPTR) :ref:`SysCpuSetRegisterValue <group___sys_cpu_handling_itf_1gab93592451daf8f547df9e5ff298104a2>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga1f7f8c0672c9a1c1d5dc7a8a2f1f39fb:

#define USE_syscpudebughandler :ref:`PFSYSCPUDEBUGHANDLER_IEC <group___sys_cpu_handling_itf_1ga88ef50d0ca5e9249d6d5b6578ff1ae56>` pfsyscpudebughandler;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga994d8c89502a690a695ec6cf7ae2ecec:

#define EXT_syscpudebughandler extern :ref:`PFSYSCPUDEBUGHANDLER_IEC <group___sys_cpu_handling_itf_1ga88ef50d0ca5e9249d6d5b6578ff1ae56>` pfsyscpudebughandler;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaf257ed4c66792629b28d86f7bcc48841:

#define GET_syscpudebughandler s_pfCMGetAPI2( "syscpudebughandler", (RTS_VOID_FCTPTR *)&pfsyscpudebughandler, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaa924d8272d75c3391fbf8f63facba848:

#define CAL_syscpudebughandler pfsyscpudebughandler
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaabe33d1dbfd2640f2a40f0275801729d:

#define CHK_syscpudebughandler (pfsyscpudebughandler != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga6242193c95266086f0ebd35db2b0215a:

#define EXP_syscpudebughandler s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"syscpudebughandler", (RTS_UINTPTR) :ref:`syscpudebughandler <group___sys_cpu_handling_itf_1gaf578b1b3a5575decb892beb9ce698a90>` , 1, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gae5d844e1e347d742756cd340587b4c33:

#define USE_SysCpuGetBreakpointCode :ref:`PFSYSCPUGETBREAKPOINTCODE <group___sys_cpu_handling_itf_1ga5a2e442f638383827a9d69f1db735b07>` pfSysCpuGetBreakpointCode;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga7af94ae3dfe8601ed81cc645e9ef2ea9:

#define EXT_SysCpuGetBreakpointCode extern :ref:`PFSYSCPUGETBREAKPOINTCODE <group___sys_cpu_handling_itf_1ga5a2e442f638383827a9d69f1db735b07>` pfSysCpuGetBreakpointCode;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga8911b5feeb68ab21950468138e1660d5:

#define GET_SysCpuGetBreakpointCode s_pfCMGetAPI2( "SysCpuGetBreakpointCode", (RTS_VOID_FCTPTR *)&pfSysCpuGetBreakpointCode, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gae20c23475957674d52717724e17ad29b:

#define CAL_SysCpuGetBreakpointCode pfSysCpuGetBreakpointCode
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gae42a2853c4424184ce625ebfbcb4ffa5:

#define CHK_SysCpuGetBreakpointCode (pfSysCpuGetBreakpointCode != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gad580d9006c4175994c1528ed8d1b4900:

#define EXP_SysCpuGetBreakpointCode s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetBreakpointCode", (RTS_UINTPTR) :ref:`SysCpuGetBreakpointCode <group___sys_cpu_handling_itf_1gaebc0723f197000901171b7967ee8969e>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gae724daef57ca2f6d63ea297728e1766d:

#define USE_SysCpuGetCallstackEntry :ref:`PFSYSCPUGETCALLSTACKENTRY <group___sys_cpu_handling_itf_1ga3105ecadc630e77649434d8a3b642403>` pfSysCpuGetCallstackEntry;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga79ca688c91c32830a7d59c5095261bf9:

#define EXT_SysCpuGetCallstackEntry extern :ref:`PFSYSCPUGETCALLSTACKENTRY <group___sys_cpu_handling_itf_1ga3105ecadc630e77649434d8a3b642403>` pfSysCpuGetCallstackEntry;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga098f5e017caa94e6447d65bad7047a97:

#define GET_SysCpuGetCallstackEntry s_pfCMGetAPI2( "SysCpuGetCallstackEntry", (RTS_VOID_FCTPTR *)&pfSysCpuGetCallstackEntry, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga47f014e71047ad7de12fff9d28e2a424:

#define CAL_SysCpuGetCallstackEntry pfSysCpuGetCallstackEntry
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga6bb8f1771d55263e155f12671024b9cf:

#define CHK_SysCpuGetCallstackEntry (pfSysCpuGetCallstackEntry != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga1ef68aaaef4aa30ccf86c6b6659b64a1:

#define EXP_SysCpuGetCallstackEntry s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetCallstackEntry", (RTS_UINTPTR) :ref:`SysCpuGetCallstackEntry <group___sys_cpu_handling_itf_1gacd19edb2dbc783f7deb654d33d60102a>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaa9824b1c4c39afeeb06898dcfa7cfab0:

#define USE_SysCpuGetCallstackEntry2 :ref:`PFSYSCPUGETCALLSTACKENTRY2 <group___sys_cpu_handling_itf_1ga6f5748e387744dad9079c9058b4e70d9>` pfSysCpuGetCallstackEntry2;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga59a87843e7aa4ab6c7cfdecbeedfef2c:

#define EXT_SysCpuGetCallstackEntry2 extern :ref:`PFSYSCPUGETCALLSTACKENTRY2 <group___sys_cpu_handling_itf_1ga6f5748e387744dad9079c9058b4e70d9>` pfSysCpuGetCallstackEntry2;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaa681bf13ebc11d1f5c36462ef1a093dd:

#define GET_SysCpuGetCallstackEntry2 s_pfCMGetAPI2( "SysCpuGetCallstackEntry2", (RTS_VOID_FCTPTR *)&pfSysCpuGetCallstackEntry2, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gabb0bda6d5fa05142bcc4bc931d3f6a6c:

#define CAL_SysCpuGetCallstackEntry2 pfSysCpuGetCallstackEntry2
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaec39bb2fe35bebe5f92f5997906d1f06:

#define CHK_SysCpuGetCallstackEntry2 (pfSysCpuGetCallstackEntry2 != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga4a11afabbc3c03e536f77dec72f03dbb:

#define EXP_SysCpuGetCallstackEntry2 s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetCallstackEntry2", (RTS_UINTPTR) :ref:`SysCpuGetCallstackEntry2 <group___sys_cpu_handling_itf_1ga81a59c15038759a6a8b84f8fc1a776bf>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaac5943b3ec3c69417c83b898a9986cef:

#define USE_SysCpuGetCallstackEntry3 :ref:`PFSYSCPUGETCALLSTACKENTRY3 <group___sys_cpu_handling_itf_1ga4e6ebdcd6574bf5903b8d350c1878490>` pfSysCpuGetCallstackEntry3;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga3b983f861fc62ab73dd222d0fec5c58c:

#define EXT_SysCpuGetCallstackEntry3 extern :ref:`PFSYSCPUGETCALLSTACKENTRY3 <group___sys_cpu_handling_itf_1ga4e6ebdcd6574bf5903b8d350c1878490>` pfSysCpuGetCallstackEntry3;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga6849d6ab69ec54ac28c7e3c73142daf7:

#define GET_SysCpuGetCallstackEntry3 s_pfCMGetAPI2( "SysCpuGetCallstackEntry3", (RTS_VOID_FCTPTR *)&pfSysCpuGetCallstackEntry3, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gadad9737c89446c31d3fc6907ed72a73d:

#define CAL_SysCpuGetCallstackEntry3 pfSysCpuGetCallstackEntry3
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gac8b9c46a41d6e52819ddfe27a992efcf:

#define CHK_SysCpuGetCallstackEntry3 (pfSysCpuGetCallstackEntry3 != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaba35acf0bf7db7cda5819035410d180e:

#define EXP_SysCpuGetCallstackEntry3 s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetCallstackEntry3", (RTS_UINTPTR) :ref:`SysCpuGetCallstackEntry3 <group___sys_cpu_handling_itf_1gad47b07d01ccaab9a433ea87080d89ab1>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga36595eb9a83e272ea8eb9488ce2c73cc:

#define USE_SysCpuSearchOnStack_ :ref:`PFSYSCPUSEARCHONSTACK_ <group___sys_cpu_handling_itf_1ga3f010bb68826762bbf482d53ffa75edb>` pfSysCpuSearchOnStack_;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga376cee1651bf6abc362944aac5042efd:

#define EXT_SysCpuSearchOnStack_ extern :ref:`PFSYSCPUSEARCHONSTACK_ <group___sys_cpu_handling_itf_1ga3f010bb68826762bbf482d53ffa75edb>` pfSysCpuSearchOnStack_;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gab568b52272870ef88f1bf12053fee66d:

#define GET_SysCpuSearchOnStack_ s_pfCMGetAPI2( "SysCpuSearchOnStack_", (RTS_VOID_FCTPTR *)&pfSysCpuSearchOnStack_, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga6c98af76b2599f3709dc37bbe0ddf2a3:

#define CAL_SysCpuSearchOnStack_ pfSysCpuSearchOnStack_
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaec5583e2e57c788bb36156e19b190452:

#define CHK_SysCpuSearchOnStack_ (pfSysCpuSearchOnStack_ != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga06fa1535b4112f6db4f00e975cbb5ad6:

#define EXP_SysCpuSearchOnStack_ s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuSearchOnStack_", (RTS_UINTPTR) :ref:`SysCpuSearchOnStack_ <group___sys_cpu_handling_itf_1ga29efadcd4e9cb59135d39c400a764105>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga47447f25f6da992acb46420526ddf51e:

#define USE_SysCpuGetInstancePointer :ref:`PFSYSCPUGETINSTANCEPOINTER <group___sys_cpu_handling_itf_1ga201b576d5a1dc626be4e70d617ca45c2>` pfSysCpuGetInstancePointer;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga98772947e93332c6e0ed2cd3b65b07fa:

#define EXT_SysCpuGetInstancePointer extern :ref:`PFSYSCPUGETINSTANCEPOINTER <group___sys_cpu_handling_itf_1ga201b576d5a1dc626be4e70d617ca45c2>` pfSysCpuGetInstancePointer;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga9eeaabcc002e825a5769418638bd1557:

#define GET_SysCpuGetInstancePointer s_pfCMGetAPI2( "SysCpuGetInstancePointer", (RTS_VOID_FCTPTR *)&pfSysCpuGetInstancePointer, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga1d8d6a13e67a8089ca95aa28aa67d68f:

#define CAL_SysCpuGetInstancePointer pfSysCpuGetInstancePointer
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga14491da3f6f0ffebe4d7e725a3300442:

#define CHK_SysCpuGetInstancePointer (pfSysCpuGetInstancePointer != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga6a603f9728f8aa0e43ce802a8d41e7d7:

#define EXP_SysCpuGetInstancePointer s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetInstancePointer", (RTS_UINTPTR) :ref:`SysCpuGetInstancePointer <group___sys_cpu_handling_itf_1ga2722c29654c8d24b447b45026f539318>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga6b4af6c509f09b36025f617b442a9649:

#define USE_SysCpuGetMonitoringBase :ref:`PFSYSCPUGETMONITORINGBASE <group___sys_cpu_handling_itf_1ga1b8a5f9594bc12610b96175cf4a0055e>` pfSysCpuGetMonitoringBase;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga3e30d9b4c8e46e37539ba43b71e7b324:

#define EXT_SysCpuGetMonitoringBase extern :ref:`PFSYSCPUGETMONITORINGBASE <group___sys_cpu_handling_itf_1ga1b8a5f9594bc12610b96175cf4a0055e>` pfSysCpuGetMonitoringBase;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaa24435c80e76ea81a0ebc512e2710f94:

#define GET_SysCpuGetMonitoringBase s_pfCMGetAPI2( "SysCpuGetMonitoringBase", (RTS_VOID_FCTPTR *)&pfSysCpuGetMonitoringBase, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gab1efeaacd1b40d044c6bddde35962cd7:

#define CAL_SysCpuGetMonitoringBase pfSysCpuGetMonitoringBase
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaf0b3e5eebe2155505d73c60ddfc76418:

#define CHK_SysCpuGetMonitoringBase (pfSysCpuGetMonitoringBase != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaed45f98cf11b4cc98f379c7b2c508db6:

#define EXP_SysCpuGetMonitoringBase s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetMonitoringBase", (RTS_UINTPTR) :ref:`SysCpuGetMonitoringBase <group___sys_cpu_handling_itf_1ga404cef3173477767d7ca48ae0f1cd21b>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga34681d6293caccdbe19b2a0083f68f3a:

#define USE_SysCpuTestAndSet :ref:`PFSYSCPUTESTANDSET <group___sys_cpu_handling_itf_1gaf2c6964cc5304d8c0d450b41a5b3a751>` pfSysCpuTestAndSet;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga893293759999aff3e2277b26f0e34698:

#define EXT_SysCpuTestAndSet extern :ref:`PFSYSCPUTESTANDSET <group___sys_cpu_handling_itf_1gaf2c6964cc5304d8c0d450b41a5b3a751>` pfSysCpuTestAndSet;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaba56c337357b75d9adb4b936eb5a912c:

#define GET_SysCpuTestAndSet s_pfCMGetAPI2( "SysCpuTestAndSet", (RTS_VOID_FCTPTR *)&pfSysCpuTestAndSet, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaee164bae0aea3c5744e5321bdbb5691f:

#define CAL_SysCpuTestAndSet pfSysCpuTestAndSet
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga154e17e66b73e9d9376ccd31ccbaa2de:

#define CHK_SysCpuTestAndSet (pfSysCpuTestAndSet != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gab6cc1ed1dbc2e20e9dd256f545fb5a73:

#define EXP_SysCpuTestAndSet s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuTestAndSet", (RTS_UINTPTR) :ref:`SysCpuTestAndSet <group___sys_cpu_handling_itf_1gaad809fbddfc71b5cd8948e0df09dfc16>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga39c6cb61cd1f1a28bda800cbc1278d47:

#define USE_SysCpuTestAndReset :ref:`PFSYSCPUTESTANDRESET <group___sys_cpu_handling_itf_1gae2b088e48ae8cbda1e4750416d2d935e>` pfSysCpuTestAndReset;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga4affab8aeb443b1348e1e6ba5e815636:

#define EXT_SysCpuTestAndReset extern :ref:`PFSYSCPUTESTANDRESET <group___sys_cpu_handling_itf_1gae2b088e48ae8cbda1e4750416d2d935e>` pfSysCpuTestAndReset;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga846bb393795145b64807d8bd21e58fe1:

#define GET_SysCpuTestAndReset s_pfCMGetAPI2( "SysCpuTestAndReset", (RTS_VOID_FCTPTR *)&pfSysCpuTestAndReset, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gac458736540348f27cace19339b6a00ee:

#define CAL_SysCpuTestAndReset pfSysCpuTestAndReset
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaefc49ca67cbb77d8cfe74dcac9bfa394:

#define CHK_SysCpuTestAndReset (pfSysCpuTestAndReset != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga4bdf402cb4b5db2a63f3ae2d932ea277:

#define EXP_SysCpuTestAndReset s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuTestAndReset", (RTS_UINTPTR) :ref:`SysCpuTestAndReset <group___sys_cpu_handling_itf_1ga5aa3e6598c2ed1d99444811172505991>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaef6f32963f4fdab5abda88d4e635f370:

#define USE_SysCpuTestAndSetBit :ref:`PFSYSCPUTESTANDSETBIT <group___sys_cpu_handling_itf_1ga9da344169e7bf1f91bd8e0b5f8f66f9b>` pfSysCpuTestAndSetBit;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gad48e5c222adba74f0c7917b537db1eb0:

#define EXT_SysCpuTestAndSetBit extern :ref:`PFSYSCPUTESTANDSETBIT <group___sys_cpu_handling_itf_1ga9da344169e7bf1f91bd8e0b5f8f66f9b>` pfSysCpuTestAndSetBit;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga43e3d24d0e15e498380196d4c76306ba:

#define GET_SysCpuTestAndSetBit s_pfCMGetAPI2( "SysCpuTestAndSetBit", (RTS_VOID_FCTPTR *)&pfSysCpuTestAndSetBit, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga0989435ed0355d58e885717db5d57a47:

#define CAL_SysCpuTestAndSetBit pfSysCpuTestAndSetBit
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga8a14cc997e802c59386d81ba28bc2e16:

#define CHK_SysCpuTestAndSetBit (pfSysCpuTestAndSetBit != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gab6ec9773efad4e95a66d8a22cc70c996:

#define EXP_SysCpuTestAndSetBit s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuTestAndSetBit", (RTS_UINTPTR) :ref:`SysCpuTestAndSetBit <group___sys_cpu_handling_itf_1ga6f2a3920d62c0af0c60ba69fec79fff4>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga99c7cc70e9e6ac1be663f5a97a709ea1:

#define USE_SysCpuTestAndSetBit2 :ref:`PFSYSCPUTESTANDSETBIT2 <group___sys_cpu_handling_itf_1gaac9cf15db704b20717524fcb0bdf9086>` pfSysCpuTestAndSetBit2;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga8047b66d7c3f0775decef73fab40e4cd:

#define EXT_SysCpuTestAndSetBit2 extern :ref:`PFSYSCPUTESTANDSETBIT2 <group___sys_cpu_handling_itf_1gaac9cf15db704b20717524fcb0bdf9086>` pfSysCpuTestAndSetBit2;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga1d0bcb6ff0e7134a57e615706ee91259:

#define GET_SysCpuTestAndSetBit2 s_pfCMGetAPI2( "SysCpuTestAndSetBit2", (RTS_VOID_FCTPTR *)&pfSysCpuTestAndSetBit2, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga4459a972a0600117a09a5d1cb4e80cc2:

#define CAL_SysCpuTestAndSetBit2 pfSysCpuTestAndSetBit2
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gafdcc53564725d7e97acc07c564a20f34:

#define CHK_SysCpuTestAndSetBit2 (pfSysCpuTestAndSetBit2 != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaf21dea2fffd9a2bf2a2d2953a2501876:

#define EXP_SysCpuTestAndSetBit2 s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuTestAndSetBit2", (RTS_UINTPTR) :ref:`SysCpuTestAndSetBit2 <group___sys_cpu_handling_itf_1ga09ee5812ea46b913838c38203e770a86>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaf5c33290100857a06a14ad0d43338d11:

#define USE_SysCpuGetContext :ref:`PFSYSCPUGETCONTEXT <group___sys_cpu_handling_itf_1ga48196f76fc07d4f6f6bad68aae091391>` pfSysCpuGetContext;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga88bcc59bbb43897520e7e2c7c3fa873e:

#define EXT_SysCpuGetContext extern :ref:`PFSYSCPUGETCONTEXT <group___sys_cpu_handling_itf_1ga48196f76fc07d4f6f6bad68aae091391>` pfSysCpuGetContext;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga6614b14e5c805eea807149b59af00ada:

#define GET_SysCpuGetContext s_pfCMGetAPI2( "SysCpuGetContext", (RTS_VOID_FCTPTR *)&pfSysCpuGetContext, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaaad3f7d436c6a2364dded515b8308da7:

#define CAL_SysCpuGetContext pfSysCpuGetContext
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga24f1eafbeb29f0722ef4788bd1fc0a02:

#define CHK_SysCpuGetContext (pfSysCpuGetContext != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga1d1a0023a4c21666a59c241191f7119f:

#define EXP_SysCpuGetContext s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuGetContext", (RTS_UINTPTR) :ref:`SysCpuGetContext <group___sys_cpu_handling_itf_1ga84f32e87a6568e4aab2cb573aebbf0be>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga575ae0025a68a6d66ed9dfbcfe407392:

#define USE_SysCpuAtomicAdd :ref:`PFSYSCPUATOMICADD <group___sys_cpu_handling_itf_1ga38a42f720a552ec10bcc319a8f86ad20>` pfSysCpuAtomicAdd;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga5b7c95ea353ce6cb1ad764e11b837aa0:

#define EXT_SysCpuAtomicAdd extern :ref:`PFSYSCPUATOMICADD <group___sys_cpu_handling_itf_1ga38a42f720a552ec10bcc319a8f86ad20>` pfSysCpuAtomicAdd;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga3998266f2ce0f8328b12bf50ad4ce894:

#define GET_SysCpuAtomicAdd s_pfCMGetAPI2( "SysCpuAtomicAdd", (RTS_VOID_FCTPTR *)&pfSysCpuAtomicAdd, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga71fe464385e28701ba13aee398ff17ef:

#define CAL_SysCpuAtomicAdd pfSysCpuAtomicAdd
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gac207a23d8e9c812a657eaae92e2aa1be:

#define CHK_SysCpuAtomicAdd (pfSysCpuAtomicAdd != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gab9142606a3f6e13a8492e621fa281603:

#define EXP_SysCpuAtomicAdd s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuAtomicAdd", (RTS_UINTPTR) :ref:`SysCpuAtomicAdd <group___sys_cpu_handling_itf_1gaa546c6642b797434c619a165d0cd3714>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga61edd47b7037ee782968a7d1a0a10885:

#define USE_SysCpuAtomicAdd64 :ref:`PFSYSCPUATOMICADD64 <group___sys_cpu_handling_itf_1ga0794ab1d1f4909933e66b7b5ec63ff31>` pfSysCpuAtomicAdd64;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga74b4eee4c4cdc7bba861adbdd07dc55e:

#define EXT_SysCpuAtomicAdd64 extern :ref:`PFSYSCPUATOMICADD64 <group___sys_cpu_handling_itf_1ga0794ab1d1f4909933e66b7b5ec63ff31>` pfSysCpuAtomicAdd64;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gafb53b4df15f493cb055c670d81482d39:

#define GET_SysCpuAtomicAdd64 s_pfCMGetAPI2( "SysCpuAtomicAdd64", (RTS_VOID_FCTPTR *)&pfSysCpuAtomicAdd64, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga996adfc00966174fdbefa1c2439144c4:

#define CAL_SysCpuAtomicAdd64 pfSysCpuAtomicAdd64
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga1969e0141b454ae6b33ed798c2060ee7:

#define CHK_SysCpuAtomicAdd64 (pfSysCpuAtomicAdd64 != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga3632300922cb0205d4006dc9d083f8bc:

#define EXP_SysCpuAtomicAdd64 s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuAtomicAdd64", (RTS_UINTPTR) :ref:`SysCpuAtomicAdd64 <group___sys_cpu_handling_itf_1ga76fae609a3a3212e3ba964a7f563a1c1>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga011b3d72eeb9ea4715297747cf920ad0:

#define USE_SysCpuAtomicCompareAndSwap :ref:`PFSYSCPUATOMICCOMPAREANDSWAP <group___sys_cpu_handling_itf_1ga5e466630f90e3112f71a0a0c11071abe>` pfSysCpuAtomicCompareAndSwap;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga906f4048ed994f048a4396aafd1db179:

#define EXT_SysCpuAtomicCompareAndSwap extern :ref:`PFSYSCPUATOMICCOMPAREANDSWAP <group___sys_cpu_handling_itf_1ga5e466630f90e3112f71a0a0c11071abe>` pfSysCpuAtomicCompareAndSwap;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga41f951d00fc5c3f32b38dff44e29b945:

#define GET_SysCpuAtomicCompareAndSwap s_pfCMGetAPI2( "SysCpuAtomicCompareAndSwap", (RTS_VOID_FCTPTR *)&pfSysCpuAtomicCompareAndSwap, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gae8b4f656d00099af12cdb3c47a5790a1:

#define CAL_SysCpuAtomicCompareAndSwap pfSysCpuAtomicCompareAndSwap
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga4b8ae882f0fabc7fc179a43b2b24ad8f:

#define CHK_SysCpuAtomicCompareAndSwap (pfSysCpuAtomicCompareAndSwap != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga362e71ed5ef8d22910907289241ad892:

#define EXP_SysCpuAtomicCompareAndSwap s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuAtomicCompareAndSwap", (RTS_UINTPTR) :ref:`SysCpuAtomicCompareAndSwap <group___sys_cpu_handling_itf_1gab1318c09a385367612ec8efbae08ed22>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaa1f395bf7dd25dbbcbdaee83ab1df3aa:

#define USE_SysCpuReadInt64 :ref:`PFSYSCPUREADINT64 <group___sys_cpu_handling_itf_1gab3f2424bf538ac86d5efa7b8a48399a3>` pfSysCpuReadInt64;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga24ac4ce7264939ffe04af9f5fca1fdb4:

#define EXT_SysCpuReadInt64 extern :ref:`PFSYSCPUREADINT64 <group___sys_cpu_handling_itf_1gab3f2424bf538ac86d5efa7b8a48399a3>` pfSysCpuReadInt64;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga26ea5dd76c605216e6308af0542f68da:

#define GET_SysCpuReadInt64 s_pfCMGetAPI2( "SysCpuReadInt64", (RTS_VOID_FCTPTR *)&pfSysCpuReadInt64, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga8c4e61026d83a4f439392d4b6980f848:

#define CAL_SysCpuReadInt64 pfSysCpuReadInt64
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gad2ffc124305285ad5fc1371496d8163d:

#define CHK_SysCpuReadInt64 (pfSysCpuReadInt64 != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga70371065554548ef29b8caa8081d78ce:

#define EXP_SysCpuReadInt64 s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuReadInt64", (RTS_UINTPTR) :ref:`SysCpuReadInt64 <group___sys_cpu_handling_itf_1ga61ac7c09ad81724a97709944a601dc9f>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaa60e531c796f51e13393133c480290cf:

#define USE_SysCpuWriteInt64 :ref:`PFSYSCPUWRITEINT64 <group___sys_cpu_handling_itf_1gaf1cf7ef5c1afbfd87370d8506e300666>` pfSysCpuWriteInt64;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gab1328b9db20ef89bf73a5a10904beb1a:

#define EXT_SysCpuWriteInt64 extern :ref:`PFSYSCPUWRITEINT64 <group___sys_cpu_handling_itf_1gaf1cf7ef5c1afbfd87370d8506e300666>` pfSysCpuWriteInt64;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga27e1bdc46c0bec53667e4d5954759024:

#define GET_SysCpuWriteInt64 s_pfCMGetAPI2( "SysCpuWriteInt64", (RTS_VOID_FCTPTR *)&pfSysCpuWriteInt64, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga4fc429a0c2c244c18732e9b2e99eeb4f:

#define CAL_SysCpuWriteInt64 pfSysCpuWriteInt64
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaea4fde9f13028df0db8b00cb95704f3a:

#define CHK_SysCpuWriteInt64 (pfSysCpuWriteInt64 != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gae6825de9fe48df80d44c7c935332ca42:

#define EXP_SysCpuWriteInt64 s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuWriteInt64", (RTS_UINTPTR) :ref:`SysCpuWriteInt64 <group___sys_cpu_handling_itf_1gadcdac72472ff6647d7649236eb71de26>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga6f1ee3025157c05c36f3ccd81acb3c38:

#define USE_SysCpuReadReal64 :ref:`PFSYSCPUREADREAL64 <group___sys_cpu_handling_itf_1ga5f76b98ee6817f06c4ce23d89c74556f>` pfSysCpuReadReal64;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga80bfbc905a9368bef49bc5d988a1399f:

#define EXT_SysCpuReadReal64 extern :ref:`PFSYSCPUREADREAL64 <group___sys_cpu_handling_itf_1ga5f76b98ee6817f06c4ce23d89c74556f>` pfSysCpuReadReal64;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gad4432f49a0cb891ca14a5899177713af:

#define GET_SysCpuReadReal64 s_pfCMGetAPI2( "SysCpuReadReal64", (RTS_VOID_FCTPTR *)&pfSysCpuReadReal64, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga2267fe856aae9691069ca3ebf37aaa74:

#define CAL_SysCpuReadReal64 pfSysCpuReadReal64
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga0a5e6e0ff5b46b43d47683fbddec6092:

#define CHK_SysCpuReadReal64 (pfSysCpuReadReal64 != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga753eb8f687de2705d8680887aa98494d:

#define EXP_SysCpuReadReal64 s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuReadReal64", (RTS_UINTPTR) :ref:`SysCpuReadReal64 <group___sys_cpu_handling_itf_1ga385c32805057dd999ad5a02452b1f2b2>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga51deba8d4e3596876a0451490d636656:

#define USE_SysCpuWriteReal64 :ref:`PFSYSCPUWRITEREAL64 <group___sys_cpu_handling_itf_1ga2e05044c13abcc9b23611bc0d22d082c>` pfSysCpuWriteReal64;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga63efa07128d9e7562ee893f4fde8ac66:

#define EXT_SysCpuWriteReal64 extern :ref:`PFSYSCPUWRITEREAL64 <group___sys_cpu_handling_itf_1ga2e05044c13abcc9b23611bc0d22d082c>` pfSysCpuWriteReal64;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga02822a87c7be0393e5c3d60f79b596df:

#define GET_SysCpuWriteReal64 s_pfCMGetAPI2( "SysCpuWriteReal64", (RTS_VOID_FCTPTR *)&pfSysCpuWriteReal64, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga66b351800fbe602abd34691eee75f2f3:

#define CAL_SysCpuWriteReal64 pfSysCpuWriteReal64
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga72659eb5613ab93ce9084d8d76256cdc:

#define CHK_SysCpuWriteReal64 (pfSysCpuWriteReal64 != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gad9a11ac1ea4b908616955c4081a84e8e:

#define EXP_SysCpuWriteReal64 s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuWriteReal64", (RTS_UINTPTR) :ref:`SysCpuWriteReal64 <group___sys_cpu_handling_itf_1gaedab8a704ce10c7088ac852a99c2905d>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaa20b63d8d739f2d591fa95770513fdf4:

#define USE_SysCpuWriteValueAtomic :ref:`PFSYSCPUWRITEVALUEATOMIC <group___sys_cpu_handling_itf_1gab97cbd30b63bdda59fa8211ba316d4a4>` pfSysCpuWriteValueAtomic;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga4a03b4aa7b45ab07b158d3df209d5302:

#define EXT_SysCpuWriteValueAtomic extern :ref:`PFSYSCPUWRITEVALUEATOMIC <group___sys_cpu_handling_itf_1gab97cbd30b63bdda59fa8211ba316d4a4>` pfSysCpuWriteValueAtomic;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga7677187c29c6d9decb3a3bb919015eeb:

#define GET_SysCpuWriteValueAtomic s_pfCMGetAPI2( "SysCpuWriteValueAtomic", (RTS_VOID_FCTPTR *)&pfSysCpuWriteValueAtomic, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga6a701ed2cadbd07f60f04e4c3f16bc16:

#define CAL_SysCpuWriteValueAtomic pfSysCpuWriteValueAtomic
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaba40a54c6cc90771b65ab1810c0d9148:

#define CHK_SysCpuWriteValueAtomic (pfSysCpuWriteValueAtomic != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gadc26d43d95bb25faf3fc97ad25c0e61b:

#define EXP_SysCpuWriteValueAtomic s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuWriteValueAtomic", (RTS_UINTPTR) :ref:`SysCpuWriteValueAtomic <group___sys_cpu_handling_itf_1ga8e4cc6e035e5082ca20a32ea4a904be3>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga8b3ca86bc9f15d6c9b38f57a22bcec75:

#define USE_SysCpuReadValueAtomic :ref:`PFSYSCPUREADVALUEATOMIC <group___sys_cpu_handling_itf_1ga8bc5fd7b31399ced0d552ec058d5df4a>` pfSysCpuReadValueAtomic;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga31203a159bb2c4db1ab5e7134015a699:

#define EXT_SysCpuReadValueAtomic extern :ref:`PFSYSCPUREADVALUEATOMIC <group___sys_cpu_handling_itf_1ga8bc5fd7b31399ced0d552ec058d5df4a>` pfSysCpuReadValueAtomic;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gab66b2540996f4db22b1d79b8c67db26b:

#define GET_SysCpuReadValueAtomic s_pfCMGetAPI2( "SysCpuReadValueAtomic", (RTS_VOID_FCTPTR *)&pfSysCpuReadValueAtomic, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga7d49294493763859063fc6ce0dbe2ecb:

#define CAL_SysCpuReadValueAtomic pfSysCpuReadValueAtomic
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga3753d955ae2b22c42b51ebde2c417b5a:

#define CHK_SysCpuReadValueAtomic (pfSysCpuReadValueAtomic != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gabb3f21e17b32ea64c8c8c36a3c0ae4e4:

#define EXP_SysCpuReadValueAtomic s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"SysCpuReadValueAtomic", (RTS_UINTPTR) :ref:`SysCpuReadValueAtomic <group___sys_cpu_handling_itf_1ga83020bd88a10f540befa908c6fafa96c>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga7714b75559c7f21bb5d6dd01bf3bcee5:

#define ITF_SysCpuHandling
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga5624e438e0e63b44d0defa028bf4d467:

#define EXTITF_SysCpuHandling
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___sys_cpu_handling_itf_1ga50aabc20d5e6ebeb33501c4c2a08176a:

typedef struct tagsyscpuatomicadd_struct  syscpuatomicadd_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION BEGIN

<SIL2>

Function to increment the content of the given pointer by nSum in one atomic operation (task safe). IMPLEMENTATION NOTE:

  - Add/Sub the value to the content of the pointer

  - Return the value after the Add/Sub operation Both things must be done atomic!

**Returns:**

RESULT: Returns the value after the increment operation in an atomic way!

.. _group___sys_cpu_handling_itf_1gaf68bd8aaeb367d89521cf84035eb5f61:

typedef void( *  PFSYSCPUATOMICADD_IEC) (syscpuatomicadd_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga2d5fc38c2d2b1686471aa0b2777465f7:

typedef struct tagsyscpuatomicadd64_struct  syscpuatomicadd64_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

<SIL2>

Function to increment the content of the given pointer by nSum in one atomic operation (task safe). IMPLEMENTATION NOTE:

  - Add/Sub the value to the content of the pointer

  - Return the value after the Add/Sub operation Both things must be done atomic!

**Returns:**

RESULT: Returns the value after the increment operation in an atomic way!

.. _group___sys_cpu_handling_itf_1ga621f00738d737c5dd8f241680cd54f4a:

typedef void( *  PFSYSCPUATOMICADD64_IEC) (syscpuatomicadd64_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga514f459b5057ef79692f596e01b87271:

typedef struct tagsyscpuatomiccompareandswap_struct  syscpuatomiccompareandswap_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

<SIL2>

Function for compare-and-swap in one atomic operation (task safe). Supports only 32- and 64-bit types

**Returns:**

RESULT: Returns ERR_OK if the swap was successful

.. _group___sys_cpu_handling_itf_1ga15ffaf344bb9c51831a7b4bb01c71186:

typedef void( *  PFSYSCPUATOMICCOMPAREANDSWAP_IEC) (syscpuatomiccompareandswap_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga9ad4c2d68fbe821e17fc3e1ddddc92d7:

typedef struct tagsyscpucalliecfuncwithparams_struct  syscpucalliecfuncwithparams_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

<SIL2>

Call an IEC function from plain C code. Since different CPU's/systems use different calling conventions, this function should be used as a wrapper. IEC functions or methods of function block use all the same calling convention: They have no return value and exactly one parameter, which is a pointer to a structure that contains all required IN and OUT parameters. RETURN: Returns the runtime system error code (see CmpErrors.library)

.. _group___sys_cpu_handling_itf_1gaf2028feb6cbd3464ad518fca55b5e087:

typedef void( *  PFSYSCPUCALLIECFUNCWITHPARAMS_IEC) (syscpucalliecfuncwithparams_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga4ce7f1fe46dbd728cef005e0d1ea2e07:

typedef struct tagsyscputestandreset_struct  syscputestandreset_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Test and reset a bit in an ULONG variable in one processor step. This operation is to provide a multitasking save operation.

**Returns:**

RESULT: Returns the runtime system error code (see CmpErrors.library). ERR_OK: If bit could be reset and was set before, ERR_FAILED: If bit is still reset

.. _group___sys_cpu_handling_itf_1ga936373ae1fd39ceeb626d4ed5a9b7d31:

typedef void( *  PFSYSCPUTESTANDRESET_IEC) (syscputestandreset_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga9ce286678bdba5814a3661e511732d2b:

typedef struct tagsyscputestandset_struct  syscputestandset_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Test and set a bit in an ULONG variable in one processor step. This operation is to provide a multitasking save operation.

**Returns:**

RESULT: Returns the runtime system error code (see CmpErrors.library). ERR_OK: If bit could be set and was set before, ERR_FAILED: If bit is still set

.. _group___sys_cpu_handling_itf_1gaa7fd50aa60ddf5063888d1a05cd3565e:

typedef void( *  PFSYSCPUTESTANDSET_IEC) (syscputestandset_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga3d7349a82fde096015e748c153642176:

typedef struct tagsyscputestandsetbit_struct  syscputestandsetbit_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

<SIL2>

The function test and set or clear a bit in a variable in one processor step. This operation must be atomic to provide a multitasking save operation.

IMPLEMENTATION NOTE: Try to use a processor opcode, that provides this operation. If such an opcode is not available, use SysCpuTestAndSetBitBase in your platform adaptation.

**Returns:**

RESULT: Returns the runtime system error code (see CmpErrors.library).

  - ERR_OK: bSet=1: If bit could be set and was not set before bSet=0: If bit could be cleared and was set before

  - ERR_FAILED: bSet=1: If bit is still set bSet=0: If bit is still cleared

  - ERR_PARAMETER: If pAddress=NULL or pAddress is unaligned or iBit is out nSize range

  - ERR_NOT_SUPPORTED: If function is not available because of missing components (e.g. SysInt for locking bit access)

  - ERR_NOTIMPLEMENTED: If function is not implemented on this platform

.. _group___sys_cpu_handling_itf_1gac1e17efa43987e41e1bb87496ccc1fea:

typedef void( *  PFSYSCPUTESTANDSETBIT_IEC) (syscputestandsetbit_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaa4952391bb9e086195591dcff1be56e1:

typedef int( *  PFSYSCPUFLUSHINSTRUCTIONCACHE) (void *pBaseAddress, unsigned long ulSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga85850e6d3370de26ea93ca7504b36873:

typedef RTS_RESULT( *  PFSYSCPUCALLIECFUNCWITHPARAMS) (RTS_VOID_FCTPTR pfIECFunc, void *pParam, int iSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga7ee9c8f0ec12115d47c5138b2f5e9da7:

typedef RTS_RESULT( *  PFSYSCPUSETREGISTERVALUE) (RTS_UINTPTR *pRegBuff, RTS_I32 nRegisterNumber, RTS_UINTPTR newValue)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga88ef50d0ca5e9249d6d5b6578ff1ae56:

typedef void( *  PFSYSCPUDEBUGHANDLER_IEC) (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga5a2e442f638383827a9d69f1db735b07:

typedef RTS_RESULT( *  PFSYSCPUGETBREAKPOINTCODE) (unsigned char *pbyAreaStart, unsigned char *pbyBPAddress, unsigned char *pbyOpCode, int *piOpcodeSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga3105ecadc630e77649434d8a3b642403:

typedef RTS_RESULT( *  PFSYSCPUGETCALLSTACKENTRY) (RTS_UINTPTR *pBP, void **ppAddress)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga6f5748e387744dad9079c9058b4e70d9:

typedef RTS_RESULT( *  PFSYSCPUGETCALLSTACKENTRY2) (RTS_I32 bIecCode, RTS_UINTPTR *pBP, void **ppAddress)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga4e6ebdcd6574bf5903b8d350c1878490:

typedef RTS_RESULT( *  PFSYSCPUGETCALLSTACKENTRY3) (RTS_I32 bIecCode, RegContext *pContext, void **ppAddress)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga3f010bb68826762bbf482d53ffa75edb:

typedef RTS_UINTPTR*( *  PFSYSCPUSEARCHONSTACK_) (RTS_UINTPTR *pSP, RTS_UINTPTR pattern, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga201b576d5a1dc626be4e70d617ca45c2:

typedef RTS_RESULT( *  PFSYSCPUGETINSTANCEPOINTER) (RTS_UINTPTR *pBP, void **ppInstancePointer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga1b8a5f9594bc12610b96175cf4a0055e:

typedef RTS_RESULT( *  PFSYSCPUGETMONITORINGBASE) (RTS_UINTPTR *pBP)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaf2c6964cc5304d8c0d450b41a5b3a751:

typedef RTS_RESULT( *  PFSYSCPUTESTANDSET) (RTS_UI32 *pul, int iBit)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gae2b088e48ae8cbda1e4750416d2d935e:

typedef RTS_RESULT( *  PFSYSCPUTESTANDRESET) (RTS_UI32 *pul, int iBit)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga9da344169e7bf1f91bd8e0b5f8f66f9b:

typedef RTS_RESULT( *  PFSYSCPUTESTANDSETBIT) (void *pAddress, int nLen, int iBit, int bSet)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaac9cf15db704b20717524fcb0bdf9086:

typedef RTS_RESULT( *  PFSYSCPUTESTANDSETBIT2) (void *pMemory, RTS_SIZE siLen, RTS_SIZE siBit, RTS_BOOL bSet)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga48196f76fc07d4f6f6bad68aae091391:

typedef RTS_RESULT( *  PFSYSCPUGETCONTEXT) (RegContext *pContext)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga38a42f720a552ec10bcc319a8f86ad20:

typedef RTS_I32( *  PFSYSCPUATOMICADD) (RTS_I32 *piValue, RTS_I32 nSum, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga0794ab1d1f4909933e66b7b5ec63ff31:

typedef RTS_I64( *  PFSYSCPUATOMICADD64) (RTS_I64 *pi64Value, RTS_I64 nSum, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga5e466630f90e3112f71a0a0c11071abe:

typedef RTS_RESULT( *  PFSYSCPUATOMICCOMPAREANDSWAP) (void *pAddress, void *pSwapValue, void *pCompareValue, RTS_UI8 valueSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gab3f2424bf538ac86d5efa7b8a48399a3:

typedef RTS_I64( *  PFSYSCPUREADINT64) (RTS_I64 *pSrc, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaf1cf7ef5c1afbfd87370d8506e300666:

typedef RTS_RESULT( *  PFSYSCPUWRITEINT64) (RTS_I64 *pDest, RTS_I64 i64Value)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga5f76b98ee6817f06c4ce23d89c74556f:

typedef RTS_REAL64( *  PFSYSCPUREADREAL64) (RTS_REAL64 *pSrc, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga2e05044c13abcc9b23611bc0d22d082c:

typedef RTS_RESULT( *  PFSYSCPUWRITEREAL64) (RTS_REAL64 *pDest, RTS_REAL64 r64Value)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gab97cbd30b63bdda59fa8211ba316d4a4:

typedef RTS_RESULT( *  PFSYSCPUWRITEVALUEATOMIC) (void *pDest, void *pSrc, RTS_UI32 nLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga8bc5fd7b31399ced0d552ec058d5df4a:

typedef RTS_RESULT( *  PFSYSCPUREADVALUEATOMIC) (void *pSrc, void *pDest, RTS_UI32 nLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga117e46ae162923b95d2a653634b0a217:

typedef ISysCpuHandling_C ISysCpuHandling
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___sys_cpu_handling_itf_1ga8c261020d58afb5468eb75cd51370829:

void syscpuatomicadd (syscpuatomicadd_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaee858b810cf1482f1a5ba709f0774e72:

void syscpuatomicadd64 (syscpuatomicadd64_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gaacc60cea73b09061bc6579895cab7f3b:

void syscpuatomiccompareandswap (syscpuatomiccompareandswap_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga342ad004d7518950bad3f3b11a7b9bc0:

void syscpucalliecfuncwithparams (syscpucalliecfuncwithparams_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga9e0dc508a43652ec1d666a63d4e0e92d:

void syscputestandreset (syscputestandreset_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1ga6e1edd6a282e2dc1bbd01b01de3750cf:

void syscputestandset (syscputestandset_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gac254a4ee5e08aae17ac9e1ac68b1b22c:

void syscputestandsetbit (syscputestandsetbit_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gadce9940c690ed21f47d007f9878c5519:

RTS_RESULT SysCpuHandlingOSInit (INIT_STRUCT *pInit)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION END

.. _group___sys_cpu_handling_itf_1ga215b7f5823e79aee802deef8bcfd39ca:

RTS_RESULT SysCpuHandlingOSHookFunction (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_itf_1gad9c708fa59e4da7c362a2bd305dee8bc:

int SysCpuFlushInstructionCache (void *pBaseAddress, unsigned long ulSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

On some processors/operating systems this function must be called after code has been changed, so that the CPU is notified about the change.

**Parameters**

+---------+--------------+-------------------------------------------------------------------------------------------------+
| [in]    | pBaseAddress | Start address of the region to be flushed. Set to NULL to flush the complete instruction cache. |
+---------+--------------+-------------------------------------------------------------------------------------------------+
| [in]    | ulSize       | Length of the region to be flushed. This parameter is ignored if pBaseAddress is NULL.          |
+---------+--------------+-------------------------------------------------------------------------------------------------+

**Returns:**

error code

.. _group___sys_cpu_handling_itf_1ga008f25292ebc98e6882d51ebd6303c14:

RTS_RESULT SysCpuCallIecFuncWithParams (RTS_VOID_FCTPTR pfIECFunc, void *pParam, int iSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Call an IEC function from plain C code. Since different CPU's/systems use different calling conventions, this function should be used as a wrapper. But this function respectively the IEC callback code is not synchronized against an OnlineChange of the corresponding application!

ATTENTION: To be safe on multitasking and multicore systems you have to use :ref:`IecTaskCallIecFuncWithParams() <group___cmp_iec_task_itf_1ga9a95ae840366f4e31cdae58ca785dd7f>` instead (see :ref:`CmpIecTaskItf.h <_cmp_iec_task_itf_8h>` )!

IEC functions or methods of function block use all the same calling convention: They have no return value and exactly one parameter, which is a pointer to a structure that contains all required IN and OUT parameters.

IMPLEMENTATION NOTE: The content of the parameter structure must be copied completely on the stack as an input parameter! Don't copy only the pointer! Because of this, the size of the structure is provided as a separate parameter to this function. Additionally, the structure of the IEC function must be copied back into the give parameter to return result values of the IEC function! For all this operations you have to ensure the stack alignment, but avoid copying more bytes than iSize

IMPLEMENTATION NOTE: Unused parameter pParam can be NULL, if function has no argument and no result (e.g. CodeInit)!

**Parameters**

+---------+-----------+--------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pfIECFunc | Pointer to the IEC function that should be called RANGE=[NULL,VALID_IEC_FUNC,INVALID_IEC_FUNC]                                 |
+---------+-----------+--------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pParam    | Pointer to the parameter structure that contains the function parameters. ATTENTION: Can be NULL! RANGE=[NULL,VALID_PARAMETER] |
+---------+-----------+--------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iSize     | Size of the parameter structure to copy the content on stack. ATTENTION: Can be 0! RANGE=[0,VALID_SIZE]                        |
+---------+-----------+--------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+--------------------+--------------------------------------------------------------+
| ERR_OK             | Parameter check was successful and pfIECFunc was called      |
+--------------------+--------------------------------------------------------------+
| ERR_PARAMETER      | pfIECFunc is NULL or for a parameter size > 0 pParam is NULL |
+--------------------+--------------------------------------------------------------+
| ERR_NOTIMPLEMENTED | Function is not implemented                                  |
+--------------------+--------------------------------------------------------------+

**Returns:**

error code

.. _group___sys_cpu_handling_itf_1gab93592451daf8f547df9e5ff298104a2:

RTS_RESULT SysCpuSetRegisterValue (RTS_UINTPTR *pRegBuff, RTS_I32 nRegisterNumber, RTS_UINTPTR newValue)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Sets the specified register to the given value inside the 'syscpudebughandler'

**Parameters**

+---------+-----------------+------------------------------------------------------------------------+
| [in]    | pRegBuff        | Pointer to start of saved registers                                    |
+---------+-----------------+------------------------------------------------------------------------+
| [in]    | nRegisterNumber | Register number to be set. See category "Register offsets" for details |
+---------+-----------------+------------------------------------------------------------------------+
| [in]    | newValue        | The new value                                                          |
+---------+-----------------+------------------------------------------------------------------------+

**Returns:**

error code

.. _group___sys_cpu_handling_itf_1gaf578b1b3a5575decb892beb9ce698a90:

void syscpudebughandler (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine is the entry of the IEC code debugger. Is called out of the IEC task if breakpoint is reached.

IMPLEMENTATION NOTE: In this routine, the :ref:`AppDebugHandler() <group___cmp_app_b_p_itf_1ga6b17f465662ba51cf0832f8c2baf0dfd>` function of CmpApp must be called with the appropriate parameters. See :ref:`CmpAppItf.h <_cmp_app_itf_8h>` for detailed information. The return value of :ref:`AppDebugHandler() <group___cmp_app_b_p_itf_1ga6b17f465662ba51cf0832f8c2baf0dfd>` must be used to set the return address in the IEC code. To this address we will return when leaving :ref:`syscpudebughandler() <group___sys_cpu_handling_itf_1gaf578b1b3a5575decb892beb9ce698a90>` .

SIL2 IMPLEMENTATION NOTE: This routine may never be reached within safety mode. If it is called in safety mode an Exception must be generated immediately! The Execution may not proceed to further debug mechanism!

**Parameters**

+---------+-------------------+-------------------------------------------------------------------------------------------------------------------+
| [in]    | OperationMode     | ***PSEUDO*** Specifies only that the function should be called RANGE=[RTS_SIL2_OPMODE_SAFE,RTS_SIL2_OPMODE_DEBUG] |
+---------+-------------------+-------------------------------------------------------------------------------------------------------------------+
| [out]   | bExceptionOccured | ***PSEUDO*** Specifies, if an exception should occur or not RANGE=[TRUE,FALSE]                                    |
+---------+-------------------+-------------------------------------------------------------------------------------------------------------------+

**Returns:**

no return value

.. _group___sys_cpu_handling_itf_1gaebc0723f197000901171b7967ee8969e:

RTS_RESULT SysCpuGetBreakpointCode (unsigned char *pbyAreaStart, unsigned char *pbyBPAddress, unsigned char *pbyOpCode, int *piOpcodeSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine retrieves the breakpoint opcode for IEC code debugging. This is CPU dependent and depends additionally on the CoDeSys code-generator.

**Parameters**

+---------+--------------+------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pbyAreaStart | Pointer to start of the area.                                                                                                      |
+---------+--------------+------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pbyBPAddress | Pointer to breakpoint address (where the breakpoint will be set). This parameter is used for breakpoints that uses absolute jumps. |
+---------+--------------+------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pbyOpCode    | Pointer to get opcode                                                                                                              |
+---------+--------------+------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | piOpcodeSize | Pointer to maximum size of opcode buffer and return the real size of the opcode                                                    |
+---------+--------------+------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

error code

.. _group___sys_cpu_handling_itf_1gacd19edb2dbc783f7deb654d33d60102a:

RTS_RESULT SysCpuGetCallstackEntry (RTS_UINTPTR *pBP, void **ppAddress)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine retrieves an IEC call-stack entry, if the IEC code execution is stopped in the IEC code (breakpoint, exception, etc.). The call-stack can be investigated out of the stack frames of each entered nested function. The first call-stack entry is calculated outside this routine from the instruction pointer address (IP) that is provided for the :ref:`AppDebugHandler() <group___cmp_app_b_p_itf_1ga6b17f465662ba51cf0832f8c2baf0dfd>` routine from :ref:`syscpudebughandler() <group___sys_cpu_handling_itf_1gaf578b1b3a5575decb892beb9ce698a90>` . All further entries are called from this routine.

IMPLEMENTATION NOTE: The stack frame has typically the following structure:
::
    *				 .         STACK                        CODE
    *				 .         -----                        ----
    *				 .
    *				 .         BP0 /--------|               Fct0:
    *				 .                      |                    ...
    *				 .         Return Fct0  |                    Call Fct1
    *				 .    |--\ BP1 ---------|                    Return Fct0
    *				 .    |
    *				 .    |    Return Fct1                  Fct1:
    *				 .    |--- BP2 /--------|                    ...
    *				 .         ...          |                    Call Fct2
    *				 .         Stop         |                    Return Fct1
    *				 .                      |-- pulBP
    *				 .                                      Fct2:
    *				 .                                        ...
    *				 .                           IP --------/    Stop
    *

In this example, Fct0 calls Fct1 and Fct1 calls Fct2. This is a nested call with 3 Functions. Inside Fct2 we do a halt (e.g. stop on breakpoint). If we take a look on the stack, we see the return addresses from Fct0 and Fct1 on the stack. At the entry of each function, the base- (or frame-) pointer is pushed on the stack with the previous content. So you can see, the BP entries on the stack are organized as a chained list from stack-frame to stack frame.

The first stack entry is the current position. This is calculated out of the IP address and cannot be investigated from stack.

The pulBP Parameter is a pointer, thats content is the address of the stack, where the BP entry resides.

**Parameters**

+---------+-----------+---------------------------------------------------------------------------------------------------------------------------+
| [inout] | pBP       | Pointer to last base pointer entry (or frame pointer) and returns the pointer to the next base pointer in the stack frame |
+---------+-----------+---------------------------------------------------------------------------------------------------------------------------+
| [out]   | ppAddress | Pointer to pointer to return address in the code of the caller                                                            |
+---------+-----------+---------------------------------------------------------------------------------------------------------------------------+

**Returns:**

error code

.. _group___sys_cpu_handling_itf_1ga81a59c15038759a6a8b84f8fc1a776bf:

RTS_RESULT SysCpuGetCallstackEntry2 (RTS_I32 bIecCode, RTS_UINTPTR *pBP, void **ppAddress)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to retrieve a call-stack entry. The additional parameter bIecCode specifies, if the call-stack should be retrieved in IEC-code (bIecCode = 1) or in C-code of the runtime system (bIecCode = 0). IMPLEMENTATION NOTE: The call-stack in C-code is sometimes compiler dependent and must be implemented here specific to the compiler. If ERR_NOTIMPLEMENTED is returned, the generic linear back-trace on stack is done in SysCpuHandling.c.

**Parameters**

+---------+-----------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | bIecCode  | Is call-stack expected in IEC- or in runtime-code: bIecCode=1: Expected in IEC-code bIecCode=0: Expected in runtime-code (external library call) |
+---------+-----------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pBP       | Pointer to last base pointer entry (or frame pointer) and returns the pointer to the next base pointer in the stack frame                        |
+---------+-----------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | ppAddress | Pointer to pointer to return address in the code of the caller                                                                                   |
+---------+-----------+--------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

error code

**Return values**

+--------------------+-------------------------------------------------------------------------------------------------------+
| ERR_NOTIMPLEMENTED | If ERR_NOTIMPLEMENTED is returned, the generic linear back-trace on stack is done in SysCpuHandling.c |
+--------------------+-------------------------------------------------------------------------------------------------------+

.. _group___sys_cpu_handling_itf_1gad47b07d01ccaab9a433ea87080d89ab1:

RTS_RESULT SysCpuGetCallstackEntry3 (RTS_I32 bIecCode, RegContext *pContext, void **ppAddress)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to retrieve a call-stack entry. The additional parameter bIecCode specifies, if the call-stack should be retrieved in IEC-code (bIecCode = 1) or in C-code of the runtime system (bIecCode = 0). We use here first :ref:`SysCpuGetCallstackEntry2() <group___sys_cpu_handling_itf_1ga81a59c15038759a6a8b84f8fc1a776bf>` of the platform adaptation. If it is not implemented, we do a generic back-trace on the stack.

**Parameters**

+---------+-----------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | bIecCode  | Is call-stack expected in IEC- or in runtime-code: bIecCode=1: Expected in IEC-code bIecCode=0: Expected in runtime-code (external library call) |
+---------+-----------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pContext  | Pointer to last base context entry and returns the pointer to the next context of the stack frame                                                |
+---------+-----------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | ppAddress | Pointer to pointer to return address in the code corresponding to the call-stack entry                                                           |
+---------+-----------+--------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

error code

**Return values**

+--------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ERR_OK       | Call-stack entry resp. the IEC caller could be detected                                                                                                                                                                             |
+--------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ERR_FAILED   | Something failed during detecting the call-stack                                                                                                                                                                                    |
+--------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ERR_NOMEMORY | Call-stack entry resp. the IEC caller could _not_ be detected. Perhaps there is no IEC caller or the necessary setting in the DeviceDescription is not set for the platform: ARM, CortexM3, MIPS, PPC, SH, x86-64 and x86/WindowsCE |
+--------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

<ts:section name="codegenerator"> <ts:setting name="compiler-defines" type="string" access="visible"> <ts:value>generate_exceptioninfo</ts:value> </ts:setting> </ts:section> corresponding

**Return values**

+-------------------+------------------------------------------------------------------------------------------+
| ERR_NOT_SUPPORTED | A necessary interface function is not available (CmpApp::AppGetApplicationByAreaAddress) |
+-------------------+------------------------------------------------------------------------------------------+
| ERR_PARAMETER     | If one of the parameters is invalid                                                      |
+-------------------+------------------------------------------------------------------------------------------+

.. _group___sys_cpu_handling_itf_1ga29efadcd4e9cb59135d39c400a764105:

RTS_UINTPTR* SysCpuSearchOnStack_ (RTS_UINTPTR *pSP, RTS_UINTPTR pattern, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to find pattern on stack

**Parameters**

+---------+---------+------------------------------------+
| [in]    | pSP     | Pointer to stack to start search   |
+---------+---------+------------------------------------+
| [in]    | pattern | Pattern to search for on the stack |
+---------+---------+------------------------------------+
| [out]   | pResult | Pointer to error code              |
+---------+---------+------------------------------------+

**Returns:**

Pointer to the stack, where the pattern was found or NULL if failed

.. _group___sys_cpu_handling_itf_1ga2722c29654c8d24b447b45026f539318:

RTS_RESULT SysCpuGetInstancePointer (RTS_UINTPTR *pBP, void **ppInstancePointer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to retrieve the instance pointer of an FB. Is used to get an instance specific call-stack. The position of the instance pointer depends on the CoDeSys code-generator and is CPU dependent.

**Parameters**

+---------+-------------------+-----------------------------------------------------+
| [in]    | pBP               | Pointer to base pointer entry (or frame pointer)    |
+---------+-------------------+-----------------------------------------------------+
| [out]   | ppInstancePointer | Pointer to pointer to the instance pointer of an FB |
+---------+-------------------+-----------------------------------------------------+

**Returns:**

error code

**Return values**

+---------------+-----------------------------------------------------+
| ERR_OK        | An instance pointer could be extracted              |
+---------------+-----------------------------------------------------+
| ERR_PARAMETER | In case of invalid parameters, e.g. NULL pointers   |
+---------------+-----------------------------------------------------+
| ERR_FAILED    | In case the instance pointer could not be retrieved |
+---------------+-----------------------------------------------------+

.. _group___sys_cpu_handling_itf_1ga404cef3173477767d7ca48ae0f1cd21b:

RTS_RESULT SysCpuGetMonitoringBase (RTS_UINTPTR *pBP)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to retrieve the frame pointer for monitoring data access.

**Parameters**

+---------+-----+-----------------------------------------------------------------------------------------------------------------------+
| [inout] | pBP | Pointer to last base pointer entry (or frame pointer) and returns the pointer on the stack for monitoring data access |
+---------+-----+-----------------------------------------------------------------------------------------------------------------------+

**Returns:**

error code

.. _group___sys_cpu_handling_itf_1gaad809fbddfc71b5cd8948e0df09dfc16:

RTS_RESULT SysCpuTestAndSet (RTS_UI32 *pul, int iBit)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Obsolete: Use SysCpuTestAndSetBit instead!

OBSOLETE function to test and set a bit in an ULONG variable in one processor step. This operation must be atomic to provide a multitasking save operation.

IMPLEMENTATION NOTE: Try to use a processor opcode, that provides this operation. If such an opcode is not available, use SysCpuTestAndSetBase in your platform adaptation.

**Parameters**

+---------+---------+----------------------------------------------------------------------------------------+
| [in]    | pul     | Pointer to the unsigned value to test an set a bit inside in one atomic processor step |
+---------+---------+----------------------------------------------------------------------------------------+
| [out]   | iBitOut | ***PSEUDO*** Bit that was really set                                                   |
+---------+---------+----------------------------------------------------------------------------------------+

**Returns:**

Error code:

  - ERR_OK: If bit could be set and was not set before

  - ERR_FAILED: If bit is still set

.. _group___sys_cpu_handling_itf_1ga5aa3e6598c2ed1d99444811172505991:

RTS_RESULT SysCpuTestAndReset (RTS_UI32 *pul, int iBit)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Obsolete: Use SysCpuTestAndSetBit instead!

OBSOLETE function to reset a bit in an ULONG variable in one processor step. This operation must be atomic to provide a multitasking save operation.

IMPLEMENTATION NOTE: Try to use a processor opcode, that provides this operation. If such an opcode is not available, use SysCpuTestAndResetBase in your platform adaptation.

**Parameters**

+---------+------+------------------------------------------------------------------------------------------+
| [in]    | pul  | Pointer to the unsigned value to test an reset a bit inside in one atomic processor step |
+---------+------+------------------------------------------------------------------------------------------+
| [in]    | iBit | Bit number inside the variable to test and reset. 0=first bit, 31=last bit               |
+---------+------+------------------------------------------------------------------------------------------+

**Returns:**

  - ERR_OK: If bit could be reset

  - ERR_FAILED: If bit reset failed

.. _group___sys_cpu_handling_itf_1ga6f2a3920d62c0af0c60ba69fec79fff4:

RTS_RESULT SysCpuTestAndSetBit (void *pAddress, int nLen, int iBit, int bSet)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The function tests and sets or clears a bit in a variable in one processor step. This operation must be atomic to provide a multitasking save operation. The function returns ERR_FAILED if the bit was already set or reset.

This function is more efficient than the function SysCpuTestAndSetBit2 because it doesn't take care of the memory alignment, but rather expects that the memory pAddress points to is sizeof(int) aligned.

IMPLEMENTATION NOTE: Try to use a processor opcode, that provides this operation. If such an opcode is not available, use SysCpuTestAndSetBitBase in your platform adaptation.

**Parameters**

+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pAddress | Pointer to the memory to test and set or clear a bit inside in one atomic processor step. NOTE: The memory pAddress points to must be sizeof(int) aligned! RANGE=[NULL,ADDR_ALIGN0,ADDR_ALIGN1,ADDR_ALIGN2,ADDR_ALIGN3] |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | nLen     | Size of the value behind the address in chars. Can only be 1, 2, or 4. RANGE=[1,2,4,INVALID_LEN]                                                                                                                        |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iBit     | Zero-based position of the bit to test within the memory pointed to by pAddress (0=first bit, 31=last bit):                                                                                                             |
|         |          |                                                                                                                                                                                                                         |
|         |          |   - nLen = 1: iBit 0..(CHAR_BIT-1)                                                                                                                                                                                      |
|         |          |                                                                                                                                                                                                                         |
|         |          |   - nLen = 2: iBit 0..(2CHAR_BIT-1)                                                                                                                                                                                     |
|         |          |                                                                                                                                                                                                                         |
|         |          |   - nLen = 4: iBit 0..(4CHAR_BIT-1) RANGE=[INT_MIN..0,0..7,8..15,16..31,32..INT_MAX]                                                                                                                                    |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | bSet     | 1=Set bit, 0=Clear bit RANGE=[0,1]                                                                                                                                                                                      |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+---------------+-------------------------------------------------------------------------------------------------------------------+
| ERR_OK        | Bit could be set/reset successfully                                                                               |
+---------------+-------------------------------------------------------------------------------------------------------------------+
| ERR_FAILED    | Bit could not be set/reset successfully, perhaps it already was set/reset                                         |
+---------------+-------------------------------------------------------------------------------------------------------------------+
| ERR_PARAMETER | pAddress may not be null and has to be sizeof(int) aligned, nLen may only be 1,2,4, iBit must be in correct range |
+---------------+-------------------------------------------------------------------------------------------------------------------+

**Returns:**

Error code: returns if Bit could be set/reset successfully, or if any problem occurred

.. _group___sys_cpu_handling_itf_1ga09ee5812ea46b913838c38203e770a86:

RTS_RESULT SysCpuTestAndSetBit2 (void *pMemory, RTS_SIZE siLen, RTS_SIZE siBit, RTS_BOOL bSet)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The function tests and sets or clears a bit in a variable in one processor step. This operation must be atomic to provide a multitasking save operation. The function returns ERR_FAILED if the bit was already set or reset.

This function is less efficient than the function SysCpuTestAndSetBit because it doesn't expect that the memory pMemory points to is sizeof(int) aligned and takes care of the memory alignment.

This function doesn't do any parameter checking. It expects that the parameter pMemory is not NULL and that the parameter siBit is less than (siLenCHAR_BIT).

IMPLEMENTATION NOTE: Handle memory alignment and call the function SysCpuTestAndSetBit.

**Parameters**

+---------+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pMemory | Pointer to the memory to test and set or clear a bit inside in one atomic processor step. NOTE: There are no alignment requirements for the memory pMemory points to. SysCpuTestAndSetBit2 takes care of this itself. |
+---------+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | siLen   | Size of the value behind the address in chars. Can only be 1, 2, or 4.                                                                                                                                                |
+---------+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | siBit   | Zero-based position of the bit to test within the memory pointed to by pMemory (0=first bit, 31=last bit):                                                                                                            |
|         |         |                                                                                                                                                                                                                       |
|         |         |   - nLen = 1: iBit 0..(CHAR_BIT-1)                                                                                                                                                                                    |
|         |         |                                                                                                                                                                                                                       |
|         |         |   - nLen = 2: iBit 0..(2CHAR_BIT-1)                                                                                                                                                                                   |
|         |         |                                                                                                                                                                                                                       |
|         |         |   - nLen = 4: iBit 0..(4CHAR_BIT-1)                                                                                                                                                                                   |
+---------+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | bSet    | TRUE=Set bit, FALSE=Clear bit                                                                                                                                                                                         |
+---------+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+------------+---------------------------------------------------------------------------+
| ERR_OK     | Bit could be set/reset successfully                                       |
+------------+---------------------------------------------------------------------------+
| ERR_FAILED | Bit could not be set/reset successfully, perhaps it already was set/reset |
+------------+---------------------------------------------------------------------------+

**Returns:**

Error code: returns if Bit could be set/reset successfully, or if any problem occurred

.. _group___sys_cpu_handling_itf_1ga84f32e87a6568e4aab2cb573aebbf0be:

RTS_RESULT SysCpuGetContext (RegContext *pContext)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get the actual register context.

**Parameters**

+---------+----------+-------------------------+
| [out]   | pContext | Actual register context |
+---------+----------+-------------------------+

**Returns:**

error code

.. _group___sys_cpu_handling_itf_1gaa546c6642b797434c619a165d0cd3714:

RTS_I32 SysCpuAtomicAdd (RTS_I32 *piValue, RTS_I32 nSum, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to increment the content of the given pointer by nSum in one atomic operation (task safe).

IMPLEMENTATION NOTE: Add or subtract the value to/from the content of the pointer, and return the value after this operation atomically.

**Parameters**

+---------+---------+------------------------------------------------------------------------------------------------------+
| [inout] | piValue | Pointer to the value to increment RANGE=[NULL,VALID_ATOMICADD_ADDR]                                  |
+---------+---------+------------------------------------------------------------------------------------------------------+
| [in]    | nSum    | Summand for the operation. greater 0 to increment, lower 0 to decrement RANGE=[RTS_RANGE_OF_RTS_I32] |
+---------+---------+------------------------------------------------------------------------------------------------------+
| [out]   | pResult | Pointer to error code                                                                                |
+---------+---------+------------------------------------------------------------------------------------------------------+

**Return values**

+--------------------+---------------------------+
| ERR_OK             | Call was successful       |
+--------------------+---------------------------+
| ERR_PARAMETER      | piValue was NULL          |
+--------------------+---------------------------+
| ERR_NOTIMPLEMENTED | Function is not supported |
+--------------------+---------------------------+

**Returns:**

Returns the value after the increment operation in an atomic way!

.. _group___sys_cpu_handling_itf_1ga76fae609a3a3212e3ba964a7f563a1c1:

RTS_I64 SysCpuAtomicAdd64 (RTS_I64 *pi64Value, RTS_I64 nSum, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to increment the content of the given pointer by nSum in one atomic operation (task safe).

IMPLEMENTATION NOTE: Add or subtract the value to/from the content of the pointer, and return the value after this operation atomically.

**Parameters**

+---------+-----------+-------------------------------------------------------------------------+
| [inout] | pi64Value | Pointer to the value to increment                                       |
+---------+-----------+-------------------------------------------------------------------------+
| [in]    | nSum      | Summand for the operation. greater 0 to increment, lower 0 to decrement |
+---------+-----------+-------------------------------------------------------------------------+
| [out]   | pResult   | Pointer to error code                                                   |
+---------+-----------+-------------------------------------------------------------------------+

**Return values**

+-------------------+---------------------------+
| ERR_OK            | Call was successful       |
+-------------------+---------------------------+
| ERR_PARAMETER     | pi64Value was NULL        |
+-------------------+---------------------------+
| ERR_NOT_SUPPORTED | Function is not supported |
+-------------------+---------------------------+

**Returns:**

Returns the value after the increment operation in an atomic way!

.. _group___sys_cpu_handling_itf_1gab1318c09a385367612ec8efbae08ed22:

RTS_RESULT SysCpuAtomicCompareAndSwap (void *pAddress, void *pSwapValue, void *pCompareValue, RTS_UI8 valueSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function for compare-and-swap in one atomic operation (task safe). Supports only 32- and 64-bit types (i.e. a valid valueSize is 4 or 8)

**Parameters**

+---------+---------------+----------------------------------------------------------+
| [inout] | pAddress      | Pointer to the value to handle                           |
+---------+---------------+----------------------------------------------------------+
| [in]    | pSwapValue    | Pointer to the swap value                                |
+---------+---------------+----------------------------------------------------------+
| [in]    | pCompareValue | Pointer to the compare value                             |
+---------+---------------+----------------------------------------------------------+
| [in]    | valueSize     | Size of the value in bytes (a valid valueSize is 4 or 8) |
+---------+---------------+----------------------------------------------------------+

**Return values**

+-------------------+-----------------------------------------------------------+
| ERR_OK            | Swap was successful                                       |
+-------------------+-----------------------------------------------------------+
| ERR_FAILED        | Swap was not successful                                   |
+-------------------+-----------------------------------------------------------+
| ERR_PARAMETER     | At least one of the pointers was NULL                     |
+-------------------+-----------------------------------------------------------+
| ERR_NOT_SUPPORTED | Swap not supported for this byte size or on this platform |
+-------------------+-----------------------------------------------------------+

**Returns:**

Returns error code

.. _group___sys_cpu_handling_itf_1ga61ac7c09ad81724a97709944a601dc9f:

RTS_I64 SysCpuReadInt64 (RTS_I64 *pSrc, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to read a 64bit integer value atomic / consistent.

**Parameters**

+---------+---------+------------------------------+
| [in]    | pSrc    | Pointer to the value to read |
+---------+---------+------------------------------+
| [out]   | pResult | Pointer to error code        |
+---------+---------+------------------------------+

**Return values**

+-------------------+-----------------------------------+
| ERR_OK            | Call was successful               |
+-------------------+-----------------------------------+
| ERR_PARAMETER     | pSrc is NULL                      |
+-------------------+-----------------------------------+
| ERR_NOT_SUPPORTED | Atomic function is not supported! |
+-------------------+-----------------------------------+

**Returns:**

Returns the read value

.. _group___sys_cpu_handling_itf_1gadcdac72472ff6647d7649236eb71de26:

RTS_RESULT SysCpuWriteInt64 (RTS_I64 *pDest, RTS_I64 i64Value)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to write a 64bit integer value atomic / consistent.

**Parameters**

+---------+----------+-------------------------------+
| [in]    | pDest    | Pointer to the value to write |
+---------+----------+-------------------------------+
| [in]    | i64Value | Value to write                |
+---------+----------+-------------------------------+

**Returns:**

Error code

**Return values**

+-------------------+-----------------------------------+
| ERR_OK            | Call was successful               |
+-------------------+-----------------------------------+
| ERR_PARAMETER     | pDest is NULL                     |
+-------------------+-----------------------------------+
| ERR_NOT_SUPPORTED | Atomic function is not supported! |
+-------------------+-----------------------------------+

.. _group___sys_cpu_handling_itf_1ga385c32805057dd999ad5a02452b1f2b2:

RTS_REAL64 SysCpuReadReal64 (RTS_REAL64 *pSrc, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to read a 64bit real value atomic / consistent.

**Parameters**

+---------+---------+------------------------------+
| [in]    | pSrc    | Pointer to the value to read |
+---------+---------+------------------------------+
| [out]   | pResult | Pointer to error code        |
+---------+---------+------------------------------+

**Return values**

+-------------------+-----------------------------------+
| ERR_OK            | Call was successful               |
+-------------------+-----------------------------------+
| ERR_PARAMETER     | pSrc is NULL                      |
+-------------------+-----------------------------------+
| ERR_NOT_SUPPORTED | Atomic function is not supported! |
+-------------------+-----------------------------------+

**Returns:**

Returns the read value

.. _group___sys_cpu_handling_itf_1gaedab8a704ce10c7088ac852a99c2905d:

RTS_RESULT SysCpuWriteReal64 (RTS_REAL64 *pDest, RTS_REAL64 r64Value)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to write a 64bit real value atomic / consistent.

**Parameters**

+---------+----------+-------------------------------+
| [in]    | pDest    | Pointer to the value to write |
+---------+----------+-------------------------------+
| [in]    | r64Value | Value to write                |
+---------+----------+-------------------------------+

**Returns:**

Error code

**Return values**

+-------------------+-----------------------------------+
| ERR_OK            | Call was successful               |
+-------------------+-----------------------------------+
| ERR_PARAMETER     | pDest is NULL                     |
+-------------------+-----------------------------------+
| ERR_NOT_SUPPORTED | Atomic function is not supported! |
+-------------------+-----------------------------------+

.. _group___sys_cpu_handling_itf_1ga8e4cc6e035e5082ca20a32ea4a904be3:

RTS_RESULT SysCpuWriteValueAtomic (void *pDest, void *pSrc, RTS_UI32 nLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This function will write values with 1, 2, 4 or 8 byte size as an atomic operation. Note: pDest has to be aligned according to the nLen parameter. If the alignment isn't correct the function will fail.

**Parameters**

+---------+-------+------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pDest | Pointer to the destination address. The value will be written to this address. The write operation to this address will be atomic. |
+---------+-------+------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pSrc  | Pointer to the source address. The value will be read from this address.                                                           |
+---------+-------+------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | nLen  | Size of the value to be written. 1, 2, 4 and 8 will be accepted.                                                                   |
+---------+-------+------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Error code

**Return values**

+-------------------+----------------------------------------------+
| ERR_OK            | Call was successful                          |
+-------------------+----------------------------------------------+
| ERR_PARAMETER     | pDest, pSrc is NULL or nLen isn't supported. |
+-------------------+----------------------------------------------+
| ERR_NOT_SUPPORTED | Atomic function is not supported!            |
+-------------------+----------------------------------------------+
| ERR_ALIGNMENT     | pDest was not aligned according to nLen.     |
+-------------------+----------------------------------------------+

.. _group___sys_cpu_handling_itf_1ga83020bd88a10f540befa908c6fafa96c:

RTS_RESULT SysCpuReadValueAtomic (void *pSrc, void *pDest, RTS_UI32 nLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This function will read values with 1, 2, 4 or 8 byte size as an atomic operation. Note: pSrc has to be aligned according to the nLen parameter. If the alignment isn't correct the function will fail.

**Parameters**

+---------+------+-------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pSrc | Pointer to the source address. The value will be read from this address. The read operation from this address will be atomic. |
+---------+------+-------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pDst | Pointer to the destination address. The value will be written to this address.                                                |
+---------+------+-------------------------------------------------------------------------------------------------------------------------------+
| [in]    | nLen | Size of the value to be read. 1, 2, 4 and 8 will be accepted.                                                                 |
+---------+------+-------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Error code

**Return values**

+-------------------+------------------------------------------------+
| ERR_OK            | Call was successful                            |
+-------------------+------------------------------------------------+
| ERR_PARAMETER     | pSrc or pDest is NULL or nLen isn't supported. |
+-------------------+------------------------------------------------+
| ERR_NOT_SUPPORTED | Atomic function is not supported!              |
+-------------------+------------------------------------------------+
| ERR_ALIGNMENT     | pSrc was not aligned according to nLen.        |
+-------------------+------------------------------------------------+

.. last line of group.rst template
.. last line of composition.rst template


