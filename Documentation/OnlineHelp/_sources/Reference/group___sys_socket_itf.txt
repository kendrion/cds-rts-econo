.. first line of composition.rst template

.. first line of group.rst template

.. _group___sys_socket_itf:

============
SysSocketItf
============

Interface of SysSocket. :ref:`More... <group___sys_socket_itf-details>`

Modules
-------

- :ref:`Adapter information flags <group___sys_socket_itf___adapterinformationflags>`

- :ref:`Adapter types <group___sys_socket_itf___adaptertypes>`

- :ref:`AddressFamily <group___sys_socket_itf___address_family>`

- :ref:`Compiler switch <group___sys_socket_itf___compilerswitch>`

- :ref:`Event parameter <group___sys_socket_itf___eventparameter>`

- :ref:`Events <group___sys_socket_itf___events>`

- :ref:`INADDR <group___sys_socket_itf___i_n_a_d_d_r>`

- :ref:`IP multicast options <group___sys_socket_itf___i_pmulticastoptions>`

- :ref:`Internal SysSocket adapter information struct <group___sys_socket_itf___internal_sys_socketadapterinformationstruct>`

- :ref:`Internal flags for adapter management <group___sys_socket_itf___internalflagsforadaptermanagement>`

- :ref:`Ioctl commands <group___sys_socket_itf___ioctlcommands>`

- :ref:`Linger on close options <group___sys_socket_itf___lingeroncloseoptions>`

- :ref:`SOCKADDRESS <group___sys_socket_itf___s_o_c_k_a_d_d_r_e_s_s>`

- :ref:`Settings <group___sys_socket_itf___settings>`

- :ref:`Shutdown flags <group___sys_socket_itf___shutdownflags>`

- :ref:`Socket TCP options <group___sys_socket_itf___socket_t_c_poptions>`

- :ref:`Socket class handling <group___sys_socket_itf___socketclasshandling>`

- :ref:`Socket level <group___sys_socket_itf___socketlevel>`

- :ref:`Socket options <group___sys_socket_itf___socketoptions>`

- :ref:`Socket protocols <group___sys_socket_itf___socketprotocols>`

- :ref:`Socket types <group___sys_socket_itf___sockettypes>`

- :ref:`Static defines <group___sys_socket_itf___staticdefines>`

- :ref:`Static defines for adapter information <group___sys_socket_itf___staticdefinesforadapterinformation>`

- :ref:`SysSocket adapter information struct <group___sys_socket_itf___sys_socketadapterinformationstruct>`

- :ref:`TCP flags <group___sys_socket_itf___t_c_pflags>`

- :ref:`TCP keepalive options <group___sys_socket_itf___t_c_pkeepaliveoptions>`

- :ref:`Udp reply <group___sys_socket_itf___udpreply>`

Data Structures
---------------

- struct :ref:`tagSOCK_ADAPTER_INFORMATION <structtag_s_o_c_k___a_d_a_p_t_e_r___i_n_f_o_r_m_a_t_i_o_n>`

- struct :ref:`tagsyssockaccept_struct <structtagsyssockaccept__struct>`

- struct :ref:`tagsyssockbind_struct <structtagsyssockbind__struct>`

- struct :ref:`tagsyssockclose_struct <structtagsyssockclose__struct>`

- struct :ref:`tagsyssockcloseudp_struct <structtagsyssockcloseudp__struct>`

- struct :ref:`tagsyssockconnect_struct <structtagsyssockconnect__struct>`

- struct :ref:`tagsyssockcreate_struct <structtagsyssockcreate__struct>`

- struct :ref:`tagsyssockcreateudp_struct <structtagsyssockcreateudp__struct>`

- struct :ref:`tagsyssockfdinit_struct <structtagsyssockfdinit__struct>`

- struct :ref:`tagsyssockfdisset_struct <structtagsyssockfdisset__struct>`

- struct :ref:`tagsyssockfdzero_struct <structtagsyssockfdzero__struct>`

- struct :ref:`tagsyssockgetfirstadapterinfo_struct <structtagsyssockgetfirstadapterinfo__struct>`

- struct :ref:`tagsyssockgethostbyname_struct <structtagsyssockgethostbyname__struct>`

- struct :ref:`tagsyssockgethostname_struct <structtagsyssockgethostname__struct>`

- struct :ref:`tagsyssockgetnextadapterinfo_struct <structtagsyssockgetnextadapterinfo__struct>`

- struct :ref:`tagsyssockgetoption_struct <structtagsyssockgetoption__struct>`

- struct :ref:`tagsyssockgetoshandle_struct <structtagsyssockgetoshandle__struct>`

- struct :ref:`tagsyssockgetpeername_struct <structtagsyssockgetpeername__struct>`

- struct :ref:`tagsyssockgetrecvsizeudp_struct <structtagsyssockgetrecvsizeudp__struct>`

- struct :ref:`tagsyssockgetsockname_struct <structtagsyssockgetsockname__struct>`

- struct :ref:`tagsyssockgetsubnetmask_struct <structtagsyssockgetsubnetmask__struct>`

- struct :ref:`tagsyssockhtonl_struct <structtagsyssockhtonl__struct>`

- struct :ref:`tagsyssockhtons_struct <structtagsyssockhtons__struct>`

- struct :ref:`tagsyssockinetaddr_struct <structtagsyssockinetaddr__struct>`

- struct :ref:`tagsyssockinetntoa_struct <structtagsyssockinetntoa__struct>`

- struct :ref:`tagsyssockioctl_struct <structtagsyssockioctl__struct>`

- struct :ref:`tagsyssocklisten_struct <structtagsyssocklisten__struct>`

- struct :ref:`tagsyssockntohl_struct <structtagsyssockntohl__struct>`

- struct :ref:`tagsyssockntohs_struct <structtagsyssockntohs__struct>`

- struct :ref:`tagsyssockping_struct <structtagsyssockping__struct>`

- struct :ref:`tagsyssockrecv_struct <structtagsyssockrecv__struct>`

- struct :ref:`tagsyssockrecvfrom_struct <structtagsyssockrecvfrom__struct>`

- struct :ref:`tagsyssockrecvfromudp_struct <structtagsyssockrecvfromudp__struct>`

- struct :ref:`tagsyssockrecvfromudp2_struct <structtagsyssockrecvfromudp2__struct>`

- struct :ref:`tagsyssockselect_struct <structtagsyssockselect__struct>`

- struct :ref:`tagsyssocksend_struct <structtagsyssocksend__struct>`

- struct :ref:`tagsyssocksendto_struct <structtagsyssocksendto__struct>`

- struct :ref:`tagsyssocksendtoudp_struct <structtagsyssocksendtoudp__struct>`

- struct :ref:`tagsyssocksetdefaultgateway_struct <structtagsyssocksetdefaultgateway__struct>`

- struct :ref:`tagsyssocksetipaddress_struct <structtagsyssocksetipaddress__struct>`

- struct :ref:`tagsyssocksetipaddressandnetmask_struct <structtagsyssocksetipaddressandnetmask__struct>`

- struct :ref:`tagsyssocksetoption_struct <structtagsyssocksetoption__struct>`

- struct :ref:`tagsyssocksetsubnetmask_struct <structtagsyssocksetsubnetmask__struct>`

- struct :ref:`tagsyssockshutdown_struct <structtagsyssockshutdown__struct>`

- struct :ref:`ISysSocket_C <struct_i_sys_socket___c>`

Macros
------

- #define :ref:`ITF_SysSocket <group___sys_socket_itf_1gaea6072d56d23af9704b3878c7b5f4f96>`

- #define :ref:`EXTITF_SysSocket <group___sys_socket_itf_1ga9a69c37655c7b960bbe419ec3ec0f11b>`

Typedefs
--------

- typedef struct :ref:`tagSOCK_ADAPTER_INFORMATION <structtag_s_o_c_k___a_d_a_p_t_e_r___i_n_f_o_r_m_a_t_i_o_n>` :ref:`SOCK_ADAPTER_INFORMATION <group___sys_socket_itf_1gabbdd106cd2f96d10f6487aac0bdb9f38>`

- typedef struct :ref:`tagsyssockaccept_struct <structtagsyssockaccept__struct>` :ref:`syssockaccept_struct <group___sys_socket_itf_1ga33055b94f8b9e5e27ad5d15abf323a70>`

- typedef struct :ref:`tagsyssockbind_struct <structtagsyssockbind__struct>` :ref:`syssockbind_struct <group___sys_socket_itf_1gadc68f066c4a73e214e7ce494b9c0e66a>`

- typedef struct :ref:`tagsyssockclose_struct <structtagsyssockclose__struct>` :ref:`syssockclose_struct <group___sys_socket_itf_1ga085a24dbf5dc9b58c967f5dd044157bf>`

- typedef struct :ref:`tagsyssockcloseudp_struct <structtagsyssockcloseudp__struct>` :ref:`syssockcloseudp_struct <group___sys_socket_itf_1ga2a0fc35d12089d76ac22d80ee935f22e>`

- typedef struct :ref:`tagsyssockconnect_struct <structtagsyssockconnect__struct>` :ref:`syssockconnect_struct <group___sys_socket_itf_1ga6fdd01662c50d99201a5483b44e0aac4>`

- typedef struct :ref:`tagsyssockcreate_struct <structtagsyssockcreate__struct>` :ref:`syssockcreate_struct <group___sys_socket_itf_1gaf93b29f53208a27154716479b07e46be>`

- typedef struct :ref:`tagsyssockcreateudp_struct <structtagsyssockcreateudp__struct>` :ref:`syssockcreateudp_struct <group___sys_socket_itf_1ga7799bb0196434d0139b327d576ebf351>`

- typedef struct :ref:`tagsyssockfdinit_struct <structtagsyssockfdinit__struct>` :ref:`syssockfdinit_struct <group___sys_socket_itf_1ga4fc946384bf26253c05f8f8ee60dc6d7>`

- typedef struct :ref:`tagsyssockfdisset_struct <structtagsyssockfdisset__struct>` :ref:`syssockfdisset_struct <group___sys_socket_itf_1ga9b74119c23df6f9f80b8a4d74a3bac74>`

- typedef struct :ref:`tagsyssockfdzero_struct <structtagsyssockfdzero__struct>` :ref:`syssockfdzero_struct <group___sys_socket_itf_1gacaa93c6e9c7390b5367059818e5697ed>`

- typedef struct :ref:`tagsyssockgetfirstadapterinfo_struct <structtagsyssockgetfirstadapterinfo__struct>` :ref:`syssockgetfirstadapterinfo_struct <group___sys_socket_itf_1ga5d9f04576416c50cc3e1f60095492cf8>`

- typedef struct :ref:`tagsyssockgethostbyname_struct <structtagsyssockgethostbyname__struct>` :ref:`syssockgethostbyname_struct <group___sys_socket_itf_1gac3a6444f39bd619586918f24460dcd4d>`

- typedef struct :ref:`tagsyssockgethostname_struct <structtagsyssockgethostname__struct>` :ref:`syssockgethostname_struct <group___sys_socket_itf_1gadcc1d6bca8f12ee46fef1a3d0e59a387>`

- typedef struct :ref:`tagsyssockgetnextadapterinfo_struct <structtagsyssockgetnextadapterinfo__struct>` :ref:`syssockgetnextadapterinfo_struct <group___sys_socket_itf_1ga52d906a5718022acbb98ddbce046835a>`

- typedef struct :ref:`tagsyssockgetoption_struct <structtagsyssockgetoption__struct>` :ref:`syssockgetoption_struct <group___sys_socket_itf_1ga2e5c835b310064306f0480949f162811>`

- typedef struct :ref:`tagsyssockgetoshandle_struct <structtagsyssockgetoshandle__struct>` :ref:`syssockgetoshandle_struct <group___sys_socket_itf_1ga1cfb05e7650bea50c9d0f8c24707744f>`

- typedef struct :ref:`tagsyssockgetpeername_struct <structtagsyssockgetpeername__struct>` :ref:`syssockgetpeername_struct <group___sys_socket_itf_1gaa934964f8d25ef1baffd0c814bfad248>`

- typedef struct :ref:`tagsyssockgetrecvsizeudp_struct <structtagsyssockgetrecvsizeudp__struct>` :ref:`syssockgetrecvsizeudp_struct <group___sys_socket_itf_1ga0fe0819dd1484309617cc1ed1cfa4164>`

- typedef struct :ref:`tagsyssockgetsockname_struct <structtagsyssockgetsockname__struct>` :ref:`syssockgetsockname_struct <group___sys_socket_itf_1ga767340d1af81d43c3d37d9171db72d8a>`

- typedef struct :ref:`tagsyssockgetsubnetmask_struct <structtagsyssockgetsubnetmask__struct>` :ref:`syssockgetsubnetmask_struct <group___sys_socket_itf_1gafcf9d2274c4b757e3c906bf27d5f9583>`

- typedef struct :ref:`tagsyssockhtonl_struct <structtagsyssockhtonl__struct>` :ref:`syssockhtonl_struct <group___sys_socket_itf_1ga8384b4d42490a2ba51b499fdae33a869>`

- typedef struct :ref:`tagsyssockhtons_struct <structtagsyssockhtons__struct>` :ref:`syssockhtons_struct <group___sys_socket_itf_1ga92a03b188c30a84263d52209b1f5e394>`

- typedef struct :ref:`tagsyssockinetaddr_struct <structtagsyssockinetaddr__struct>` :ref:`syssockinetaddr_struct <group___sys_socket_itf_1gadb4d7c407824f3b84b6a68882cdc2a87>`

- typedef struct :ref:`tagsyssockinetntoa_struct <structtagsyssockinetntoa__struct>` :ref:`syssockinetntoa_struct <group___sys_socket_itf_1ga04e6807452fd8286a9df71bca51d4dde>`

- typedef struct :ref:`tagsyssockioctl_struct <structtagsyssockioctl__struct>` :ref:`syssockioctl_struct <group___sys_socket_itf_1ga699960a770f40d59e29ab98ffbb7a3e9>`

- typedef struct :ref:`tagsyssocklisten_struct <structtagsyssocklisten__struct>` :ref:`syssocklisten_struct <group___sys_socket_itf_1ga999cb3d0db81be58ecc2f87d5ba60dcd>`

- typedef struct :ref:`tagsyssockntohl_struct <structtagsyssockntohl__struct>` :ref:`syssockntohl_struct <group___sys_socket_itf_1ga9d87ef41e3c9885cfdf76272f6f80408>`

- typedef struct :ref:`tagsyssockntohs_struct <structtagsyssockntohs__struct>` :ref:`syssockntohs_struct <group___sys_socket_itf_1ga0f607a60f694705f7ae5ded9d2e3f09e>`

- typedef struct :ref:`tagsyssockping_struct <structtagsyssockping__struct>` :ref:`syssockping_struct <group___sys_socket_itf_1ga46cd018208614a3306c132afb39ba00e>`

- typedef struct :ref:`tagsyssockrecv_struct <structtagsyssockrecv__struct>` :ref:`syssockrecv_struct <group___sys_socket_itf_1ga349e13d66d1fa9bb18ee4d358c8ca79d>`

- typedef struct :ref:`tagsyssockrecvfrom_struct <structtagsyssockrecvfrom__struct>` :ref:`syssockrecvfrom_struct <group___sys_socket_itf_1gaaceca435c2e43653fe5170ac2c9e493e>`

- typedef struct :ref:`tagsyssockrecvfromudp_struct <structtagsyssockrecvfromudp__struct>` :ref:`syssockrecvfromudp_struct <group___sys_socket_itf_1gada6af25cde07f48dd365fe1ea90542ec>`

- typedef struct :ref:`tagsyssockrecvfromudp2_struct <structtagsyssockrecvfromudp2__struct>` :ref:`syssockrecvfromudp2_struct <group___sys_socket_itf_1gabd8603aff08ad10d4f3b325c6238fb4a>`

- typedef struct :ref:`tagsyssockselect_struct <structtagsyssockselect__struct>` :ref:`syssockselect_struct <group___sys_socket_itf_1ga1e0ee9d6fa6539ebaa34db3f33a74122>`

- typedef struct :ref:`tagsyssocksend_struct <structtagsyssocksend__struct>` :ref:`syssocksend_struct <group___sys_socket_itf_1gab737c6c31323ebea6e57e743a5c67d75>`

- typedef struct :ref:`tagsyssocksendto_struct <structtagsyssocksendto__struct>` :ref:`syssocksendto_struct <group___sys_socket_itf_1ga63b5858eccbc4ec9e526d9c893f6bd1b>`

- typedef struct :ref:`tagsyssocksendtoudp_struct <structtagsyssocksendtoudp__struct>` :ref:`syssocksendtoudp_struct <group___sys_socket_itf_1ga53150f4b96f5b194feacabc1724a92dd>`

- typedef struct :ref:`tagsyssocksetdefaultgateway_struct <structtagsyssocksetdefaultgateway__struct>` :ref:`syssocksetdefaultgateway_struct <group___sys_socket_itf_1ga464dcb5f99db5f1a51ffac401540cf90>`

- typedef struct :ref:`tagsyssocksetipaddress_struct <structtagsyssocksetipaddress__struct>` :ref:`syssocksetipaddress_struct <group___sys_socket_itf_1ga28371658f4e6c226915fd6be5752940b>`

- typedef struct :ref:`tagsyssocksetipaddressandnetmask_struct <structtagsyssocksetipaddressandnetmask__struct>` :ref:`syssocksetipaddressandnetmask_struct <group___sys_socket_itf_1ga5d175753fc859395378ccdc2115d339e>`

- typedef struct :ref:`tagsyssocksetoption_struct <structtagsyssocksetoption__struct>` :ref:`syssocksetoption_struct <group___sys_socket_itf_1ga1fbddd897a07cd8bd9c54c6b66a143e5>`

- typedef struct :ref:`tagsyssocksetsubnetmask_struct <structtagsyssocksetsubnetmask__struct>` :ref:`syssocksetsubnetmask_struct <group___sys_socket_itf_1ga0a610451ad67fc4e3c627e3377a876cf>`

- typedef struct :ref:`tagsyssockshutdown_struct <structtagsyssockshutdown__struct>` :ref:`syssockshutdown_struct <group___sys_socket_itf_1ga60502f76be372d094281332716fe1637>`

- typedef :ref:`ISysSocket_C <struct_i_sys_socket___c>` :ref:`ISysSocket <group___sys_socket_itf_1ga12ef1098da76b55747e8416845db309d>`

Functions
---------

- void :ref:`syssockaccept <group___sys_socket_itf_1gaa6904c09e3ba1450b702aa969293b6b8>` (:ref:`syssockaccept_struct <group___sys_socket_itf_1ga33055b94f8b9e5e27ad5d15abf323a70>` * p)

- void :ref:`syssockbind <group___sys_socket_itf_1gadad51898d9454df7a6dada8f459e73b4>` (:ref:`syssockbind_struct <group___sys_socket_itf_1gadc68f066c4a73e214e7ce494b9c0e66a>` * p)

- void :ref:`syssockclose <group___sys_socket_itf_1ga80583b776e780a56423d562af3b19459>` (:ref:`syssockclose_struct <group___sys_socket_itf_1ga085a24dbf5dc9b58c967f5dd044157bf>` * p)

- void :ref:`syssockcloseudp <group___sys_socket_itf_1ga69bb87e92aec7043642164d0ced58767>` (:ref:`syssockcloseudp_struct <group___sys_socket_itf_1ga2a0fc35d12089d76ac22d80ee935f22e>` * p)

- void :ref:`syssockconnect <group___sys_socket_itf_1gae542ab4b50ba6b4552d86eb23a5c8415>` (:ref:`syssockconnect_struct <group___sys_socket_itf_1ga6fdd01662c50d99201a5483b44e0aac4>` * p)

- void :ref:`syssockcreate <group___sys_socket_itf_1ga52b8007c129757d8dd91215916c815e3>` (:ref:`syssockcreate_struct <group___sys_socket_itf_1gaf93b29f53208a27154716479b07e46be>` * p)

- void :ref:`syssockcreateudp <group___sys_socket_itf_1ga87dfb46dacfc10f96feee1706e3b9341>` (:ref:`syssockcreateudp_struct <group___sys_socket_itf_1ga7799bb0196434d0139b327d576ebf351>` * p)

- void :ref:`syssockfdinit <group___sys_socket_itf_1gaa6bb550a9e76914361f49fbc81493fcd>` (:ref:`syssockfdinit_struct <group___sys_socket_itf_1ga4fc946384bf26253c05f8f8ee60dc6d7>` * p)

- void :ref:`syssockfdisset <group___sys_socket_itf_1gaecb3738e3ea8925b30aab1a449a52f16>` (:ref:`syssockfdisset_struct <group___sys_socket_itf_1ga9b74119c23df6f9f80b8a4d74a3bac74>` * p)

- void :ref:`syssockfdzero <group___sys_socket_itf_1ga1be0f3cee9019ddefbfbe9fca1417f08>` (:ref:`syssockfdzero_struct <group___sys_socket_itf_1gacaa93c6e9c7390b5367059818e5697ed>` * p)

- void :ref:`syssockgetfirstadapterinfo <group___sys_socket_itf_1ga4c990cf28b746e834b26d4bc9c5221b7>` (:ref:`syssockgetfirstadapterinfo_struct <group___sys_socket_itf_1ga5d9f04576416c50cc3e1f60095492cf8>` * p)

- void :ref:`syssockgethostbyname <group___sys_socket_itf_1ga6162934b0c9c1806c7cbd76dc3a77c17>` (:ref:`syssockgethostbyname_struct <group___sys_socket_itf_1gac3a6444f39bd619586918f24460dcd4d>` * p)

- void :ref:`syssockgethostname <group___sys_socket_itf_1ga2b94c806fd3fb142539c96a4d246bf73>` (:ref:`syssockgethostname_struct <group___sys_socket_itf_1gadcc1d6bca8f12ee46fef1a3d0e59a387>` * p)

- void :ref:`syssockgetnextadapterinfo <group___sys_socket_itf_1ga453111cb82e6442f5c691736cf4e3303>` (:ref:`syssockgetnextadapterinfo_struct <group___sys_socket_itf_1ga52d906a5718022acbb98ddbce046835a>` * p)

- void :ref:`syssockgetoption <group___sys_socket_itf_1ga23e83562e15ee6f90e74035028c7fc4d>` (:ref:`syssockgetoption_struct <group___sys_socket_itf_1ga2e5c835b310064306f0480949f162811>` * p)

- void :ref:`syssockgetoshandle <group___sys_socket_itf_1ga460e925480bd78136c619bd87e5054f2>` (:ref:`syssockgetoshandle_struct <group___sys_socket_itf_1ga1cfb05e7650bea50c9d0f8c24707744f>` * p)

- void :ref:`syssockgetpeername <group___sys_socket_itf_1ga142da38a53e27bff23d95ac6638480e9>` (:ref:`syssockgetpeername_struct <group___sys_socket_itf_1gaa934964f8d25ef1baffd0c814bfad248>` * p)

- void :ref:`syssockgetrecvsizeudp <group___sys_socket_itf_1gad2b8bfb0561e4e5cd29c79143f9073a1>` (:ref:`syssockgetrecvsizeudp_struct <group___sys_socket_itf_1ga0fe0819dd1484309617cc1ed1cfa4164>` * p)

- void :ref:`syssockgetsockname <group___sys_socket_itf_1gada1e2cecfe04575b7f43359627134e80>` (:ref:`syssockgetsockname_struct <group___sys_socket_itf_1ga767340d1af81d43c3d37d9171db72d8a>` * p)

- void :ref:`syssockgetsubnetmask <group___sys_socket_itf_1gaa1ba10fee047e7aa3bffc6349d9f1270>` (:ref:`syssockgetsubnetmask_struct <group___sys_socket_itf_1gafcf9d2274c4b757e3c906bf27d5f9583>` * p)

- void :ref:`syssockhtonl <group___sys_socket_itf_1ga8d38c331d12fd067e14fc6967c221bb8>` (:ref:`syssockhtonl_struct <group___sys_socket_itf_1ga8384b4d42490a2ba51b499fdae33a869>` * p)

- void :ref:`syssockhtons <group___sys_socket_itf_1ga323a93c7a1cc01afc00db9fc6b7a460a>` (:ref:`syssockhtons_struct <group___sys_socket_itf_1ga92a03b188c30a84263d52209b1f5e394>` * p)

- void :ref:`syssockinetaddr <group___sys_socket_itf_1ga945d374bc89ef392eb2ef9bfa0a64057>` (:ref:`syssockinetaddr_struct <group___sys_socket_itf_1gadb4d7c407824f3b84b6a68882cdc2a87>` * p)

- void :ref:`syssockinetntoa <group___sys_socket_itf_1ga6bcfe913cd96ba43d42d27ddb8c693b6>` (:ref:`syssockinetntoa_struct <group___sys_socket_itf_1ga04e6807452fd8286a9df71bca51d4dde>` * p)

- void :ref:`syssockioctl <group___sys_socket_itf_1ga1b491d5e75a3e89925d0c00d48c012a0>` (:ref:`syssockioctl_struct <group___sys_socket_itf_1ga699960a770f40d59e29ab98ffbb7a3e9>` * p)

- void :ref:`syssocklisten <group___sys_socket_itf_1ga1cb9a5454c54ae80818f605730357094>` (:ref:`syssocklisten_struct <group___sys_socket_itf_1ga999cb3d0db81be58ecc2f87d5ba60dcd>` * p)

- void :ref:`syssockntohl <group___sys_socket_itf_1gaea06d3ef9b18c9ac62fe32c167f96773>` (:ref:`syssockntohl_struct <group___sys_socket_itf_1ga9d87ef41e3c9885cfdf76272f6f80408>` * p)

- void :ref:`syssockntohs <group___sys_socket_itf_1gab05c968cacb3bf02108a9534fbbd093b>` (:ref:`syssockntohs_struct <group___sys_socket_itf_1ga0f607a60f694705f7ae5ded9d2e3f09e>` * p)

- void :ref:`syssockping <group___sys_socket_itf_1ga78f11a1bf239a4b4f92b26c4f2c29658>` (:ref:`syssockping_struct <group___sys_socket_itf_1ga46cd018208614a3306c132afb39ba00e>` * p)

- void :ref:`syssockrecv <group___sys_socket_itf_1ga9684ccb5b7770eecc56658f10710fe4f>` (:ref:`syssockrecv_struct <group___sys_socket_itf_1ga349e13d66d1fa9bb18ee4d358c8ca79d>` * p)

- void :ref:`syssockrecvfrom <group___sys_socket_itf_1ga19c00271ca33bca70234869e0f9af503>` (:ref:`syssockrecvfrom_struct <group___sys_socket_itf_1gaaceca435c2e43653fe5170ac2c9e493e>` * p)

- void :ref:`syssockrecvfromudp <group___sys_socket_itf_1gaeb8c894235c86e9a2610b3199e82ada0>` (:ref:`syssockrecvfromudp_struct <group___sys_socket_itf_1gada6af25cde07f48dd365fe1ea90542ec>` * p)

- void :ref:`syssockrecvfromudp2 <group___sys_socket_itf_1gaabb62ae3c15dff8fb0ca571f52899138>` (:ref:`syssockrecvfromudp2_struct <group___sys_socket_itf_1gabd8603aff08ad10d4f3b325c6238fb4a>` * p)

- void :ref:`syssockselect <group___sys_socket_itf_1gaf4aced5382f42999f4710e23de4abe6c>` (:ref:`syssockselect_struct <group___sys_socket_itf_1ga1e0ee9d6fa6539ebaa34db3f33a74122>` * p)

- void :ref:`syssocksend <group___sys_socket_itf_1ga5d6e2e62ce013cdc9097f5c01729e2f3>` (:ref:`syssocksend_struct <group___sys_socket_itf_1gab737c6c31323ebea6e57e743a5c67d75>` * p)

- void :ref:`syssocksendto <group___sys_socket_itf_1gacf86c1bc0e8941647dbb5ebebdd859c4>` (:ref:`syssocksendto_struct <group___sys_socket_itf_1ga63b5858eccbc4ec9e526d9c893f6bd1b>` * p)

- void :ref:`syssocksendtoudp <group___sys_socket_itf_1ga7ec5173422552cdcc828c09d38ff891b>` (:ref:`syssocksendtoudp_struct <group___sys_socket_itf_1ga53150f4b96f5b194feacabc1724a92dd>` * p)

- void :ref:`syssocksetdefaultgateway <group___sys_socket_itf_1gae8d4767febffd0f120dba12700eaafe8>` (:ref:`syssocksetdefaultgateway_struct <group___sys_socket_itf_1ga464dcb5f99db5f1a51ffac401540cf90>` * p)

- void :ref:`syssocksetipaddress <group___sys_socket_itf_1ga73920ed59acc029b3870cdc8767e588b>` (:ref:`syssocksetipaddress_struct <group___sys_socket_itf_1ga28371658f4e6c226915fd6be5752940b>` * p)

- void :ref:`syssocksetipaddressandnetmask <group___sys_socket_itf_1ga2a8631d04f5507bc4568286eb0e7f347>` (:ref:`syssocksetipaddressandnetmask_struct <group___sys_socket_itf_1ga5d175753fc859395378ccdc2115d339e>` * p)

- void :ref:`syssocksetoption <group___sys_socket_itf_1gabd1cdb9961c941d7b796a5624adbd03c>` (:ref:`syssocksetoption_struct <group___sys_socket_itf_1ga1fbddd897a07cd8bd9c54c6b66a143e5>` * p)

- void :ref:`syssocksetsubnetmask <group___sys_socket_itf_1ga74f13ce48daebc4bee6ba41e03fec4e6>` (:ref:`syssocksetsubnetmask_struct <group___sys_socket_itf_1ga0a610451ad67fc4e3c627e3377a876cf>` * p)

- void :ref:`syssockshutdown <group___sys_socket_itf_1ga1f21272055fa89aba8d9eb21583764b7>` (:ref:`syssockshutdown_struct <group___sys_socket_itf_1ga60502f76be372d094281332716fe1637>` * p)

- :ref:`SOCK_ADAPTER_INFO_INT <group___sys_socket_itf___internal_sys_socketadapterinformationstruct_1ga5daf857364f72c30cef5da67a3bb30c9>` * :ref:`SysSockGetAdapterInfoBlockInternal <group___sys_socket_itf_1gac008ce7e4651e84ef9eed8394ed46dd6>` (RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysSockAppendAdapterInfoBlockInternal <group___sys_socket_itf_1ga21cfbfb337d9d594c457b31a92fa0291>` (:ref:`SOCK_ADAPTER_INFO_INT <group___sys_socket_itf___internal_sys_socketadapterinformationstruct_1ga5daf857364f72c30cef5da67a3bb30c9>` * pAdapter)

- :ref:`SOCK_ADAPTER_INFO_INT <group___sys_socket_itf___internal_sys_socketadapterinformationstruct_1ga5daf857364f72c30cef5da67a3bb30c9>` * :ref:`SysSockGetFirstAdapterInfoInternal <group___sys_socket_itf_1ga9f2d8d16ee1029f9a19913c2475df85a>` (RTS_RESULT * pResult)

- :ref:`SOCK_ADAPTER_INFO_INT <group___sys_socket_itf___internal_sys_socketadapterinformationstruct_1ga5daf857364f72c30cef5da67a3bb30c9>` * :ref:`SysSockGetNextAdapterInfoInternal <group___sys_socket_itf_1gab902db990855b0a0f4abb1134ac8d742>` (:ref:`SOCK_ADAPTER_INFO_INT <group___sys_socket_itf___internal_sys_socketadapterinformationstruct_1ga5daf857364f72c30cef5da67a3bb30c9>` * pPrevAdapter, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysSockOSUpdateNetworkAdapterInfo <group___sys_socket_itf_1ga514024819e7578b82d46dbebcf6d307e>` (void)

- RTS_RESULT :ref:`SysSockOSSetIpAddressAndNetMask <group___sys_socket_itf_1gad10602c684857d0ca791cccc819fd4ac>` (RTS_WCHAR * pwszAdapterName, :ref:`INADDR <struct_i_n_a_d_d_r>` * pIpAddr, :ref:`INADDR <struct_i_n_a_d_d_r>` * pNetMask)

- RTS_RESULT :ref:`SysSockOSSetDefaultGateway <group___sys_socket_itf_1gaa5719074285dc843802ebd397c623aa1>` (RTS_WCHAR * pwszAdapterName, :ref:`INADDR <struct_i_n_a_d_d_r>` * pGatewayAddr)

- RTS_RESULT :ref:`SysSockOSInit <group___sys_socket_itf_1ga07e8a1ad2a644b9c7b8cd0652a0a25d5>` (INIT_STRUCT * pInit)

- RTS_RESULT :ref:`SysSockOSHookFunction <group___sys_socket_itf_1ga9945b3686d655e211fc1e5e5077b818b>` (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)

- RTS_HANDLE :ref:`SysSockCreate <group___sys_socket_itf_1ga3812315581d7ea7f717ad035145b8a33>` (int iAddressFamily, int iType, int iProtocol, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysSockClose <group___sys_socket_itf_1gac706d50aeb2b2bb678da100f8a726c73>` (RTS_HANDLE hSocket)

- RTS_RESULT :ref:`SysSockSetOption <group___sys_socket_itf_1gaa342277e920cba3eda31a65cfd54c5b2>` (RTS_HANDLE hSocket, int iLevel, int iOption, char * pcOptionValue, int iOptionLen)

- RTS_RESULT :ref:`SysSockGetOption <group___sys_socket_itf_1gaa829c944c9a90d3028fb16112787a1bc>` (RTS_HANDLE hSocket, int iLevel, int iOption, char * pcOptionValue, int * piOptionLen)

- RTS_RESULT :ref:`SysSockBind <group___sys_socket_itf_1ga29e3bffcd92e01492d111ef9a43d7524>` (RTS_HANDLE hSocket, :ref:`SOCKADDRESS <struct_s_o_c_k_a_d_d_r_e_s_s>` * pSockAddr, int iSockAddrSize)

- RTS_RESULT :ref:`SysSockGetHostName <group___sys_socket_itf_1gaa6b108a6afc007184d272b6e4f829e80>` (char * pszHostName, int iNameLength)

- RTS_RESULT :ref:`SysSockGetHostByName <group___sys_socket_itf_1ga741ac269edaaa88c597a48a2a577a854>` (char * pszHostName, :ref:`SOCK_HOSTENT <struct_s_o_c_k___h_o_s_t_e_n_t>` * pHost)

- RTS_RESULT :ref:`SysSockInetNtoa <group___sys_socket_itf_1gab2dcaa62d371c38ebf9c6b94b7a8fe46>` (:ref:`INADDR <struct_i_n_a_d_d_r>` * pInAddr, char * pszIPAddr, int iIPAddrSize)

- RTS_RESULT :ref:`SysSockInetAddr <group___sys_socket_itf_1gabe4395c7a8a33830c7b6378261e1a0dd>` (char * pszIPAddress, RTS_UI32 * pInAddr)

- unsigned short :ref:`SysSockHtons <group___sys_socket_itf_1ga48c7c4a743b8dc34a2ed85f3b11b8555>` (unsigned short usHost)

- RTS_UI32 :ref:`SysSockHtonl <group___sys_socket_itf_1ga334941a933b7045c7c0064e7cd026a18>` (RTS_UI32 ulHost)

- unsigned short :ref:`SysSockNtohs <group___sys_socket_itf_1gacf86310d1e3904062afbb0971cb5f979>` (unsigned short usNet)

- RTS_UI32 :ref:`SysSockNtohl <group___sys_socket_itf_1ga96695eeec93c83897efacad462aacb39>` (RTS_UI32 ulNet)

- RTS_RESULT :ref:`SysSockListen <group___sys_socket_itf_1ga9a0d7e8f58402c0e10db8000c2084362>` (RTS_HANDLE hSocket, int iMaxConnections)

- RTS_RESULT :ref:`SysSockSetIPAddress <group___sys_socket_itf_1gac9df27adc7dee251a49276325cb38c4c>` (char * pszCard, char * pszIPAddress)

- RTS_RESULT :ref:`SysSockConnect <group___sys_socket_itf_1ga395884b5c3d46ae74b24f44bb900ea45>` (RTS_HANDLE hSocket, :ref:`SOCKADDRESS <struct_s_o_c_k_a_d_d_r_e_s_s>` * pSockAddr, int iSockAddrSize)

- RTS_RESULT :ref:`SysSockSelect <group___sys_socket_itf_1ga8f7ac1d6d8e1cb0a2906f25896b0d95e>` (int iWidth, :ref:`SOCKET_FD_SET <struct_s_o_c_k_e_t___f_d___s_e_t>` * fdRead, :ref:`SOCKET_FD_SET <struct_s_o_c_k_e_t___f_d___s_e_t>` * fdWrite, :ref:`SOCKET_FD_SET <struct_s_o_c_k_e_t___f_d___s_e_t>` * fdExcept, :ref:`SOCKET_TIMEVAL <struct_s_o_c_k_e_t___t_i_m_e_v_a_l>` * ptvTimeout, int * pnReady)

- RTS_RESULT :ref:`SysSockShutdown <group___sys_socket_itf_1ga6ce6f321fb09784e033bc41824ce55d7>` (RTS_HANDLE hSocket, int iHow)

- RTS_RESULT :ref:`SysSockIoctl <group___sys_socket_itf_1ga2ea1074c433fd58a2c2f8e493f8fd0c2>` (RTS_HANDLE hSocket, int iCommand, int * piParameter)

- RTS_SSIZE :ref:`SysSockRecv <group___sys_socket_itf_1gaf4208b02b587eb1ecddf5acc257bef12>` (RTS_HANDLE hSocket, char * pbyBuffer, RTS_SSIZE iBufferSize, int iFlags, RTS_RESULT * pResult)

- RTS_SSIZE :ref:`SysSockSend <group___sys_socket_itf_1gaf5571ac3d75d30147438179f7ace24bb>` (RTS_HANDLE hSocket, char * pbyBuffer, RTS_SSIZE iBufferSize, int iFlags, RTS_RESULT * pResult)

- RTS_SSIZE :ref:`SysSockRecvFrom <group___sys_socket_itf_1gafc6423dcd1cb655bb511fc0a22ff99df>` (RTS_HANDLE hSocket, char * pbyBuffer, RTS_SSIZE iBufferSize, int iFlags, :ref:`SOCKADDRESS <struct_s_o_c_k_a_d_d_r_e_s_s>` * pSockAddr, int iSockAddrSize, RTS_RESULT * pResult)

- RTS_SSIZE :ref:`SysSockSendTo <group___sys_socket_itf_1ga839f42059e06ab467178705cddc97028>` (RTS_HANDLE hSocket, char * pbyBuffer, RTS_SSIZE iBufferSize, int iFlags, :ref:`SOCKADDRESS <struct_s_o_c_k_a_d_d_r_e_s_s>` * pSockAddr, int iSockAddrSize, RTS_RESULT * pResult)

- RTS_HANDLE :ref:`SysSockCreateUdp <group___sys_socket_itf_1ga3fb94cb55780cd712f853a045c832210>` (int iSendPort, int iRecvPort, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysSockCloseUdp <group___sys_socket_itf_1gaff95e6bbc266fa30cd8e8b5397f0bb38>` (RTS_HANDLE hSocket)

- RTS_SSIZE :ref:`SysSockSendToUdp <group___sys_socket_itf_1gaab703c5099298f9ac2970854b607c36e>` (RTS_HANDLE hSocket, int iPort, char * pszDestAddress, unsigned char * pbyData, RTS_SSIZE iDataSize, RTS_RESULT * pResult)

- RTS_SSIZE :ref:`SysSockRecvFromUdp <group___sys_socket_itf_1ga69279f5109dfa81e718ab90dca666093>` (RTS_HANDLE hSocket, unsigned char * pbyData, RTS_SSIZE iDataSize, :ref:`UDP_REPLY <group___sys_socket_itf___udpreply_1gab8deb524ce5b39df867774a0fc5e1576>` * pReply, RTS_RESULT * pResult)

- RTS_SSIZE :ref:`SysSockGetRecvSizeUdp <group___sys_socket_itf_1gaa82080006ab3af320f6f602c2322cb1d>` (RTS_HANDLE hSocket, int iTimeout, RTS_RESULT * pResult)

- RTS_HANDLE :ref:`SysSockGetOSHandle <group___sys_socket_itf_1ga0bea4921ffa6d0cf7e9662a725f38259>` (RTS_HANDLE hSocket)

- RTS_RESULT :ref:`SysSockPing <group___sys_socket_itf_1ga1185abeb377391a84562baa46f1c54cb>` (char * pszIPAddress, RTS_UI32 ulTimeout, RTS_UI32 * pulReplyTime)

- RTS_RESULT :ref:`SysSockSetSubnetMask <group___sys_socket_itf_1gabb69f4209169d1fcd77f059587927930>` (char * pszIPAddress, char * pszSubnetMask)

- RTS_RESULT :ref:`SysSockGetSubnetMask <group___sys_socket_itf_1ga73f7926ef4683cd6ea34c690c05caeea>` (char * pszIPAddress, char * pszSubnetMask, int iMaxSubnetMask)

- RTS_BOOL :ref:`SysSockFdIsset <group___sys_socket_itf_1ga58476dd56a31e3e4590f3079a71d73a0>` (RTS_HANDLE hSocket, :ref:`SOCKET_FD_SET <struct_s_o_c_k_e_t___f_d___s_e_t>` * pfs)

- RTS_RESULT :ref:`SysSockFdInit <group___sys_socket_itf_1ga872ffb0f3d3de58cc6bad492d6b26e8e>` (RTS_HANDLE hSocket, :ref:`SOCKET_FD_SET <struct_s_o_c_k_e_t___f_d___s_e_t>` * pfs)

- void :ref:`SysSockFdZero <group___sys_socket_itf_1gab96fa043b69eca9f1121722131c6de16>` (:ref:`SOCKET_FD_SET <struct_s_o_c_k_e_t___f_d___s_e_t>` * pfs)

- :ref:`SOCK_ADAPTER_INFO <group___sys_socket_itf___sys_socketadapterinformationstruct_1ga46aa76ddd87db2c78b2ce731b8447a9e>` * :ref:`SysSockGetFirstAdapterInfo <group___sys_socket_itf_1gaa992602fbfb135cbb8e1439ad48a9d2b>` (RTS_RESULT * pResult)

- :ref:`SOCK_ADAPTER_INFO <group___sys_socket_itf___sys_socketadapterinformationstruct_1ga46aa76ddd87db2c78b2ce731b8447a9e>` * :ref:`SysSockGetNextAdapterInfo <group___sys_socket_itf_1ga959799c8f03d346c9578ec85e50cbc5c>` (:ref:`SOCK_ADAPTER_INFO <group___sys_socket_itf___sys_socketadapterinformationstruct_1ga46aa76ddd87db2c78b2ce731b8447a9e>` * pPrevAdapter, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysSockSetIpAddressAndNetMask <group___sys_socket_itf_1ga96779e5ea363ffe3eb12e8c196f50348>` (RTS_WCHAR * pwszAdapterName, :ref:`INADDR <struct_i_n_a_d_d_r>` * pIpAddr, :ref:`INADDR <struct_i_n_a_d_d_r>` * pNetMask)

- RTS_RESULT :ref:`SysSockSetDefaultGateway <group___sys_socket_itf_1ga3b10789b8104c8ce6e1ab4462c18012b>` (RTS_WCHAR * pwszAdapterName, :ref:`INADDR <struct_i_n_a_d_d_r>` * pGatewayAddr)

- RTS_RESULT :ref:`SysSockGetPeerName <group___sys_socket_itf_1gabd0c66f29391fd460120f56e5baa22fa>` (RTS_HANDLE hSocket, :ref:`SOCKADDRESS <struct_s_o_c_k_a_d_d_r_e_s_s>` * pSockAddr, RTS_I32 * piSockAddrSize)

- RTS_RESULT :ref:`SysSockGetSockName <group___sys_socket_itf_1ga9ce1adfc26e46f9047af1c9d49f59b2a>` (RTS_HANDLE hSocket, :ref:`SOCKADDRESS <struct_s_o_c_k_a_d_d_r_e_s_s>` * pSockAddr, RTS_I32 * piSockAddrSize)

.. _group___sys_socket_itf-details:

Detailed Description
--------------------

Interface of SysSocket.

The SysSocket interface is projected to handle access to ethernet socket layer. TCP, UDP and RAW sockets can be used.

**Copyright:**

Copyright (c) 2017-2018 CODESYS GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Macro Definition Documentation
------------------------------
.. _group___sys_socket_itf_1gaea6072d56d23af9704b3878c7b5f4f96:

#define ITF_SysSocket
^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga9a69c37655c7b960bbe419ec3ec0f11b:

#define EXTITF_SysSocket
^^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___sys_socket_itf_1gabbdd106cd2f96d10f6487aac0bdb9f38:

typedef struct tagSOCK_ADAPTER_INFORMATION  SOCK_ADAPTER_INFORMATION
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION BEGIN

Structure to describe a network adapter on SysSocket level

.. _group___sys_socket_itf_1ga33055b94f8b9e5e27ad5d15abf323a70:

typedef struct tagsyssockaccept_struct  syssockaccept_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Accept the next incoming TCP connection. | This functions calls the function accept of the operating system, which can accept a request to connect to a socket. A new descriptor (handle) for the socket is returned. The original socket is reset to the "listening" state (see SysSockListen).

:return: Handle to the new accepted socket or RTS_INVALID_HANDLE if failed.

.. _group___sys_socket_itf_1gadc68f066c4a73e214e7ce494b9c0e66a:

typedef struct tagsyssockbind_struct  syssockbind_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Bind a socket to a socket address and port number. | This functions calls the function bind of the operating system, which will assign a local address to a socket that has already been allocated to an address by |SysSockCreate|, but not yet fixed uniquely. This is usually done previous to a call to functions like |SysSockListen| or |SysSockAccept|. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga085a24dbf5dc9b58c967f5dd044157bf:

typedef struct tagsyssockclose_struct  syssockclose_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Close a socket. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga2a0fc35d12089d76ac22d80ee935f22e:

typedef struct tagsyssockcloseudp_struct  syssockcloseudp_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Close a UDP socket. Handle must be retrieved by |SysSockCreateUdp| ! | This function calls the function closesocket of the operating system to close a socket working with the user datagram protocol UDP. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga6fdd01662c50d99201a5483b44e0aac4:

typedef struct tagsyssockconnect_struct  syssockconnect_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Connect as a client to a TCP server. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1gaf93b29f53208a27154716479b07e46be:

typedef struct tagsyssockcreate_struct  syssockcreate_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Create a new socket and return the socket handle. :return: Handle to the new socket. The return is a descriptor (handle) of the new socket, which is required as input parameter by other library functions like |SysSockBind|, |SysSockConnect| etc.

.. _group___sys_socket_itf_1ga7799bb0196434d0139b327d576ebf351:

typedef struct tagsyssockcreateudp_struct  syssockcreateudp_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Higher level function, to create a complete UDP socket. | The socket will make use of the user data protocol UDP. :return: Handle to the UDP socket

.. _group___sys_socket_itf_1ga4fc946384bf26253c05f8f8ee60dc6d7:

typedef struct tagsyssockfdinit_struct  syssockfdinit_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Add a socket to a socket set. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga9b74119c23df6f9f80b8a4d74a3bac74:

typedef struct tagsyssockfdisset_struct  syssockfdisset_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Check if a socket is inside of a set. :return: TRUE if it is inside the set, FALSE if not.

.. _group___sys_socket_itf_1gacaa93c6e9c7390b5367059818e5697ed:

typedef struct tagsyssockfdzero_struct  syssockfdzero_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Clear a Socket set. :return: Returns the runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga5d9f04576416c50cc3e1f60095492cf8:

typedef struct tagsyssockgetfirstadapterinfo_struct  syssockgetfirstadapterinfo_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Get adapter information struct of the first network adapter. | Note: It may took a while until a change of the adapter configuration is reflected here. :return: Handle to be passed to SysSockGetNextAdapter() to retrieve the next adapter information.

.. _group___sys_socket_itf_1gac3a6444f39bd619586918f24460dcd4d:

typedef struct tagsyssockgethostbyname_struct  syssockgethostbyname_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Get host description specified by host name. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1gadcc1d6bca8f12ee46fef1a3d0e59a387:

typedef struct tagsyssockgethostname_struct  syssockgethostname_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Get host name of the target. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga52d906a5718022acbb98ddbce046835a:

typedef struct tagsyssockgetnextadapterinfo_struct  syssockgetnextadapterinfo_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Get adapter information struct of the next network adapter from the adapter list. | Note: It may took a while until a change of the adapter configuration is reflected here. :return: Handle to be passed to SysSockGetNextAdapter() to retrieve the next adapter information.

.. _group___sys_socket_itf_1ga2e5c835b310064306f0480949f162811:

typedef struct tagsyssockgetoption_struct  syssockgetoption_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Set options of a specified socket. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga1cfb05e7650bea50c9d0f8c24707744f:

typedef struct tagsyssockgetoshandle_struct  syssockgetoshandle_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Get operating system handle of the UDP socket. :return: Operating system handle

.. _group___sys_socket_itf_1gaa934964f8d25ef1baffd0c814bfad248:

typedef struct tagsyssockgetpeername_struct  syssockgetpeername_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Returns the socket address of the peer to which a socket is connected. | The SysSockGetPeerName function can be used only on a connected socket. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga0fe0819dd1484309617cc1ed1cfa4164:

typedef struct tagsyssockgetrecvsizeudp_struct  syssockgetrecvsizeudp_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Check actual received data on the UDP socket. :return: Number of bytes actual available in the socket

.. _group___sys_socket_itf_1ga767340d1af81d43c3d37d9171db72d8a:

typedef struct tagsyssockgetsockname_struct  syssockgetsockname_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Returns the socket address of the local socket. | Usally this function is called to retrieve the local socket address on multihomed hosts or to get the local port number in client implemntations. If the socket is neither connected nor locally bound to an address, the result of the function and the value stored in the object pointed to by pSockAddress is unspecified. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1gafcf9d2274c4b757e3c906bf27d5f9583:

typedef struct tagsyssockgetsubnetmask_struct  syssockgetsubnetmask_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Get subnetmask of a specified IP address adapter. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga8384b4d42490a2ba51b499fdae33a869:

typedef struct tagsyssockhtonl_struct  syssockhtonl_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Converts a value of type UDINT from host byte order to the order of the TCP/IP network. :return: Converted UDINT value

.. _group___sys_socket_itf_1ga92a03b188c30a84263d52209b1f5e394:

typedef struct tagsyssockhtons_struct  syssockhtons_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Converts a value of type short from order of the TCP/IP network to the host byte order. :return: Converted WORD value

.. _group___sys_socket_itf_1gadb4d7c407824f3b84b6a68882cdc2a87:

typedef struct tagsyssockinetaddr_struct  syssockinetaddr_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Convert an IP address string into an IP address. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga04e6807452fd8286a9df71bca51d4dde:

typedef struct tagsyssockinetntoa_struct  syssockinetntoa_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Convert IP address to a string. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga699960a770f40d59e29ab98ffbb7a3e9:

typedef struct tagsyssockioctl_struct  syssockioctl_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Io-control of a socket. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga999cb3d0db81be58ecc2f87d5ba60dcd:

typedef struct tagsyssocklisten_struct  syssocklisten_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Listen on a TCP server socket for new connection. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga9d87ef41e3c9885cfdf76272f6f80408:

typedef struct tagsyssockntohl_struct  syssockntohl_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Convert a UDINT value from ethernet byte order into host format. :return: Converted UDINT value

.. _group___sys_socket_itf_1ga0f607a60f694705f7ae5ded9d2e3f09e:

typedef struct tagsyssockntohs_struct  syssockntohs_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Convert a WORD value from ethernet byte order into host format. :return:Converted WORD value

.. _group___sys_socket_itf_1ga46cd018208614a3306c132afb39ba00e:

typedef struct tagsyssockping_struct  syssockping_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Check the availability of the communication partner with a ping request. :return: Runtime system error code (see CmpErrors.library): | ERR_OK: Partner available | ERR_FAILED: Partner cannot be reached | All other results: Ping could not be sent because of other errors, so we don't know, if the partner is available.

.. _group___sys_socket_itf_1ga349e13d66d1fa9bb18ee4d358c8ca79d:

typedef struct tagsyssockrecv_struct  syssockrecv_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Receive data from a TCP socket. :return: Number of bytes received. 0 if failed.

.. _group___sys_socket_itf_1gaaceca435c2e43653fe5170ac2c9e493e:

typedef struct tagsyssockrecvfrom_struct  syssockrecvfrom_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Receive a message from a connectionless socket (UDP). :return: Number of bytes received

.. _group___sys_socket_itf_1gada6af25cde07f48dd365fe1ea90542ec:

typedef struct tagsyssockrecvfromudp_struct  syssockrecvfromudp_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Receive a paket from a UDP socket. :return: Number of bytes received

.. _group___sys_socket_itf_1gabd8603aff08ad10d4f3b325c6238fb4a:

typedef struct tagsyssockrecvfromudp2_struct  syssockrecvfromudp2_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Receive a paket from a UDP socket. :return: Number of bytes received

.. _group___sys_socket_itf_1ga1e0ee9d6fa6539ebaa34db3f33a74122:

typedef struct tagsyssockselect_struct  syssockselect_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Check a number of sockets for activity. :return: Runtime system error code (see CmpErrors.library): | ERR_OK | ERR_SOCK_TIMEDOUT, if timeout expired

.. _group___sys_socket_itf_1gab737c6c31323ebea6e57e743a5c67d75:

typedef struct tagsyssocksend_struct  syssocksend_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Sent data to a TCP socket. :return: Number of sent bytes. 0 if failed.

.. _group___sys_socket_itf_1ga63b5858eccbc4ec9e526d9c893f6bd1b:

typedef struct tagsyssocksendto_struct  syssocksendto_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Send a message over a connectionless socket (UDP). :return: Number of bytes received.

.. _group___sys_socket_itf_1ga53150f4b96f5b194feacabc1724a92dd:

typedef struct tagsyssocksendtoudp_struct  syssocksendtoudp_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Send a paket to a UDP socket. :return: Number of bytes sent

.. _group___sys_socket_itf_1ga464dcb5f99db5f1a51ffac401540cf90:

typedef struct tagsyssocksetdefaultgateway_struct  syssocksetdefaultgateway_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set default gateway address an adapter. It depends on the device, whether the new gateway address is reset during reboot or if it is retained. In general the caller should consider this as volatile. The gateway address = 0.0.0.0 can be used to remove the gateway address from the adapter. After this there is not routing to other subnets possible.

.. note:: The default gateway can only be changed if the adapter containing the current default gateway is whitelisted in the CODESYSControl.cfg. This function will not change the default gateway of any other adapter.

:return: Returns the runtime system error code (see CmpErrors.library):

- ERR_PARAMETER: At least one of the passed pointers is NULL.

- ERR_OPERATION_DENIED: Adapter is not in white list or the operation was denied by the event EVT_SysSocket_BeforeSetGateway.

- ERR_NO_OBJECT: Adapter with the specified name does not exist.

- ERR_NO_CHANGE: There is a default gateway set on an adapter that is not whitelisted.

- ERR_FAILED: Default gateway could not be set.

- ERR_OK: Default gateway was set successfully.

.. _group___sys_socket_itf_1ga28371658f4e6c226915fd6be5752940b:

typedef struct tagsyssocksetipaddress_struct  syssocksetipaddress_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Set IP address of the specified ethernet device. Is not available on all platforms! | Use :ref:`SysSockSetIpAddressAndNetMask() <group___sys_socket_itf_1ga96779e5ea363ffe3eb12e8c196f50348>` instead. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga5d175753fc859395378ccdc2115d339e:

typedef struct tagsyssocksetipaddressandnetmask_struct  syssocksetipaddressandnetmask_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Set IP address and subnet mask of an adapter. | It depends on the device, whether the new ip address and subnet mask is reset during reboot or if it is retained. In general the caller should consider these as volatile. The combination IP address = 0.0.0.0 and subnet mask = 0.0.0.0 can be used to remove the IP address from the adapter. After this there is no IP based communication possible anymore, until a new IP address is set. Replaces the functions :ref:`SysSockSetIPAddress() <group___sys_socket_itf_1gac9df27adc7dee251a49276325cb38c4c>` and :ref:`SysSockSetSubnetMask() <group___sys_socket_itf_1gabb69f4209169d1fcd77f059587927930>` . :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga1fbddd897a07cd8bd9c54c6b66a143e5:

typedef struct tagsyssocksetoption_struct  syssocksetoption_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Set options of a specified socket. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga0a610451ad67fc4e3c627e3377a876cf:

typedef struct tagsyssocksetsubnetmask_struct  syssocksetsubnetmask_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Set subnetmask of an adapter, specified by IP address. Is not available on all platforms! | Use :ref:`SysSockSetIpAddressAndNetMask() <group___sys_socket_itf_1ga96779e5ea363ffe3eb12e8c196f50348>` instead. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga60502f76be372d094281332716fe1637:

typedef struct tagsyssockshutdown_struct  syssockshutdown_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Shutdown a socket. :return: Runtime system error code (see CmpErrors.library).

.. _group___sys_socket_itf_1ga12ef1098da76b55747e8416845db309d:

typedef ISysSocket_C ISysSocket
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___sys_socket_itf_1gaa6904c09e3ba1450b702aa969293b6b8:

void syssockaccept (syssockaccept_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gadad51898d9454df7a6dada8f459e73b4:

void syssockbind (syssockbind_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga80583b776e780a56423d562af3b19459:

void syssockclose (syssockclose_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga69bb87e92aec7043642164d0ced58767:

void syssockcloseudp (syssockcloseudp_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gae542ab4b50ba6b4552d86eb23a5c8415:

void syssockconnect (syssockconnect_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga52b8007c129757d8dd91215916c815e3:

void syssockcreate (syssockcreate_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga87dfb46dacfc10f96feee1706e3b9341:

void syssockcreateudp (syssockcreateudp_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gaa6bb550a9e76914361f49fbc81493fcd:

void syssockfdinit (syssockfdinit_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gaecb3738e3ea8925b30aab1a449a52f16:

void syssockfdisset (syssockfdisset_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga1be0f3cee9019ddefbfbe9fca1417f08:

void syssockfdzero (syssockfdzero_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga4c990cf28b746e834b26d4bc9c5221b7:

void syssockgetfirstadapterinfo (syssockgetfirstadapterinfo_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga6162934b0c9c1806c7cbd76dc3a77c17:

void syssockgethostbyname (syssockgethostbyname_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga2b94c806fd3fb142539c96a4d246bf73:

void syssockgethostname (syssockgethostname_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga453111cb82e6442f5c691736cf4e3303:

void syssockgetnextadapterinfo (syssockgetnextadapterinfo_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga23e83562e15ee6f90e74035028c7fc4d:

void syssockgetoption (syssockgetoption_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga460e925480bd78136c619bd87e5054f2:

void syssockgetoshandle (syssockgetoshandle_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga142da38a53e27bff23d95ac6638480e9:

void syssockgetpeername (syssockgetpeername_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gad2b8bfb0561e4e5cd29c79143f9073a1:

void syssockgetrecvsizeudp (syssockgetrecvsizeudp_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gada1e2cecfe04575b7f43359627134e80:

void syssockgetsockname (syssockgetsockname_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gaa1ba10fee047e7aa3bffc6349d9f1270:

void syssockgetsubnetmask (syssockgetsubnetmask_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga8d38c331d12fd067e14fc6967c221bb8:

void syssockhtonl (syssockhtonl_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga323a93c7a1cc01afc00db9fc6b7a460a:

void syssockhtons (syssockhtons_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga945d374bc89ef392eb2ef9bfa0a64057:

void syssockinetaddr (syssockinetaddr_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga6bcfe913cd96ba43d42d27ddb8c693b6:

void syssockinetntoa (syssockinetntoa_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga1b491d5e75a3e89925d0c00d48c012a0:

void syssockioctl (syssockioctl_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga1cb9a5454c54ae80818f605730357094:

void syssocklisten (syssocklisten_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gaea06d3ef9b18c9ac62fe32c167f96773:

void syssockntohl (syssockntohl_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gab05c968cacb3bf02108a9534fbbd093b:

void syssockntohs (syssockntohs_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga78f11a1bf239a4b4f92b26c4f2c29658:

void syssockping (syssockping_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga9684ccb5b7770eecc56658f10710fe4f:

void syssockrecv (syssockrecv_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga19c00271ca33bca70234869e0f9af503:

void syssockrecvfrom (syssockrecvfrom_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gaeb8c894235c86e9a2610b3199e82ada0:

void syssockrecvfromudp (syssockrecvfromudp_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gaabb62ae3c15dff8fb0ca571f52899138:

void syssockrecvfromudp2 (syssockrecvfromudp2_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gaf4aced5382f42999f4710e23de4abe6c:

void syssockselect (syssockselect_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga5d6e2e62ce013cdc9097f5c01729e2f3:

void syssocksend (syssocksend_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gacf86c1bc0e8941647dbb5ebebdd859c4:

void syssocksendto (syssocksendto_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga7ec5173422552cdcc828c09d38ff891b:

void syssocksendtoudp (syssocksendtoudp_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gae8d4767febffd0f120dba12700eaafe8:

void syssocksetdefaultgateway (syssocksetdefaultgateway_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga73920ed59acc029b3870cdc8767e588b:

void syssocksetipaddress (syssocksetipaddress_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga2a8631d04f5507bc4568286eb0e7f347:

void syssocksetipaddressandnetmask (syssocksetipaddressandnetmask_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gabd1cdb9961c941d7b796a5624adbd03c:

void syssocksetoption (syssocksetoption_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga74f13ce48daebc4bee6ba41e03fec4e6:

void syssocksetsubnetmask (syssocksetsubnetmask_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga1f21272055fa89aba8d9eb21583764b7:

void syssockshutdown (syssockshutdown_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gac008ce7e4651e84ef9eed8394ed46dd6:

SOCK_ADAPTER_INFO_INT* SysSockGetAdapterInfoBlockInternal (RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Helper functions to fill the adapter information, only to be called by OS specific implementation of SysSocket.

.. _group___sys_socket_itf_1ga21cfbfb337d9d594c457b31a92fa0291:

RTS_RESULT SysSockAppendAdapterInfoBlockInternal (SOCK_ADAPTER_INFO_INT *pAdapter)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga9f2d8d16ee1029f9a19913c2475df85a:

SOCK_ADAPTER_INFO_INT* SysSockGetFirstAdapterInfoInternal (RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gab902db990855b0a0f4abb1134ac8d742:

SOCK_ADAPTER_INFO_INT* SysSockGetNextAdapterInfoInternal (SOCK_ADAPTER_INFO_INT *pPrevAdapter, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga514024819e7578b82d46dbebcf6d307e:

RTS_RESULT SysSockOSUpdateNetworkAdapterInfo (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Functions to be implemented by the OS specific implementation of SysSocket.

.. _group___sys_socket_itf_1gad10602c684857d0ca791cccc819fd4ac:

RTS_RESULT SysSockOSSetIpAddressAndNetMask (RTS_WCHAR *pwszAdapterName, INADDR *pIpAddr, INADDR *pNetMask)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1gaa5719074285dc843802ebd397c623aa1:

RTS_RESULT SysSockOSSetDefaultGateway (RTS_WCHAR *pwszAdapterName, INADDR *pGatewayAddr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga07e8a1ad2a644b9c7b8cd0652a0a25d5:

RTS_RESULT SysSockOSInit (INIT_STRUCT *pInit)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga9945b3686d655e211fc1e5e5077b818b:

RTS_RESULT SysSockOSHookFunction (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_socket_itf_1ga3812315581d7ea7f717ad035145b8a33:

RTS_HANDLE SysSockCreate (int iAddressFamily, int iType, int iProtocol, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Create a new socket and return the socket handle. In case of an error, RTS_INVALID_HANDLE is returned.

**Parameters**

+---------+----------------+-----------------------+
| [in]    | iAddressFamily | Socket address family |
+---------+----------------+-----------------------+
| [in]    | iType          | Socket type           |
+---------+----------------+-----------------------+
| [in]    | iProtocol      | Socket protocol       |
+---------+----------------+-----------------------+
| [out]   | pResult        | Pointer to error code |
+---------+----------------+-----------------------+

**Returns:**

Handle to the socket

.. _group___sys_socket_itf_1gac706d50aeb2b2bb678da100f8a726c73:

RTS_RESULT SysSockClose (RTS_HANDLE hSocket)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Close a socket.

**Parameters**

+---------+---------+----------------------+
| [in]    | hSocket | Handle to the socket |
+---------+---------+----------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1gaa342277e920cba3eda31a65cfd54c5b2:

RTS_RESULT SysSockSetOption (RTS_HANDLE hSocket, int iLevel, int iOption, char *pcOptionValue, int iOptionLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set options of a specified socket

**Parameters**

+---------+---------------+-----------------------------+
| [in]    | hSocket       | Handle to the socket        |
+---------+---------------+-----------------------------+
| [in]    | iLevel        | Level of the socket         |
+---------+---------------+-----------------------------+
| [in]    | iOption       | Socket option command       |
+---------+---------------+-----------------------------+
| [in]    | pcOptionValue | Pointer to the option value |
+---------+---------------+-----------------------------+
| [in]    | iOptionLen    | Lenght of option value      |
+---------+---------------+-----------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1gaa829c944c9a90d3028fb16112787a1bc:

RTS_RESULT SysSockGetOption (RTS_HANDLE hSocket, int iLevel, int iOption, char *pcOptionValue, int *piOptionLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get options of a specified socket

**Parameters**

+---------+---------------+-------------------------------------------------------+
| [in]    | hSocket       | Handle to the socket                                  |
+---------+---------------+-------------------------------------------------------+
| [in]    | iLevel        | Level of the socket                                   |
+---------+---------------+-------------------------------------------------------+
| [in]    | iOption       | Socket option command                                 |
+---------+---------------+-------------------------------------------------------+
| [out]   | pcOptionValue | Pointer to get the option value                       |
+---------+---------------+-------------------------------------------------------+
| [out]   | piOptionLen   | Pointer to the option length. Real length is returned |
+---------+---------------+-------------------------------------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1ga29e3bffcd92e01492d111ef9a43d7524:

RTS_RESULT SysSockBind (RTS_HANDLE hSocket, SOCKADDRESS *pSockAddr, int iSockAddrSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Bind a socket to a socket address and port number

**Parameters**

+---------+---------------+--------------------------------------+
| [in]    | hSocket       | Handle to the socket                 |
+---------+---------------+--------------------------------------+
| [in]    | pSockAddr     | Spcket address                       |
+---------+---------------+--------------------------------------+
| [in]    | iSockAddrSize | Size of the socket address structure |
+---------+---------------+--------------------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1gaa6b108a6afc007184d272b6e4f829e80:

RTS_RESULT SysSockGetHostName (char *pszHostName, int iNameLength)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get host name of the target

**Parameters**

+---------+-------------+----------------------------+
| [out]   | pszHostName | Pointer to get host name   |
+---------+-------------+----------------------------+
| [in]    | iNameLength | Maximum length of hostname |
+---------+-------------+----------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1ga741ac269edaaa88c597a48a2a577a854:

RTS_RESULT SysSockGetHostByName (char *pszHostName, SOCK_HOSTENT *pHost)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get host description specified by host name

**Parameters**

+---------+-------------+-----------------------------+
| [in]    | pszHostName | Pointer to host name        |
+---------+-------------+-----------------------------+
| [out]   | pHost       | Pointer to host description |
+---------+-------------+-----------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1gab2dcaa62d371c38ebf9c6b94b7a8fe46:

RTS_RESULT SysSockInetNtoa (INADDR *pInAddr, char *pszIPAddr, int iIPAddrSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Convert IP address to a string

**Parameters**

+---------+-------------+-------------------------------------------------------------------+
| [in]    | pInAddr     | Pointer to IP address description                                 |
+---------+-------------+-------------------------------------------------------------------+
| [out]   | pszIPAddr   | Pointer to get IP address string (must be at least 16 bytes long) |
+---------+-------------+-------------------------------------------------------------------+
| [in]    | iIPAddrSize | Maximum length of pszIPAddr                                       |
+---------+-------------+-------------------------------------------------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1gabe4395c7a8a33830c7b6378261e1a0dd:

RTS_RESULT SysSockInetAddr (char *pszIPAddress, RTS_UI32 *pInAddr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Convert an IP address string into an IP address

**Parameters**

+---------+-----------+-------------------------------------------------------------------+
| [in]    | pszIPAddr | Pointer to get IP address string (must be at least 16 bytes long) |
+---------+-----------+-------------------------------------------------------------------+
| [out]   | pInAddr   | Pointer to IP address description (in ethernet byte order)        |
+---------+-----------+-------------------------------------------------------------------+

**Returns:**

Error code:

- ERR_PARAMETER: if pszIPAddress=NULL or pInAddr=NULL

- ERR_OK: IP-address could be converted IMPLEMENTATION NOTE: If pszIPAddress="255.255.255.255", the error code must be ERR_OK withpInAddr=0xFFFFFFFF (SOCKET_INADDR_BROADCAST).

- ERR_FAILED: IP-address invalid or empty IMPLEMENTATION NOTE: If pszIPAddress="", the error code must be ERR_FAILED withpInAddr=0xFFFFFFFF (SOCKET_INADDR_NONE).

.. _group___sys_socket_itf_1ga48c7c4a743b8dc34a2ed85f3b11b8555:

unsigned short SysSockHtons (unsigned short usHost)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Convert a host unsigned short value into the ethernet byte order

**Parameters**

+---------+--------+---------------------------+
| [in]    | usHost | Host unsigned short value |
+---------+--------+---------------------------+

**Returns:**

Returns the converted unsigned short value

.. _group___sys_socket_itf_1ga334941a933b7045c7c0064e7cd026a18:

RTS_UI32 SysSockHtonl (RTS_UI32 ulHost)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Convert a host unsigned long value into the ethernet byte order

**Parameters**

+---------+--------+--------------------------+
| [in]    | usHost | Host unsigned long value |
+---------+--------+--------------------------+

**Returns:**

Returns the converted unsigned long value

.. _group___sys_socket_itf_1gacf86310d1e3904062afbb0971cb5f979:

unsigned short SysSockNtohs (unsigned short usNet)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Convert a unsigned short value from ethernet byte order into host format

**Parameters**

+---------+-------+-------------------------------+
| [in]    | usNet | Ethernet unsigned short value |
+---------+-------+-------------------------------+

**Returns:**

Returns the converted unsigned short value

.. _group___sys_socket_itf_1ga96695eeec93c83897efacad462aacb39:

RTS_UI32 SysSockNtohl (RTS_UI32 ulNet)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Convert a unsigned long value from ethernet byte order into host format

**Parameters**

+---------+-------+------------------------------+
| [in]    | usNet | Ethernet unsigned long value |
+---------+-------+------------------------------+

**Returns:**

Returns the converted unsigned long value

.. _group___sys_socket_itf_1ga9a0d7e8f58402c0e10db8000c2084362:

RTS_RESULT SysSockListen (RTS_HANDLE hSocket, int iMaxConnections)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Listen on a TCP server socket for new connection

**Parameters**

+---------+-----------------+---------------------------------------+
| [in]    | hSocket         | Handle to the socket                  |
+---------+-----------------+---------------------------------------+
| [in]    | iMaxConnections | Maximum number of connections allowed |
+---------+-----------------+---------------------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1gac9df27adc7dee251a49276325cb38c4c:

RTS_RESULT SysSockSetIPAddress (char *pszCard, char *pszIPAddress)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Accept the next incoming TCP connection. Returns the socket for the newly created connection or RTS_INVALID_HANDLE if failed.

**Parameters**

+---------+----------------+------------------------------------------------+
| [in]    | hSocket        | Handle to the socket                           |
+---------+----------------+------------------------------------------------+
| [out]   | pSockAddr      | Socket address of the client, who is connected |
+---------+----------------+------------------------------------------------+
| [inout] | piSockAddrSize | Pointer to size of socket address structure    |
+---------+----------------+------------------------------------------------+
| [out]   | pResult        | Pointer to error code                          |
+---------+----------------+------------------------------------------------+

**Returns:**

Handle to the new accepted socket
Set IP address of the specified ethernet device. Is not available on all platforms! Use :ref:`SysSockSetIpAddressAndNetMask() <group___sys_socket_itf_1ga96779e5ea363ffe3eb12e8c196f50348>` instead.

**Parameters**

+---------+--------------+-----------------------------+
| [in]    | pszCard      | Name of the ethernet card   |
+---------+--------------+-----------------------------+
| [in]    | pszIPAddress | IP address to set as string |
+---------+--------------+-----------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1ga395884b5c3d46ae74b24f44bb900ea45:

RTS_RESULT SysSockConnect (RTS_HANDLE hSocket, SOCKADDRESS *pSockAddr, int iSockAddrSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Connect as a client to a TCP server

**Parameters**

+---------+---------------+--------------------------------------------+
| [in]    | hSocket       | Handle to the socket                       |
+---------+---------------+--------------------------------------------+
| [in]    | pSockAddr     | Socket address of the server to connect to |
+---------+---------------+--------------------------------------------+
| [in]    | iSockAddrSize | Size of socket address structure           |
+---------+---------------+--------------------------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1ga8f7ac1d6d8e1cb0a2906f25896b0d95e:

RTS_RESULT SysSockSelect (int iWidth, SOCKET_FD_SET *fdRead, SOCKET_FD_SET *fdWrite, SOCKET_FD_SET *fdExcept, SOCKET_TIMEVAL *ptvTimeout, int *pnReady)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Check a number of sockets for activity

**Parameters**

+---------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iWidth     | Number of sockets in the :ref:`SOCKET_FD_SET <struct_s_o_c_k_e_t___f_d___s_e_t>` structure, so SOCKET_FD_SETSIZE must be used here.                                                               |
+---------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | fdRead     | Read socket                                                                                                                                                                                       |
+---------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | fdWrite    | Write socket                                                                                                                                                                                      |
+---------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | fdExcept   | Exception socket                                                                                                                                                                                  |
+---------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | ptvTimeout | Pointer to specify the timeout of the operation. ptvTimeout=NULL: Infinite wait ptvTimeout->tv_sec=-1, ptvTimeout->tv_usec=-1: Infinite wait ptvTimeout->tv_sec=0, ptvTimeout->tv_usec=0: No wait |
+---------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pnReady    | Number of sockets that are ready for IO                                                                                                                                                           |
+---------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

ERR_OK or ERR_SOCK_TIMEDOUT, if timeout expired

.. _group___sys_socket_itf_1ga6ce6f321fb09784e033bc41824ce55d7:

RTS_RESULT SysSockShutdown (RTS_HANDLE hSocket, int iHow)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Shutdown a socket

**Parameters**

+---------+---------+-----------------------------------------------------------------------------------+
| [in]    | hSocket | Handle to the socket                                                              |
+---------+---------+-----------------------------------------------------------------------------------+
| [in]    | iHow    | Specified, which operations are no longer be allowed. See category shutdown flags |
+---------+---------+-----------------------------------------------------------------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1ga2ea1074c433fd58a2c2f8e493f8fd0c2:

RTS_RESULT SysSockIoctl (RTS_HANDLE hSocket, int iCommand, int *piParameter)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Io-control of a socket

**Parameters**

+---------+-------------+--------------------------------+
| [in]    | hSocket     | Handle to the socket           |
+---------+-------------+--------------------------------+
| [in]    | iCommand    | Io-control command             |
+---------+-------------+--------------------------------+
| [inout] | piParameter | Parameter value of the command |
+---------+-------------+--------------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1gaf4208b02b587eb1ecddf5acc257bef12:

RTS_SSIZE SysSockRecv (RTS_HANDLE hSocket, char *pbyBuffer, RTS_SSIZE iBufferSize, int iFlags, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Receive data from a TCP socket

**Parameters**

+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | hSocket     | Handle to the socket                                                                                                                                                                                                                                                                                                                                 |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pbyBuffer   | Buffer to read data from the socket                                                                                                                                                                                                                                                                                                                  |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iBufferSize | Maximum length of the buffer                                                                                                                                                                                                                                                                                                                         |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iFlags      | The flags parameter can be used to influence the behavior of the function beyond the options specified for the associated socket. The semantics of this function are determined by the socket options and the flags parameter. The latter is constructed by using the bitwise OR operator with any of the SOCKET_MSG values. See category TCP flags. |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pResult     | Pointer to error code                                                                                                                                                                                                                                                                                                                                |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Returns number of bytes received. 0 if failed.

.. _group___sys_socket_itf_1gaf5571ac3d75d30147438179f7ace24bb:

RTS_SSIZE SysSockSend (RTS_HANDLE hSocket, char *pbyBuffer, RTS_SSIZE iBufferSize, int iFlags, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Sent data to a TCP socket

**Parameters**

+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | hSocket     | Handle to the socket                                                                                                                                                                                                                                                                                                         |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pbyBuffer   | Buffer with data to sent                                                                                                                                                                                                                                                                                                     |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iBufferSize | Maximum length of the buffer                                                                                                                                                                                                                                                                                                 |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iFlags      | The flags parameter can be used to influence the behavior of the function beyond the options specified for the associated socket. The semantics of this function are determined by the socket options and the flags parameter. The latter is constructed by using the bitwise OR operator with any of the SOCKET_MSG values. |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pResult     | Pointer to error code                                                                                                                                                                                                                                                                                                        |
+---------+-------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Returns number of sent bytes. 0 if failed.

.. _group___sys_socket_itf_1gafc6423dcd1cb655bb511fc0a22ff99df:

RTS_SSIZE SysSockRecvFrom (RTS_HANDLE hSocket, char *pbyBuffer, RTS_SSIZE iBufferSize, int iFlags, SOCKADDRESS *pSockAddr, int iSockAddrSize, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Receive a message from a connectionless socket (UDP)

**Parameters**

+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | hSocket       | Handle to the socket                                                                                                                                                                                                                                                                                                         |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pbyBuffer     | Buffer to read data from the socket                                                                                                                                                                                                                                                                                          |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iBufferSize   | Maximum length of the buffer                                                                                                                                                                                                                                                                                                 |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iFlags        | The flags parameter can be used to influence the behavior of the function beyond the options specified for the associated socket. The semantics of this function are determined by the socket options and the flags parameter. The latter is constructed by using the bitwise OR operator with any of the SOCKET_MSG values. |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pSockAddr     | Socket address and port to receive data from                                                                                                                                                                                                                                                                                 |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iSockAddrSize | Size of socket address structure                                                                                                                                                                                                                                                                                             |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pResult       | Pointer to error code                                                                                                                                                                                                                                                                                                        |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Returns number of bytes received

.. _group___sys_socket_itf_1ga839f42059e06ab467178705cddc97028:

RTS_SSIZE SysSockSendTo (RTS_HANDLE hSocket, char *pbyBuffer, RTS_SSIZE iBufferSize, int iFlags, SOCKADDRESS *pSockAddr, int iSockAddrSize, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Send a message over a connectionless socket (UDP)

**Parameters**

+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | hSocket       | Handle to the socket                                                                                                                                                                                                                                                                                                         |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pbyBuffer     | Buffer with send data                                                                                                                                                                                                                                                                                                        |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iBufferSize   | Length of data to send. If iBufferSize is 0 ERR_PARAMETER is returned.                                                                                                                                                                                                                                                       |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iFlags        | The flags parameter can be used to influence the behavior of the function beyond the options specified for the associated socket. The semantics of this function are determined by the socket options and the flags parameter. The latter is constructed by using the bitwise OR operator with any of the SOCKET_MSG values. |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pSockAddr     | Socket address and port to sent data to                                                                                                                                                                                                                                                                                      |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | iSockAddrSize | Size of socket address structure                                                                                                                                                                                                                                                                                             |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pResult       | Pointer to error code                                                                                                                                                                                                                                                                                                        |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Returns number of bytes received

.. _group___sys_socket_itf_1ga3fb94cb55780cd712f853a045c832210:

RTS_HANDLE SysSockCreateUdp (int iSendPort, int iRecvPort, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Higher level function, to create a complete UDP socket

**Parameters**

+---------+-----------+------------------------------------------+
| [in]    | iSendPort | Port number to send (host byte order)    |
+---------+-----------+------------------------------------------+
| [in]    | iRecvPort | Port number to receive (host byte order) |
+---------+-----------+------------------------------------------+
| [out]   | pResult   | Pointer to error code                    |
+---------+-----------+------------------------------------------+

**Returns:**

Handle to the UDP socket

.. _group___sys_socket_itf_1gaff95e6bbc266fa30cd8e8b5397f0bb38:

RTS_RESULT SysSockCloseUdp (RTS_HANDLE hSocket)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Close a UDP socket

**Parameters**

+---------+---------+-----------------------------------------------------------------+
| [in]    | hSocket | Handle to the UDP socket. Must be opened with SysSockCreateUdp! |
+---------+---------+-----------------------------------------------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1gaab703c5099298f9ac2970854b607c36e:

RTS_SSIZE SysSockSendToUdp (RTS_HANDLE hSocket, int iPort, char *pszDestAddress, unsigned char *pbyData, RTS_SSIZE iDataSize, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Send a paket to a UDP socket

**Parameters**

+---------+----------------+--------------------------------------------------------------------+
| [in]    | hSocket        | Handle to the UDP socket                                           |
+---------+----------------+--------------------------------------------------------------------+
| [in]    | iPort          | Port number to send in host byteorder!                             |
+---------+----------------+--------------------------------------------------------------------+
| [in]    | pszDestAddress | Destination IP address ot send data to                             |
+---------+----------------+--------------------------------------------------------------------+
| [in]    | pbyData        | Pointer to data to send                                            |
+---------+----------------+--------------------------------------------------------------------+
| [in]    | iDataSize      | Size of data to send. If iDataSize is 0 ERR_PARAMETER is returned. |
+---------+----------------+--------------------------------------------------------------------+
| [out]   | pResult        | Pointer to error code                                              |
+---------+----------------+--------------------------------------------------------------------+

**Returns:**

Number of bytes sent

.. _group___sys_socket_itf_1ga69279f5109dfa81e718ab90dca666093:

RTS_SSIZE SysSockRecvFromUdp (RTS_HANDLE hSocket, unsigned char *pbyData, RTS_SSIZE iDataSize, UDP_REPLY *pReply, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Receive a paket from a UDP socket

**Parameters**

+---------+-----------+--------------------------------------------------------------------------------+
| [in]    | hSocket   | Handle to the UDP socket                                                       |
+---------+-----------+--------------------------------------------------------------------------------+
| [out]   | pbyData   | Pointer to data to receive                                                     |
+---------+-----------+--------------------------------------------------------------------------------+
| [in]    | iDataSize | Size of data to receive                                                        |
+---------+-----------+--------------------------------------------------------------------------------+
| [out]   | pReply    | Description of the client that has sent this packet. See category "Udp reply". |
+---------+-----------+--------------------------------------------------------------------------------+
| [out]   | pResult   | Pointer to error code                                                          |
+---------+-----------+--------------------------------------------------------------------------------+

**Returns:**

Number of bytes received

.. _group___sys_socket_itf_1gaa82080006ab3af320f6f602c2322cb1d:

RTS_SSIZE SysSockGetRecvSizeUdp (RTS_HANDLE hSocket, int iTimeout, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Check actual received data on the UDP socket

**Parameters**

+---------+----------+----------------------------------------------------------------+
| [in]    | hSocket  | Handle to the UDP socket                                       |
+---------+----------+----------------------------------------------------------------+
| [in]    | iTimeout | Timeout to wait for received data. -1=Infinite wait, 0=no wait |
+---------+----------+----------------------------------------------------------------+
| [out]   | pResult  | Pointer to error code                                          |
+---------+----------+----------------------------------------------------------------+

**Returns:**

Number of bytes actual available in the socket

.. _group___sys_socket_itf_1ga0bea4921ffa6d0cf7e9662a725f38259:

RTS_HANDLE SysSockGetOSHandle (RTS_HANDLE hSocket)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get operating system handle of the UDP socket

**Parameters**

+---------+---------+--------------------------+
| [in]    | hSocket | Handle to the UDP socket |
+---------+---------+--------------------------+

**Returns:**

Operating system handle

.. _group___sys_socket_itf_1ga1185abeb377391a84562baa46f1c54cb:

RTS_RESULT SysSockPing (char *pszIPAddress, RTS_UI32 ulTimeout, RTS_UI32 *pulReplyTime)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Check the availability of the communication partner with a ping request

**Parameters**

+---------+--------------+---------------------------------------------------------------------------+
| [in]    | pszIPAddress | IP address of the communication partner as string                         |
+---------+--------------+---------------------------------------------------------------------------+
| [in]    | ulTimeout    | Timeout in milliseconds to wait until reply                               |
+---------+--------------+---------------------------------------------------------------------------+
| [out]   | pulReplyTime | Pointer to get the reply time of the ping request in milliseconds or NULL |
+---------+--------------+---------------------------------------------------------------------------+

**Returns:**

*ERR_OK: Partner available, ERR_TIMEOUT: Partner could not be reached during the specified timeout. *All other results: Ping could not be sent because of other errors, so we don't know, if the partner is available.

.. _group___sys_socket_itf_1gabb69f4209169d1fcd77f059587927930:

RTS_RESULT SysSockSetSubnetMask (char *pszIPAddress, char *pszSubnetMask)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set subnetmask of a specified IP address adapter. Is not available on all platforms! Use :ref:`SysSockSetIpAddressAndNetMask() <group___sys_socket_itf_1ga96779e5ea363ffe3eb12e8c196f50348>` instead.

**Parameters**

+---------+---------------+---------------------------------------------------+
| [in]    | pszIPAddress  | IP address of the communication partner as string |
+---------+---------------+---------------------------------------------------+
| [in]    | pszSubnetMask | Subnet mask as string                             |
+---------+---------------+---------------------------------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1ga73f7926ef4683cd6ea34c690c05caeea:

RTS_RESULT SysSockGetSubnetMask (char *pszIPAddress, char *pszSubnetMask, int iMaxSubnetMask)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get subnetmask of a specified IP address adapter

**Parameters**

+---------+----------------+---------------------------------------------------+
| [in]    | pszIPAddress   | IP address of the communication partner as string |
+---------+----------------+---------------------------------------------------+
| [out]   | pszSubnetMask  | Subnet mask as string                             |
+---------+----------------+---------------------------------------------------+
| [in]    | iMaxSubnetMask | Maximum length of the subnet mask string          |
+---------+----------------+---------------------------------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1ga58476dd56a31e3e4590f3079a71d73a0:

RTS_BOOL SysSockFdIsset (RTS_HANDLE hSocket, SOCKET_FD_SET *pfs)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Check if a socket is inside of a set.

**Parameters**

+---------+---------+--------------------------------------------------------------------------------+
| [in]    | hSocket | Socket to check. Can be RTS_INVALID_HANDLE to check for an invalid filled set. |
+---------+---------+--------------------------------------------------------------------------------+
| [in]    | pfs     | Socket Set                                                                     |
+---------+---------+--------------------------------------------------------------------------------+

**Returns:**

TRUE if the specified socket is inside the set, FALSE if not

.. _group___sys_socket_itf_1ga872ffb0f3d3de58cc6bad492d6b26e8e:

RTS_RESULT SysSockFdInit (RTS_HANDLE hSocket, SOCKET_FD_SET *pfs)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Add a socket to a socket set.

**Parameters**

+---------+---------+----------------+
| [in]    | hSocket | Socket to add. |
+---------+---------+----------------+
| [in]    | pfs     | Socket Set     |
+---------+---------+----------------+

**Returns:**

error code

.. _group___sys_socket_itf_1gab96fa043b69eca9f1121722131c6de16:

void SysSockFdZero (SOCKET_FD_SET *pfs)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Clear a Socket set.

**Parameters**

+---------+-----+------------+
| [in]    | pfs | Socket Set |
+---------+-----+------------+

.. _group___sys_socket_itf_1gaa992602fbfb135cbb8e1439ad48a9d2b:

SOCK_ADAPTER_INFO* SysSockGetFirstAdapterInfo (RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get adapter information struct of the first network adapter.

**Parameters**

+---------+---------+-----------------------+
| [out]   | pResult | Pointer to error code |
+---------+---------+-----------------------+

**Returns:**

Information struct of first network adapter

.. _group___sys_socket_itf_1ga959799c8f03d346c9578ec85e50cbc5c:

SOCK_ADAPTER_INFO* SysSockGetNextAdapterInfo (SOCK_ADAPTER_INFO *pPrevAdapter, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get adapter information struct of the next network adapter.

**Parameters**

+---------+--------------+------------------------------------------------------------+
| [out]   | pPrevAdapter | Pointer to adapter information struct of previous adapter. |
+---------+--------------+------------------------------------------------------------+
| [out]   | pResult      | Pointer to error code                                      |
+---------+--------------+------------------------------------------------------------+

**Returns:**

Information struct of current network adapter

.. _group___sys_socket_itf_1ga96779e5ea363ffe3eb12e8c196f50348:

RTS_RESULT SysSockSetIpAddressAndNetMask (RTS_WCHAR *pwszAdapterName, INADDR *pIpAddr, INADDR *pNetMask)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set IP address and subnet mask of an adapter. It depends on the device, whether the new ip address and subnet mask is reset during reboot or if it is retained. In general the caller should consider these as volatile. The combination IP address = 0.0.0.0 and subnet mask = 0.0.0.0 can be used to remove the IP address from the adapter. After this there is no IP based communication possible anymore, until a new IP address is set. Replaces the functions :ref:`SysSockSetIPAddress() <group___sys_socket_itf_1gac9df27adc7dee251a49276325cb38c4c>` and :ref:`SysSockSetSubnetMask() <group___sys_socket_itf_1gabb69f4209169d1fcd77f059587927930>` .

**Parameters**

+---------+-----------------+-----------------------------------------------------------------------------+
| [in]    | pwszAdapterName | Adapter name provided by SysSockGetFirstAdapter() / SysSockGetNextAdapter() |
+---------+-----------------+-----------------------------------------------------------------------------+
| [in]    | pIpAddr         | Ip address to set in network byte order.                                    |
+---------+-----------------+-----------------------------------------------------------------------------+
| [in]    | pNetMask        | Subnet mask to set in network byte order.                                   |
+---------+-----------------+-----------------------------------------------------------------------------+

**Returns:**

Error code:

- ERR_PARAMETER: At least one of the passed pointers is NULL.

- ERR_OPERATION_DENIED: Adapter is not in white list or the operation was denied by the event EVT_SysSocket_BeforeSetIpAndMask.

- ERR_NO_OBJECT: Adapter with the specified name does not exist.

- ERR_NO_CHANGE: Adapter have a fix (not changeable) or dynamic (DHCP) ip address.

- ERR_FAILED: Ip adress/subnet mask could not be set.

- ERR_OK: Ip adress/subnet mask was set successfully.

.. _group___sys_socket_itf_1ga3b10789b8104c8ce6e1ab4462c18012b:

RTS_RESULT SysSockSetDefaultGateway (RTS_WCHAR *pwszAdapterName, INADDR *pGatewayAddr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set default gateway address an adapter. It depends on the device, whether the new gateway address is reset during reboot or if it is retained. In general the caller should consider this as volatile. The gateway address = 0.0.0.0 can be used to remove the gateway address from the adapter. After this there is not routing to other subnets possible.

Attention: The default gateway can only be changed if the adapter containing the current default gateway is whitelisted in the CODESYSControl.cfg. This function will not change the default gateway of any other adapter.

**Parameters**

+---------+-----------------+-----------------------------------------------------------------------------+
| [in]    | pwszAdapterName | Adapter name provided by SysSockGetFirstAdapter() / SysSockGetNextAdapter() |
+---------+-----------------+-----------------------------------------------------------------------------+
| [in]    | pGatewayAddr    | Ip address of the gateway to set in network byte order.                     |
+---------+-----------------+-----------------------------------------------------------------------------+

**Returns:**

Error code:

- ERR_PARAMETER: At least one of the passed pointers is NULL.

- ERR_OPERATION_DENIED: Adapter is not in white list or the operation was denied by the event EVT_SysSocket_BeforeSetGateway.

- ERR_NO_OBJECT: Adapter with the specified name does not exist.

- ERR_NO_CHANGE: There is a default gateway set on an adapter that is not whitelisted.

- ERR_FAILED: Default gateway could not be set.

- ERR_OK: Default gateway was set successfully.

.. _group___sys_socket_itf_1gabd0c66f29391fd460120f56e5baa22fa:

RTS_RESULT SysSockGetPeerName (RTS_HANDLE hSocket, SOCKADDRESS *pSockAddr, RTS_I32 *piSockAddrSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the socket address of the peer to which a socket is connected. The SysSockGetPeerName function can be used only on a connected socket.

**Parameters**

+---------+----------------+---------------------------------------------+
| [in]    | hSocket        | Handle to the socket                        |
+---------+----------------+---------------------------------------------+
| [out]   | pSockAddr      | Socket address of the peer                  |
+---------+----------------+---------------------------------------------+
| [inout] | piSockAddrSize | Pointer to size of socket address structure |
+---------+----------------+---------------------------------------------+

**Returns:**

error code

.. _group___sys_socket_itf_1ga9ce1adfc26e46f9047af1c9d49f59b2a:

RTS_RESULT SysSockGetSockName (RTS_HANDLE hSocket, SOCKADDRESS *pSockAddr, RTS_I32 *piSockAddrSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the socket address of the local socket. Usally this function is called to retrieve the local socket address on multihomed hosts or to get the local port number in client implemntations. If the socket is neither connected nor locally bound to an address, the result of the function and the value stored in the object pointed to by pSockAddress is unspecified.

**Parameters**

+---------+----------------+---------------------------------------------+
| [in]    | hSocket        | Handle to the socket                        |
+---------+----------------+---------------------------------------------+
| [out]   | pSockAddr      | Socket address of the local socket          |
+---------+----------------+---------------------------------------------+
| [inout] | piSockAddrSize | Pointer to size of socket address structure |
+---------+----------------+---------------------------------------------+

**Returns:**

error code

.. last line of group.rst template
.. last line of composition.rst template


