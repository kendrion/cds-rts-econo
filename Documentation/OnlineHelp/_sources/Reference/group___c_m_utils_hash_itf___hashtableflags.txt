.. first line of composition.rst template

.. first line of group.rst template

.. _group___c_m_utils_hash_itf___hashtableflags:

================
Hash table flags
================

 :ref:`More... <group___c_m_utils_hash_itf___hashtableflags-details>`

Macros
------

- #define :ref:`CMUTLHASHTABLE_FLAG_ALLOC_TABLE <group___c_m_utils_hash_itf___hashtableflags_1ga0c08419833347ac98fea10a33b0e8443>` 0x00000001

- #define :ref:`CMUTLHASHTABLE_FLAG_INTERRUPT_SAFE <group___c_m_utils_hash_itf___hashtableflags_1gac7122a6ee4bd38cce51d38b06df0b813>` 0x00000002

.. _group___c_m_utils_hash_itf___hashtableflags-details:

Detailed Description
--------------------





Macro Definition Documentation
------------------------------
.. _group___c_m_utils_hash_itf___hashtableflags_1ga0c08419833347ac98fea10a33b0e8443:

#define CMUTLHASHTABLE_FLAG_ALLOC_TABLE 0x00000001
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

INTERNAL USAGE: Table is dynamically allocated from heap

.. _group___c_m_utils_hash_itf___hashtableflags_1gac7122a6ee4bd38cce51d38b06df0b813:

#define CMUTLHASHTABLE_FLAG_INTERRUPT_SAFE 0x00000002
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Can be set by the caller after createing the hash table to specify, that the hash table should be interrupt safe/used from an interrupt handler!

.. last line of group.rst template
.. last line of composition.rst template


