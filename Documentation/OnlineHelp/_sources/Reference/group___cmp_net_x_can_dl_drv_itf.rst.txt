.. first line of composition.rst template

:orphan:

.. first line of group.rst template

.. _group___cmp_net_x_can_dl_drv_itf:

==================
CmpNetXCanDlDrvItf
==================

.. contents::
    :local:
    :depth: 1

Interface of CmpNetXCanDlDrv.

Detailed Description
--------------------

This is the CAA Can Mini Driver for NetX Can Open cards. It is based on the NetX Dl layer.

**Copyright:**

Copyright (c) 2017-2020 CODESYS Development GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Modules
-------

- :ref:`Event parameter <group___cmp_net_x_can_dl_drv_itf___eventparameter>`

- :ref:`Events <group___cmp_net_x_can_dl_drv_itf___events>`

- :ref:`Settings <group___cmp_net_x_can_dl_drv_itf___settings>`

Data Structures
---------------

- struct :ref:`ICmpNetXCanDlDrv_C <struct_i_cmp_net_x_can_dl_drv___c>`

Macros
------

- #define :ref:`USE_NetX_SetupChannel <group___cmp_net_x_can_dl_drv_itf_1gaf7699225acc036d3111d76d20f8c6bfb>` :ref:`PFNETX_SETUPCHANNEL <group___cmp_net_x_can_dl_drv_itf_1ga208983af7e4fa0464bef97fb06977a34>` pfNetX_SetupChannel;

- #define :ref:`EXT_NetX_SetupChannel <group___cmp_net_x_can_dl_drv_itf_1ga7c135feab437b82ec1bad43ca58ffa85>` extern :ref:`PFNETX_SETUPCHANNEL <group___cmp_net_x_can_dl_drv_itf_1ga208983af7e4fa0464bef97fb06977a34>` pfNetX_SetupChannel;

- #define :ref:`GET_NetX_SetupChannel <group___cmp_net_x_can_dl_drv_itf_1ga4a5ab36ade72f455b5e024cf16ab1d0f>` s_pfCMGetAPI2( "NetX_SetupChannel", (RTS_VOID_FCTPTR *)&pfNetX_SetupChannel, (fl), 0, 0)

- #define :ref:`CAL_NetX_SetupChannel <group___cmp_net_x_can_dl_drv_itf_1ga50e7bc3131f0cce01db800ed7c261937>` pfNetX_SetupChannel

- #define :ref:`CHK_NetX_SetupChannel <group___cmp_net_x_can_dl_drv_itf_1gab54fb120f83d408ecb2b1daaa3d06e14>` (pfNetX_SetupChannel != NULL)

- #define :ref:`EXP_NetX_SetupChannel <group___cmp_net_x_can_dl_drv_itf_1gac22fda58a117bac09ca6216ef63325f3>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetX_SetupChannel", (RTS_UINTPTR) :ref:`NetX_SetupChannel <group___cmp_net_x_can_dl_drv_itf_1ga9b8da805ef525a1d21a7b7f0ff71d415>` , 0, 0)

- #define :ref:`ITF_CmpNetXCanDlDrv <group___cmp_net_x_can_dl_drv_itf_1ga69e5569b529c0f904d766b4fb2506e8b>`

- #define :ref:`EXTITF_CmpNetXCanDlDrv <group___cmp_net_x_can_dl_drv_itf_1gaa41c244f538a159dd18aa12c43d88e2c>`

Typedefs
--------

- typedef RTS_RESULT(* :ref:`PFNETX_SETUPCHANNEL <group___cmp_net_x_can_dl_drv_itf_1ga208983af7e4fa0464bef97fb06977a34>`)(unsigned char byNet, int iBoard, int iChannel)

- typedef :ref:`ICmpNetXCanDlDrv_C <struct_i_cmp_net_x_can_dl_drv___c>` :ref:`ICmpNetXCanDlDrv <group___cmp_net_x_can_dl_drv_itf_1ga293e52c6423d2020c52f4d60eb36f751>`

Functions
---------

- RTS_RESULT :ref:`NetX_SetupChannel <group___cmp_net_x_can_dl_drv_itf_1ga9b8da805ef525a1d21a7b7f0ff71d415>` (unsigned char byNet, int iBoard, int iChannel)

Macro Definition Documentation
------------------------------
.. _group___cmp_net_x_can_dl_drv_itf_1gaf7699225acc036d3111d76d20f8c6bfb:

#define USE_NetX_SetupChannel :ref:`PFNETX_SETUPCHANNEL <group___cmp_net_x_can_dl_drv_itf_1ga208983af7e4fa0464bef97fb06977a34>` pfNetX_SetupChannel;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_net_x_can_dl_drv_itf_1ga7c135feab437b82ec1bad43ca58ffa85:

#define EXT_NetX_SetupChannel extern :ref:`PFNETX_SETUPCHANNEL <group___cmp_net_x_can_dl_drv_itf_1ga208983af7e4fa0464bef97fb06977a34>` pfNetX_SetupChannel;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_net_x_can_dl_drv_itf_1ga4a5ab36ade72f455b5e024cf16ab1d0f:

#define GET_NetX_SetupChannel s_pfCMGetAPI2( "NetX_SetupChannel", (RTS_VOID_FCTPTR *)&pfNetX_SetupChannel, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_net_x_can_dl_drv_itf_1ga50e7bc3131f0cce01db800ed7c261937:

#define CAL_NetX_SetupChannel pfNetX_SetupChannel
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_net_x_can_dl_drv_itf_1gab54fb120f83d408ecb2b1daaa3d06e14:

#define CHK_NetX_SetupChannel (pfNetX_SetupChannel != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_net_x_can_dl_drv_itf_1gac22fda58a117bac09ca6216ef63325f3:

#define EXP_NetX_SetupChannel s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetX_SetupChannel", (RTS_UINTPTR) :ref:`NetX_SetupChannel <group___cmp_net_x_can_dl_drv_itf_1ga9b8da805ef525a1d21a7b7f0ff71d415>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_net_x_can_dl_drv_itf_1ga69e5569b529c0f904d766b4fb2506e8b:

#define ITF_CmpNetXCanDlDrv
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_net_x_can_dl_drv_itf_1gaa41c244f538a159dd18aa12c43d88e2c:

#define EXTITF_CmpNetXCanDlDrv
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___cmp_net_x_can_dl_drv_itf_1ga208983af7e4fa0464bef97fb06977a34:

typedef RTS_RESULT( *  PFNETX_SETUPCHANNEL) (unsigned char byNet, int iBoard, int iChannel)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_net_x_can_dl_drv_itf_1ga293e52c6423d2020c52f4d60eb36f751:

typedef ICmpNetXCanDlDrv_C ICmpNetXCanDlDrv
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___cmp_net_x_can_dl_drv_itf_1ga9b8da805ef525a1d21a7b7f0ff71d415:

RTS_RESULT NetX_SetupChannel (unsigned char byNet, int iBoard, int iChannel)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Initializes a netX channel. Afterwards, the netX is passive on the bus. If the firmware is loaded dynamically, this function could be called to initialize the netX channel. The net Id is passed as an parameter with the event EVT_START_NETX_CONFIG, the board and channel number must be evaluated by the customer.

**Parameters**

+---------+----------+-------------------------------------------+
| [in]    | byNet    | CANbus net ID                             |
+---------+----------+-------------------------------------------+
| [in]    | iBoard   | Number of the netX board to initialize.   |
+---------+----------+-------------------------------------------+
| [in]    | iChannel | Number of the netX Channel to initialize. |
+---------+----------+-------------------------------------------+

**Returns:**

Errorcode

.. last line of group.rst template
.. last line of composition.rst template


