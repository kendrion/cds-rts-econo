.. first line of composition.rst template

.. first line of group.rst template

.. _group___cmp_settings_itf:

==============
CmpSettingsItf
==============

Interface of CmpSettings. :ref:`More... <group___cmp_settings_itf-details>`

Modules
-------

- :ref:`EditableFlags <group___cmp_settings_itf___editable_flags>`

- :ref:`Events <group___cmp_settings_itf___events>`

- :ref:`Online services <group___cmp_settings_itf___onlineservices>`

- :ref:`SelectableSettingEntryFlags <group___cmp_settings_itf___selectable_setting_entry_flags>`

- :ref:`SettingFlags <group___cmp_settings_itf___setting_flags>`

- :ref:`Settings <group___cmp_settings_itf___settings>`

- :ref:`Static defines <group___cmp_settings_itf___staticdefines>`

Data Structures
---------------

- struct :ref:`_SelectableSettingEntry <struct___selectable_setting_entry>`

- struct :ref:`_SelectableSetting <struct___selectable_setting>`

- struct :ref:`SettingValue <union_setting_value>`

- struct :ref:`_EditableSetting <struct___editable_setting>`

- struct :ref:`_SettingEntry <struct___setting_entry>`

- struct :ref:`tagsettgbeginupdate_struct <structtagsettgbeginupdate__struct>`

- struct :ref:`tagsettgendupdate_struct <structtagsettgendupdate__struct>`

- struct :ref:`tagsettggetintvalue_struct <structtagsettggetintvalue__struct>`

- struct :ref:`tagsettggetstringvalue_struct <structtagsettggetstringvalue__struct>`

- struct :ref:`tagsettggetwstringvalue_struct <structtagsettggetwstringvalue__struct>`

- struct :ref:`tagsettgremovekey_struct <structtagsettgremovekey__struct>`

- struct :ref:`tagsettgsetintvalue_struct <structtagsettgsetintvalue__struct>`

- struct :ref:`tagsettgsetstringvalue_struct <structtagsettgsetstringvalue__struct>`

- struct :ref:`tagsettgsetwstringvalue_struct <structtagsettgsetwstringvalue__struct>`

- struct :ref:`ICmpSettings_C <struct_i_cmp_settings___c>`

Macros
------

- #define :ref:`ITF_CmpSettings <group___cmp_settings_itf_1ga64ea3c2d56d30b6ecc6536470c373331>`

- #define :ref:`EXTITF_CmpSettings <group___cmp_settings_itf_1gad30a0c68940603f26aaf6fb4e47bc03e>`

Typedefs
--------

- typedef struct :ref:`_SelectableSettingEntry <struct___selectable_setting_entry>` :ref:`SelectableSettingEntry <group___cmp_settings_itf_1gacecd88d3ac4d937333060c61f33119e5>`

- typedef struct :ref:`_SelectableSetting <struct___selectable_setting>` :ref:`SelectableSetting <group___cmp_settings_itf_1gaa357f19e667e0704f9a8a4a587b1b134>`

- typedef struct :ref:`_EditableSetting <struct___editable_setting>` :ref:`EditableSetting <group___cmp_settings_itf_1gabdf4ffcf0d324068327fc47547d76a9a>`

- typedef struct :ref:`_SettingEntry <struct___setting_entry>` :ref:`SettingEntry <group___cmp_settings_itf_1gac110039506bf146e630965a7925af2cd>`

- typedef struct :ref:`tagsettgbeginupdate_struct <structtagsettgbeginupdate__struct>` :ref:`settgbeginupdate_struct <group___cmp_settings_itf_1ga49c970dace927f010cc12fa8e2359cd8>`

- typedef struct :ref:`tagsettgendupdate_struct <structtagsettgendupdate__struct>` :ref:`settgendupdate_struct <group___cmp_settings_itf_1gac48f8e02e70ceeba8096a496be6e30ca>`

- typedef struct :ref:`tagsettggetintvalue_struct <structtagsettggetintvalue__struct>` :ref:`settggetintvalue_struct <group___cmp_settings_itf_1ga06a50d00e609d3bdaaf8334011910031>`

- typedef struct :ref:`tagsettggetstringvalue_struct <structtagsettggetstringvalue__struct>` :ref:`settggetstringvalue_struct <group___cmp_settings_itf_1gaf8f5c20db1b4f4b2785fd3ea78ff79bc>`

- typedef struct :ref:`tagsettggetwstringvalue_struct <structtagsettggetwstringvalue__struct>` :ref:`settggetwstringvalue_struct <group___cmp_settings_itf_1ga2837229feaa26f8d28fcec4d148f0053>`

- typedef struct :ref:`tagsettgremovekey_struct <structtagsettgremovekey__struct>` :ref:`settgremovekey_struct <group___cmp_settings_itf_1ga5ed7167510657423b8a55525c698bb24>`

- typedef struct :ref:`tagsettgsetintvalue_struct <structtagsettgsetintvalue__struct>` :ref:`settgsetintvalue_struct <group___cmp_settings_itf_1ga27bc1372ce37a2301f198eca0529f8b4>`

- typedef struct :ref:`tagsettgsetstringvalue_struct <structtagsettgsetstringvalue__struct>` :ref:`settgsetstringvalue_struct <group___cmp_settings_itf_1ga6c37ee5f078ce12587dd70b68726b2fd>`

- typedef struct :ref:`tagsettgsetwstringvalue_struct <structtagsettgsetwstringvalue__struct>` :ref:`settgsetwstringvalue_struct <group___cmp_settings_itf_1ga919221e6c976d0c3525382c1d19b7827>`

- typedef :ref:`ICmpSettings_C <struct_i_cmp_settings___c>` :ref:`ICmpSettings <group___cmp_settings_itf_1gab38ea2e3be302ed8e8c25f98c1eb8c1a>`

Functions
---------

- void :ref:`settgbeginupdate <group___cmp_settings_itf_1ga1c247b6ac87d1f48e8669882598218c4>` (:ref:`settgbeginupdate_struct <group___cmp_settings_itf_1ga49c970dace927f010cc12fa8e2359cd8>` * p)

- void :ref:`settgendupdate <group___cmp_settings_itf_1gad2bd2b8c0c25988d55e53807eeb4e563>` (:ref:`settgendupdate_struct <group___cmp_settings_itf_1gac48f8e02e70ceeba8096a496be6e30ca>` * p)

- void :ref:`settggetintvalue <group___cmp_settings_itf_1ga058405714f9bc20e18722d3a70380ae6>` (:ref:`settggetintvalue_struct <group___cmp_settings_itf_1ga06a50d00e609d3bdaaf8334011910031>` * p)

- void :ref:`settggetstringvalue <group___cmp_settings_itf_1ga7f9f12abafe9aa41ff83fa41f1b16a98>` (:ref:`settggetstringvalue_struct <group___cmp_settings_itf_1gaf8f5c20db1b4f4b2785fd3ea78ff79bc>` * p)

- void :ref:`settggetwstringvalue <group___cmp_settings_itf_1gaae23386c075dbb861d83a77a89c2a6b7>` (:ref:`settggetwstringvalue_struct <group___cmp_settings_itf_1ga2837229feaa26f8d28fcec4d148f0053>` * p)

- void :ref:`settgremovekey <group___cmp_settings_itf_1ga4def6e66b8e047abe8cf8c4bb15236d8>` (:ref:`settgremovekey_struct <group___cmp_settings_itf_1ga5ed7167510657423b8a55525c698bb24>` * p)

- void :ref:`settgsetintvalue <group___cmp_settings_itf_1gad3a1ec9e6d1c5d1a9f5f573b97b4dc19>` (:ref:`settgsetintvalue_struct <group___cmp_settings_itf_1ga27bc1372ce37a2301f198eca0529f8b4>` * p)

- void :ref:`settgsetstringvalue <group___cmp_settings_itf_1ga28d689092768b2f3aedd39bc61c4254b>` (:ref:`settgsetstringvalue_struct <group___cmp_settings_itf_1ga6c37ee5f078ce12587dd70b68726b2fd>` * p)

- void :ref:`settgsetwstringvalue <group___cmp_settings_itf_1gaa4ce33eff979c2db48ad57761d482a6f>` (:ref:`settgsetwstringvalue_struct <group___cmp_settings_itf_1ga919221e6c976d0c3525382c1d19b7827>` * p)

- RTS_RESULT :ref:`SettgSetDatabaseName <group___cmp_settings_itf_1ga5b13294041c659d3855495a94fec3436>` (char * pszName)

- RTS_RESULT :ref:`SettgGetDatabaseName <group___cmp_settings_itf_1ga21c32c1a063d877edc31b28dad65157c>` (char * pszName, RTS_SIZE nNameLen)

- RTS_RESULT :ref:`SettgBeginUpdate <group___cmp_settings_itf_1ga3144a29b4f6138f5e17cb4f386c55cd8>` (void)

- RTS_RESULT :ref:`SettgEndUpdate <group___cmp_settings_itf_1ga86a918a1605515febd878a121d53e178>` (void)

- RTS_I32 :ref:`SettgGetAccessCounter_ <group___cmp_settings_itf_1ga2ef4c36f8552703c5063003b5c0b0374>` (RTS_RESULT * pResult)

- RTS_RESULT :ref:`SettgSetOptions <group___cmp_settings_itf_1gab9c2e38f44f6e591488164515b029c88>` (int bSplitDatabases)

- RTS_RESULT :ref:`SettgIsOptionSplitDatabases <group___cmp_settings_itf_1gaccc3bbbbee6652cace0fd8edbcf5ce8d>` (void)

- RTS_RESULT :ref:`SettgGetIntValue <group___cmp_settings_itf_1ga800174c932098dfd6187bee4b301582d>` (const char * pszComponent, const char * pszKey, RTS_I32 * piValue, int iDefault, int bCached)

- RTS_RESULT :ref:`SettgSetIntValue <group___cmp_settings_itf_1ga0826837193affcc9df43a85e3dbe1ab7>` (const char * pszComponent, const char * pszKey, RTS_I32 iValue, int iBase)

- RTS_RESULT :ref:`SettgGetStringValue <group___cmp_settings_itf_1gaefe39b5f3acb29bbb0e08a61edbbc9be>` (const char * pszComponent, const char * pszKey, char * pszValue, RTS_I32 * piLen, char * pszDefault, int bCached)

- RTS_RESULT :ref:`SettgSetStringValue <group___cmp_settings_itf_1ga9ab4d6ec4843927416dcf292f1845edc>` (const char * pszComponent, const char * pszKey, char * pszValue, RTS_I32 iLen)

- RTS_RESULT :ref:`SettgGetWStringValue <group___cmp_settings_itf_1ga77c04e408cacfe28972f2599d5dc7b77>` (const char * pszComponent, const char * pszKey, RTS_WCHAR * pwszValue, RTS_I32 * piLen, RTS_WCHAR * pwszDefault, int bCached)

- RTS_RESULT :ref:`SettgSetWStringValue <group___cmp_settings_itf_1ga3762379c74bf03d220be767f4421e302>` (const char * pszComponent, const char * pszKey, RTS_WCHAR * pwszValue, RTS_I32 iLen)

- RTS_RESULT :ref:`SettgRemoveKey <group___cmp_settings_itf_1ga0c2e6a08f5072caea700a809f04d437b>` (const char * pszComponent, const char * pszKey)

- RTS_RESULT :ref:`SettgClearComponent <group___cmp_settings_itf_1ga06ff561dfa54f44fa423c16bc2519837>` (const char * pszComponent)

.. _group___cmp_settings_itf-details:

Detailed Description
--------------------

Interface of CmpSettings.

Interface for the settings component. The settings component can have different backend components, to realise different sources for the settings (e.g. ini-File, hardcoded, XML, etc.).

**Copyright:**

Copyright (c) 2017-2018 CODESYS GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Macro Definition Documentation
------------------------------
.. _group___cmp_settings_itf_1ga64ea3c2d56d30b6ecc6536470c373331:

#define ITF_CmpSettings
^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_settings_itf_1gad30a0c68940603f26aaf6fb4e47bc03e:

#define EXTITF_CmpSettings
^^^^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___cmp_settings_itf_1gacecd88d3ac4d937333060c61f33119e5:

typedef struct _SelectableSettingEntry  SelectableSettingEntry
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Entry of one slectable setting.

.. _group___cmp_settings_itf_1gaa357f19e667e0704f9a8a4a587b1b134:

typedef struct _SelectableSetting  SelectableSetting
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This structure stores a single entry of a selectable setting. pList is an array of selctable entries!

.. _group___cmp_settings_itf_1gabdf4ffcf0d324068327fc47547d76a9a:

typedef struct _EditableSetting  EditableSetting
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This structure is to transmit an editable setting.

.. _group___cmp_settings_itf_1gac110039506bf146e630965a7925af2cd:

typedef struct _SettingEntry  SettingEntry
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Entry of one complete setting.

.. _group___cmp_settings_itf_1ga49c970dace927f010cc12fa8e2359cd8:

typedef struct tagsettgbeginupdate_struct  settgbeginupdate_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION BEGIN

| Function to block writing settings to database file until |SettgEndUpdate| is called! But the settings cache is updated. | NOTE: | - Funcion can be called nested, so only at the last call of |SettgEndUpdate|, the database is written! | - Always call :ref:`SettgBeginUpdate() <group___cmp_settings_itf_1ga3144a29b4f6138f5e17cb4f386c55cd8>` and :ref:`SettgEndUpdate() <group___cmp_settings_itf_1ga86a918a1605515febd878a121d53e178>` symmetric!!! :return: Runtime system error code (see CmpErrors.library).

.. _group___cmp_settings_itf_1gac48f8e02e70ceeba8096a496be6e30ca:

typedef struct tagsettgendupdate_struct  settgendupdate_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Function to initiate writing settings to database file, if settings are modified after |SettgBeginUpdate| was called. | NOTE: | - Funcion can be called nested, so only at the last call of |SettgEndUpdate|, the database is written! | - Always call |SettgBeginUpdate| and |SettgEndUpdate| symmetric!!! :return: Runtime system error code (see CmpErrors.library).

.. _group___cmp_settings_itf_1ga06a50d00e609d3bdaaf8334011910031:

typedef struct tagsettggetintvalue_struct  settggetintvalue_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Get an integer value from settings :return: Runtime system error code (see CmpErrors.library).

.. _group___cmp_settings_itf_1gaf8f5c20db1b4f4b2785fd3ea78ff79bc:

typedef struct tagsettggetstringvalue_struct  settggetstringvalue_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Get a string value from settings :return: Runtime system error code (see CmpErrors.library).

.. _group___cmp_settings_itf_1ga2837229feaa26f8d28fcec4d148f0053:

typedef struct tagsettggetwstringvalue_struct  settggetwstringvalue_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Get a WSTRING value from settings :return: Runtime system error code (see CmpErrors.library).

.. _group___cmp_settings_itf_1ga5ed7167510657423b8a55525c698bb24:

typedef struct tagsettgremovekey_struct  settgremovekey_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Remove the specified key :return: Runtime system error code (see CmpErrors.library).

.. _group___cmp_settings_itf_1ga27bc1372ce37a2301f198eca0529f8b4:

typedef struct tagsettgsetintvalue_struct  settgsetintvalue_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Write an integer value to settings :return: Runtime system error code (see CmpErrors.library).

.. _group___cmp_settings_itf_1ga6c37ee5f078ce12587dd70b68726b2fd:

typedef struct tagsettgsetstringvalue_struct  settgsetstringvalue_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Write a string value to settings :return: Runtime system error code (see CmpErrors.library).

.. _group___cmp_settings_itf_1ga919221e6c976d0c3525382c1d19b7827:

typedef struct tagsettgsetwstringvalue_struct  settgsetwstringvalue_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| Write a WSTRING value to settings :return: Runtime system error code (see CmpErrors.library).

.. _group___cmp_settings_itf_1gab38ea2e3be302ed8e8c25f98c1eb8c1a:

typedef ICmpSettings_C ICmpSettings
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___cmp_settings_itf_1ga1c247b6ac87d1f48e8669882598218c4:

void settgbeginupdate (settgbeginupdate_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_settings_itf_1gad2bd2b8c0c25988d55e53807eeb4e563:

void settgendupdate (settgendupdate_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_settings_itf_1ga058405714f9bc20e18722d3a70380ae6:

void settggetintvalue (settggetintvalue_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_settings_itf_1ga7f9f12abafe9aa41ff83fa41f1b16a98:

void settggetstringvalue (settggetstringvalue_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_settings_itf_1gaae23386c075dbb861d83a77a89c2a6b7:

void settggetwstringvalue (settggetwstringvalue_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_settings_itf_1ga4def6e66b8e047abe8cf8c4bb15236d8:

void settgremovekey (settgremovekey_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_settings_itf_1gad3a1ec9e6d1c5d1a9f5f573b97b4dc19:

void settgsetintvalue (settgsetintvalue_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_settings_itf_1ga28d689092768b2f3aedd39bc61c4254b:

void settgsetstringvalue (settgsetstringvalue_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_settings_itf_1gaa4ce33eff979c2db48ad57761d482a6f:

void settgsetwstringvalue (settgsetwstringvalue_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_settings_itf_1ga5b13294041c659d3855495a94fec3436:

RTS_RESULT SettgSetDatabaseName (char *pszName)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION END

Set database name for all settings

**Parameters**

+---------+---------+------------------------------------------+
| [in]    | pszName | Name of settings file. Can be.cfg or.ini |
+---------+---------+------------------------------------------+

**Returns:**

Error code

.. _group___cmp_settings_itf_1ga21c32c1a063d877edc31b28dad65157c:

RTS_RESULT SettgGetDatabaseName (char *pszName, RTS_SIZE nNameLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get database name for all settings

**Parameters**

+---------+----------+------------------------------------------+
| [out]   | pszName  | Name of settings file. Can be.cfg or.ini |
+---------+----------+------------------------------------------+
| [in]    | nNameLen | Lenght of the name buffer in bytes       |
+---------+----------+------------------------------------------+

**Returns:**

Error code

.. _group___cmp_settings_itf_1ga3144a29b4f6138f5e17cb4f386c55cd8:

RTS_RESULT SettgBeginUpdate (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to block writing settings to database file until :ref:`SettgEndUpdate() <group___cmp_settings_itf_1ga86a918a1605515febd878a121d53e178>` is called! But the settings cache is updated. NOTE:

- Funcion can be called nested, so only at the last call of :ref:`SettgEndUpdate() <group___cmp_settings_itf_1ga86a918a1605515febd878a121d53e178>` , the database is written!

- Always call :ref:`SettgBeginUpdate() <group___cmp_settings_itf_1ga3144a29b4f6138f5e17cb4f386c55cd8>` and :ref:`SettgEndUpdate() <group___cmp_settings_itf_1ga86a918a1605515febd878a121d53e178>` symmetric!!!

**Returns:**

Error code

**Return values**

+--------+------------+
| ERR_OK | Task found |
+--------+------------+

.. _group___cmp_settings_itf_1ga86a918a1605515febd878a121d53e178:

RTS_RESULT SettgEndUpdate (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to initiate writing settings to database file, if settings are modified after :ref:`SettgBeginUpdate() <group___cmp_settings_itf_1ga3144a29b4f6138f5e17cb4f386c55cd8>` was called.

NOTE:

- Funcion can be called nested, so only at the last call of :ref:`SettgEndUpdate() <group___cmp_settings_itf_1ga86a918a1605515febd878a121d53e178>` , the database is written!

- Always call :ref:`SettgBeginUpdate() <group___cmp_settings_itf_1ga3144a29b4f6138f5e17cb4f386c55cd8>` and :ref:`SettgEndUpdate() <group___cmp_settings_itf_1ga86a918a1605515febd878a121d53e178>` symmetric!!!

**Returns:**

Error code

**Return values**

+--------------------+---------------------------------------------------------------------------------------------------------------------------+
| ERR_OK             | Database could be written                                                                                                 |
+--------------------+---------------------------------------------------------------------------------------------------------------------------+
| RTS_FAILED         | Database could not be written                                                                                             |
+--------------------+---------------------------------------------------------------------------------------------------------------------------+
| ERR_PENDING        | We still wait for the last call of :ref:`SettgEndUpdate() <group___cmp_settings_itf_1ga86a918a1605515febd878a121d53e178>` |
+--------------------+---------------------------------------------------------------------------------------------------------------------------+
| ERR_NOTINITIALIZED | :ref:`SettgBeginUpdate() <group___cmp_settings_itf_1ga3144a29b4f6138f5e17cb4f386c55cd8>` not called before                |
+--------------------+---------------------------------------------------------------------------------------------------------------------------+

.. _group___cmp_settings_itf_1ga2ef4c36f8552703c5063003b5c0b0374:

RTS_I32 SettgGetAccessCounter_ (RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Internal function to get the accesscounter value which is incremented by every call of :ref:`SettgBeginUpdate() <group___cmp_settings_itf_1ga3144a29b4f6138f5e17cb4f386c55cd8>` and is decremented by every call of :ref:`SettgEndUpdate() <group___cmp_settings_itf_1ga86a918a1605515febd878a121d53e178>` .

**Parameters**

+---------+---------+-----------------------+
| [out]   | pResult | Pointer to error code |
+---------+---------+-----------------------+

**Return values**

+--------+---------------------------------+
| ERR_OK | Access counter can be retrieved |
+--------+---------------------------------+

**Returns:**

Actual accesscounter value

.. _group___cmp_settings_itf_1gab9c2e38f44f6e591488164515b029c88:

RTS_RESULT SettgSetOptions (int bSplitDatabases)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Set optional settings

**Parameters**

+---------+--------------------+---------------------------------------------------------------------------+
| [in]    | bSeparateDatabases | If bSeparateDatabases=1, split settings file into each file per component |
+---------+--------------------+---------------------------------------------------------------------------+

**Returns:**

ERR_OK

.. _group___cmp_settings_itf_1gaccc3bbbbee6652cace0fd8edbcf5ce8d:

RTS_RESULT SettgIsOptionSplitDatabases (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Is option set to split all settings databases into each file per component
**Returns:**

ERR_OK

.. _group___cmp_settings_itf_1ga800174c932098dfd6187bee4b301582d:

RTS_RESULT SettgGetIntValue (const char *pszComponent, const char *pszKey, RTS_I32 *piValue, int iDefault, int bCached)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get an integer value from settings

**Parameters**

+---------+--------------+-------------------------------------------------------------------------------------------------------+
| [in]    | pszComponent | Name of component                                                                                     |
+---------+--------------+-------------------------------------------------------------------------------------------------------+
| [in]    | pszKey       | Name of key                                                                                           |
+---------+--------------+-------------------------------------------------------------------------------------------------------+
| [inout] | piValue      | Pointer to value for result                                                                           |
+---------+--------------+-------------------------------------------------------------------------------------------------------+
| [in]    | iDefault     | Default value to set, if key not found                                                                |
+---------+--------------+-------------------------------------------------------------------------------------------------------+
| [in]    | bCached      | Flag, if value should be read cached or direct from file (CMPSETTINGS_CACHED, CMPSETTINGS_NOT_CACHED) |
+---------+--------------+-------------------------------------------------------------------------------------------------------+

**Returns:**

ERR_OK

ERR_FAILED: Key not found

.. _group___cmp_settings_itf_1ga0826837193affcc9df43a85e3dbe1ab7:

RTS_RESULT SettgSetIntValue (const char *pszComponent, const char *pszKey, RTS_I32 iValue, int iBase)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Write an integer value to settings

**Parameters**

+---------+--------------+--------------------------------------------+
| [in]    | pszComponent | Name of component                          |
+---------+--------------+--------------------------------------------+
| [in]    | pszKey       | Name of key                                |
+---------+--------------+--------------------------------------------+
| [in]    | iValue       | Value to write                             |
+---------+--------------+--------------------------------------------+
| [in]    | iBase        | 2=Base 2, 10=Decimal values, 16=Hex values |
+---------+--------------+--------------------------------------------+

**Returns:**

ERR_OK

.. _group___cmp_settings_itf_1gaefe39b5f3acb29bbb0e08a61edbbc9be:

RTS_RESULT SettgGetStringValue (const char *pszComponent, const char *pszKey, char *pszValue, RTS_I32 *piLen, char *pszDefault, int bCached)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get a string value from settings

The following parameter sets are typical use cases:

- pszValue = NULL, piLen = NULL: Check if the setting exists (ERR_OK) or not (ERR_FAILED).

- pszValue = NULL, piLen != NULL: Check if the setting exists (ERR_OK) or not (ERR_FAILED) and retrieve the needed buffer size to read the setting or the default value (including NUL termination).

- pszValue != NULL, piLen != NULL: Read the setting (or default value). If ERR_BUFFERSIZE is returned, the buffer was too small regardless of whether the setting or the default value was read. Thus in this case there is no indication, if the setting exists or not.

**Parameters**

+---------+--------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pszComponent | Name of component                                                                                                                                                 |
+---------+--------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pszKey       | Name of key                                                                                                                                                       |
+---------+--------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pszValue     | Pointer to value for result. Can be NULL to get the needed buffer length for the value (including the NUL ending).                                                |
+---------+--------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | piLen        | Max length of string value as IN and number of copied characters excluding the NUL ending as OUT. If pszValue is NULL, then the needed buffer length is returned. |
+---------+--------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pszDefault   | Default value to set, if key not found                                                                                                                            |
+---------+--------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | bCached      | Flag, if value should be read cached or direct from file (CMPSETTINGS_CACHED, CMPSETTINGS_NOT_CACHED)                                                             |
+---------+--------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

ERR_OK

ERR_PARAMETER: Invalid parameter given

ERR_BUFFERSIZE: Buffer size is not sufficient to carry out the complete key; only a part is returned.

ERR_FAILED: Key not found

.. _group___cmp_settings_itf_1ga9ab4d6ec4843927416dcf292f1845edc:

RTS_RESULT SettgSetStringValue (const char *pszComponent, const char *pszKey, char *pszValue, RTS_I32 iLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Write a string value to settings

**Parameters**

+---------+--------------+----------------------------------------------------+
| [in]    | pszComponent | Name of component                                  |
+---------+--------------+----------------------------------------------------+
| [in]    | pszKey       | Name of key                                        |
+---------+--------------+----------------------------------------------------+
| [in]    | pszValue     | Pointer to write value                             |
+---------+--------------+----------------------------------------------------+
| [in]    | iLen         | Length of string to write excluding the NUL ending |
+---------+--------------+----------------------------------------------------+

**Returns:**

ERR_OK: Success

ERR_PARAMETER: Invalid parameter given

ERR_NOTINITIALIZED: Component has not been initialized yet

ERR_NOMEMORY: Not enough memory to handle the settings cache

ERR_NOT_SUPPORTED: Unsupported character in key value: '=', '[', ']' or control character 0x00-0x1F, 0x7F

ERR_NO_ACCESS_RIGHTS: No write access rights to corresponding settings file

ERR_FAILED: Any other reason for failure

.. _group___cmp_settings_itf_1ga77c04e408cacfe28972f2599d5dc7b77:

RTS_RESULT SettgGetWStringValue (const char *pszComponent, const char *pszKey, RTS_WCHAR *pwszValue, RTS_I32 *piLen, RTS_WCHAR *pwszDefault, int bCached)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get a WSTRING value from settings. The storage format is conform to UTF-16, that means one character consists of 2 byte values like "\ab\cd". Plain ASCII characters can also be represented in a mixed way in order to keep the readability of the string, e.g. "a\00". The value is interpreted depending on the target byteorder, e.g:

- INTEL: NodeNameUnicode="T\00e\00s\00t\00"

- MOTOROLA: NodeNameUnicode="\00T\00e\00s\00t" Example: The unicode character 'DEGREE CELSIUS' (U+2103) is stored as

- INTEL: "\03\21"

- MOTOROLA: "\21\03" The following parameter sets are typical use cases:

- pwszValue = NULL, piLen = NULL: Check if the setting exists (ERR_OK) or not (ERR_FAILED).

- pwszValue = NULL, piLen != NULL: Check if the setting exists (ERR_OK) or not (ERR_FAILED) and retrieve the needed buffer size to read the setting or the default value (in WSTRING characters including NUL termination).

- pwszValue != NULL, piLen != NULL: Read the setting (or default value). If ERR_BUFFERSIZE is returned, the buffer was too small regardless of whether the setting or the default value was read. Thus in this case there is no indication, if the setting exists or not.

**Parameters**

+---------+--------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pszComponent | Name of component                                                                                                                                                                                       |
+---------+--------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pszKey       | Name of key                                                                                                                                                                                             |
+---------+--------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | pwszValue    | Pointer to value for result. Can be NULL to get the needed buffer length for the value (including the NUL ending).                                                                                      |
+---------+--------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [inout] | piLen        | Max length of buffer in WSTRING characters (not bytes!) as IN and number of copied WSTRING characters excluding the NUL ending as OUT. If pwszValue is NULL, then the needed buffer length is returned. |
+---------+--------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pwszDefault  | Default value to set, if key not found                                                                                                                                                                  |
+---------+--------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | bCached      | Flag, if value should be read cached or direct from file (CMPSETTINGS_CACHED, CMPSETTINGS_NOT_CACHED)                                                                                                   |
+---------+--------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

ERR_OK

ERR_PARAMETER: Invalid parameter given

ERR_BUFFERSIZE: Buffer size is not sufficient to carry out the complete setting or default value; only a part is returned.

ERR_FAILED: Key not found

.. _group___cmp_settings_itf_1ga3762379c74bf03d220be767f4421e302:

RTS_RESULT SettgSetWStringValue (const char *pszComponent, const char *pszKey, RTS_WCHAR *pwszValue, RTS_I32 iLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Write a WSTRING value to settings. The storage format is conform to UTF-16, that means one character consists of 2 byte values like "\ab\cd". Plain ASCII characters can also be represented in a mixed way in order to keep the readability of the string, e.g. "a\00". The value is interpreted depending on the target byteorder, e.g:

- INTEL: NodeNameUnicode="T\00e\00s\00t\00"

- MOTOROLA: NodeNameUnicode="\00T\00e\00s\00t" Example: The unicode character 'DEGREE CELSIUS' (U+2103) is stored as

- INTEL: "\03\21"

- MOTOROLA: "\21\03"

**Parameters**

+---------+--------------+--------------------------------------------------------------------------------------+
| [in]    | pszComponent | Name of component                                                                    |
+---------+--------------+--------------------------------------------------------------------------------------+
| [in]    | pszKey       | Name of key                                                                          |
+---------+--------------+--------------------------------------------------------------------------------------+
| [in]    | pszValue     | Pointer to write value                                                               |
+---------+--------------+--------------------------------------------------------------------------------------+
| [in]    | iLen         | Length of string in WSTRING characters (not bytes!) to write without terminating NUL |
+---------+--------------+--------------------------------------------------------------------------------------+

**Returns:**

ERR_OK

.. _group___cmp_settings_itf_1ga0c2e6a08f5072caea700a809f04d437b:

RTS_RESULT SettgRemoveKey (const char *pszComponent, const char *pszKey)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Remove the specified key

**Parameters**

+---------+--------------+-------------------+
| [in]    | pszComponent | Name of component |
+---------+--------------+-------------------+
| [in]    | pszKey       | Name of key       |
+---------+--------------+-------------------+

**Returns:**

ERR_OK

.. _group___cmp_settings_itf_1ga06ff561dfa54f44fa423c16bc2519837:

RTS_RESULT SettgClearComponent (const char *pszComponent)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Clear the specified component by deleting all keys

**Parameters**

+---------+------------+-----------------------+
| [in]    | pszSection | Name of the component |
+---------+------------+-----------------------+

**Returns:**

ERR_OK

.. last line of group.rst template
.. last line of composition.rst template


