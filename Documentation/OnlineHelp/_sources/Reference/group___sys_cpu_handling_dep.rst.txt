.. first line of composition.rst template

:orphan:

.. first line of group.rst template

.. _group___sys_cpu_handling_dep:

=================
SysCpuHandlingDep
=================

.. contents::
    :local:
    :depth: 1



Detailed Description
--------------------

System component that allows access to CPU specific features.

**Copyright:**

Copyright (c) 2017-2020 CODESYS Development GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Implemented interfaces
----------------------

- :ref:`SysCpuHandlingItf <group___sys_cpu_handling_itf>`

Macros
------

- #define :ref:`COMPONENT_NAME <group___sys_cpu_handling_dep_1ga9146ade7ce24e3db226a973a59063892>` "SysCpuHandling" COMPONENT_NAME_POSTFIX

- #define :ref:`COMPONENT_ID <group___sys_cpu_handling_dep_1ga45b6c77684c03f79ca832eb02cee7377>` ADDVENDORID( :ref:`CMP_VENDORID <group___sys_window_test_dep_1ga1b1930a594601ff31cf10fcadaea31b7>` , CMPID_SysCpuHandling)

- #define :ref:`COMPONENT_NAME_UNQUOTED <group___sys_cpu_handling_dep_1gac87b9ce4d97c4f98781938894a19ed33>` SysCpuHandling

- #define :ref:`CMP_VERSION <group___sys_cpu_handling_dep_1ga7dc0a9c459cacceb49e5d4994f494043>` UINT32_C(0x03051000)

- #define :ref:`CMP_VERSION_STRING <group___sys_cpu_handling_dep_1ga0af8d7463f0d85816e0335323a8d8506>` "3.5.16.0"

- #define :ref:`CMP_VERSION_RC <group___sys_cpu_handling_dep_1gad18f2a738ac04ae9743e5b6bbd75f92a>` 3,5,16,0

- #define :ref:`CMP_VENDORID <group___sys_cpu_handling_dep_1ga1b1930a594601ff31cf10fcadaea31b7>` RTS_VENDORID_3S

- #define :ref:`SYSCPUATOMICADD_CAS <group___sys_cpu_handling_dep_1gaeace868fc9fd6edd6e0bd439ae23abee>` do { \
RTS_I32 iValue; \
RTS_RESULT Result = ERR_FAILED; \
do \
{ \
iValue = *piValue; \
SYS_ATOMIC_COMPARE_AND_SWAP(piValue, iValue + nSum, iValue, Result); \
} while (Result != ERR_OK); \
RTS_SETRESULT(pResult, ERR_OK); \
iResult = iValue + nSum; \
} while(0)

- #define :ref:`SYSCPUATOMICADD_LOCK <group___sys_cpu_handling_dep_1gaaa9e17c42d6909e213bff1cb6633c0ac>` do { \
SYS_INT_PARAM param; \
SYS_INT_LOCK(param); \
iResult = *piValue += nSum; \
SYS_INT_UNLOCK(param);	\
RTS_SETRESULT(pResult, ERR_OK); \
} while(0)

- #define :ref:`SYSCPUTESTANDSETBITININT <group___sys_cpu_handling_dep_1ga74553a21f2988884a25a9f0d543ea95b>`

- #define :ref:`SYSCPUTESTANDSETBIT_CAS <group___sys_cpu_handling_dep_1gab797b986c5ef7d5d404a5651f443c0c7>` do { \
RTS_INT *piAlign; \
RTS_SIZE siBitAligned; \
\
SysCpuTestAndSetBit_AlignPtrInt(pMemory, siLen, siBit, &piAlign, &siBitAligned); \
\
:ref:`SYSCPUTESTANDSETBITININT <group___sys_cpu_handling_dep_1ga74553a21f2988884a25a9f0d543ea95b>` (piAlign, siBitAligned, bSet, Result); \
} while(0)

- #define :ref:`SYSCPUTESTANDSETBIT_GENERIC_GETBYTE <group___sys_cpu_handling_dep_1ga90ef763f5286885984dbaf5a83b81e03>` ((unsigned char *)pAddress + iBit/8)

- #define :ref:`SYSCPUTESTANDSETBIT_GENERIC <group___sys_cpu_handling_dep_1ga11d09e673c49ec6aa3deaca186458e26>` do { \
unsigned char *pByte; \
if (pAddress == NULL) \
{ \
Result = ERR_PARAMETER; \
break; \
} \
\
if (iBit >= nLen*CHAR_BIT) \
{ \
Result = ERR_PARAMETER; \
break; \
} \
pByte = :ref:`SYSCPUTESTANDSETBIT_GENERIC_GETBYTE <group___sys_cpu_handling_dep_1ga90ef763f5286885984dbaf5a83b81e03>` (pAddress, nLen, iBit); \
iBit %= 8; \
if ((((*pByte)>>iBit) & 0x1) == bSet) \
{ \
Result = ERR_FAILED; \
break; \
} \
\
*pByte = (unsigned char)((*pByte & ~(unsigned char)(0x1<<iBit)) | (unsigned char)(bSet<<iBit)); \
Result = ERR_OK; \
} while(0)

- #define :ref:`SYSCPUTESTANDSETBIT_LOCK <group___sys_cpu_handling_dep_1ga73f2ad504abd3b9edbcc5a15db8f003d>` do { \
if ( :ref:`CHK_SysIntEnableAll <group___sys_int_itf_1ga3e8c2c9020f05f858bd54ed89de0a9a7>` && :ref:`CHK_SysIntDisableAll <group___sys_int_itf_1gaabad022e148253b6c82d7c480352bc3a>` ) \
{ \
RTS_UINTPTR param; \
\
:ref:`CAL_SysIntDisableAll <group___sys_int_itf_1ga2a9dcead16b117dff26df5a4b5f7ddda>` (&param); \
:ref:`SYSCPUTESTANDSETBIT_GENERIC <group___sys_cpu_handling_dep_1ga11d09e673c49ec6aa3deaca186458e26>` (pAddress, nLen, iBit, bSet, Result); \
:ref:`CAL_SysIntEnableAll <group___sys_int_itf_1gaabc22809e3ef0dc1ac519810e2465a99>` (&param); \
} \
Result = ERR_NOT_SUPPORTED; \
} while(0)

Functions
---------

- RTS_RESULT :ref:`SysCpuTestAndSetBitBase <group___sys_cpu_handling_dep_1ga93e3bc2170f7adfea57efeb201dcf452>` (void * pAddress, int nLen, int iBit, int bSet)

Macro Definition Documentation
------------------------------
.. _group___sys_cpu_handling_dep_1ga9146ade7ce24e3db226a973a59063892:

#define COMPONENT_NAME "SysCpuHandling" COMPONENT_NAME_POSTFIX
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_dep_1ga45b6c77684c03f79ca832eb02cee7377:

#define COMPONENT_ID ADDVENDORID( :ref:`CMP_VENDORID <group___sys_window_test_dep_1ga1b1930a594601ff31cf10fcadaea31b7>` , CMPID_SysCpuHandling)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_dep_1gac87b9ce4d97c4f98781938894a19ed33:

#define COMPONENT_NAME_UNQUOTED SysCpuHandling
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_dep_1ga7dc0a9c459cacceb49e5d4994f494043:

#define CMP_VERSION UINT32_C(0x03051000)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_dep_1ga0af8d7463f0d85816e0335323a8d8506:

#define CMP_VERSION_STRING "3.5.16.0"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_dep_1gad18f2a738ac04ae9743e5b6bbd75f92a:

#define CMP_VERSION_RC 3,5,16,0
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_dep_1ga1b1930a594601ff31cf10fcadaea31b7:

#define CMP_VENDORID RTS_VENDORID_3S
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_dep_1gaeace868fc9fd6edd6e0bd439ae23abee:

#define SYSCPUATOMICADD_CAS
^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Value:**

.. parsed-literal::

    do { \\
    RTS_I32 iValue; \\
    RTS_RESULT Result = ERR_FAILED; \\
    do \\
    { \\
    iValue = *piValue; \\
    SYS_ATOMIC_COMPARE_AND_SWAP(piValue, iValue + nSum, iValue, Result); \\
    } while (Result != ERR_OK); \\
    RTS_SETRESULT(pResult, ERR_OK); \\
    iResult = iValue + nSum; \\
    } while(0)

.. _group___sys_cpu_handling_dep_1gaaa9e17c42d6909e213bff1cb6633c0ac:

#define SYSCPUATOMICADD_LOCK
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Value:**

.. parsed-literal::

    do { \\
    SYS_INT_PARAM param; \\
    SYS_INT_LOCK(param); \\
    iResult = *piValue += nSum; \\
    SYS_INT_UNLOCK(param);	\\
    RTS_SETRESULT(pResult, ERR_OK); \\
    } while(0)

.. _group___sys_cpu_handling_dep_1ga74553a21f2988884a25a9f0d543ea95b:

#define SYSCPUTESTANDSETBITININT
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_dep_1gab797b986c5ef7d5d404a5651f443c0c7:

#define SYSCPUTESTANDSETBIT_CAS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Value:**

.. parsed-literal::

    do { \\
    RTS_INT *piAlign; \\
    RTS_SIZE siBitAligned; \\
    \\
    SysCpuTestAndSetBit_AlignPtrInt(pMemory, siLen, siBit, &piAlign, &siBitAligned); \\
    \\
    :ref:`SYSCPUTESTANDSETBITININT <group___sys_cpu_handling_dep_1ga74553a21f2988884a25a9f0d543ea95b>` (piAlign, siBitAligned, bSet, Result); \\
    } while(0)

.. _group___sys_cpu_handling_dep_1ga90ef763f5286885984dbaf5a83b81e03:

#define SYSCPUTESTANDSETBIT_GENERIC_GETBYTE ((unsigned char *)pAddress + iBit/8)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_handling_dep_1ga11d09e673c49ec6aa3deaca186458e26:

#define SYSCPUTESTANDSETBIT_GENERIC
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Value:**

.. parsed-literal::

    do { \\
    unsigned char *pByte; \\
    if (pAddress == NULL) \\
    { \\
    Result = ERR_PARAMETER; \\
    break; \\
    } \\
    \\
    if (iBit >= nLen*CHAR_BIT) \\
    { \\
    Result = ERR_PARAMETER; \\
    break; \\
    } \\
    pByte = :ref:`SYSCPUTESTANDSETBIT_GENERIC_GETBYTE <group___sys_cpu_handling_dep_1ga90ef763f5286885984dbaf5a83b81e03>` (pAddress, nLen, iBit); \\
    iBit %= 8; \\
    if ((((*pByte)>>iBit) & 0x1) == bSet) \\
    { \\
    Result = ERR_FAILED; \\
    break; \\
    } \\
    \\
    *pByte = (unsigned char)((*pByte & ~(unsigned char)(0x1<<iBit)) | (unsigned char)(bSet<<iBit)); \\
    Result = ERR_OK; \\
    } while(0)

.. _group___sys_cpu_handling_dep_1ga73f2ad504abd3b9edbcc5a15db8f003d:

#define SYSCPUTESTANDSETBIT_LOCK
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Value:**

.. parsed-literal::

    do { \\
    if ( :ref:`CHK_SysIntEnableAll <group___sys_int_itf_1ga3e8c2c9020f05f858bd54ed89de0a9a7>` && :ref:`CHK_SysIntDisableAll <group___sys_int_itf_1gaabad022e148253b6c82d7c480352bc3a>` ) \\
    { \\
    RTS_UINTPTR param; \\
    \\
    :ref:`CAL_SysIntDisableAll <group___sys_int_itf_1ga2a9dcead16b117dff26df5a4b5f7ddda>` (&param); \\
    :ref:`SYSCPUTESTANDSETBIT_GENERIC <group___sys_cpu_handling_dep_1ga11d09e673c49ec6aa3deaca186458e26>` (pAddress, nLen, iBit, bSet, Result); \\
    :ref:`CAL_SysIntEnableAll <group___sys_int_itf_1gaabc22809e3ef0dc1ac519810e2465a99>` (&param); \\
    } \\
    Result = ERR_NOT_SUPPORTED; \\
    } while(0)

Function Documentation
----------------------

.. _group___sys_cpu_handling_dep_1ga93e3bc2170f7adfea57efeb201dcf452:

RTS_RESULT SysCpuTestAndSetBitBase (void *pAddress, int nLen, int iBit, int bSet)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. last line of group.rst template
.. last line of composition.rst template


