.. first line of composition.rst template

.. first line of group.rst template

.. _group___cmp_hilscher_c_i_f_x_itf___events:

======
Events
======

 :ref:`More... <group___cmp_hilscher_c_i_f_x_itf___events-details>`

Macros
------

- #define :ref:`EVT_DOWNLOAD_PROGRESS <group___cmp_hilscher_c_i_f_x_itf___events_1ga216a3c82b682f1f2d6cd18b51a93ead1>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 1)

- #define :ref:`EVT_UPLOAD_PROGRESS <group___cmp_hilscher_c_i_f_x_itf___events_1gad7d4fcf14d21c087dbca715f64c86b52>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 2)

- #define :ref:`EVT_PACKET_UNHANDLED <group___cmp_hilscher_c_i_f_x_itf___events_1gaf1e71439b27044488ae02f4ca9e297cb>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 3)

- #define :ref:`EVT_PACKET_INDICATION <group___cmp_hilscher_c_i_f_x_itf___events_1gad27571477e88de3e0a8344db63cf1eca>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 4)

- #define :ref:`EVT_CARDS_INIT_DONE <group___cmp_hilscher_c_i_f_x_itf___events_1ga1c87466890f600527e12526e0afcabe2>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 5)

- #define :ref:`EVT_PACKET_CONFIRMATION <group___cmp_hilscher_c_i_f_x_itf___events_1gaf23aa3928b9709bc5eb3a418a29c8e31>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 6)

- #define :ref:`EVT_CIFX_INTERRUPTS_ENABLE <group___cmp_hilscher_c_i_f_x_itf___events_1gac63164afe4a1bb70dfc87b0a7ec1fef0>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 7)

- #define :ref:`EVT_CIFX_INTERRUPTS_DISABLE <group___cmp_hilscher_c_i_f_x_itf___events_1ga8768cc71bd8cbbd78efa5c24d484a554>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 8)

- #define :ref:`EVT_CIFX_CONFIGURE_DPM <group___cmp_hilscher_c_i_f_x_itf___events_1ga831ecf1a2cac321bec561efb53b2ff4a>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 9)

- #define :ref:`EVT_CIFX_GETFIRMWARE <group___cmp_hilscher_c_i_f_x_itf___events_1gaf0fcbcdd2f36622e7c5d961225f2799f>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 10)

- #define :ref:`EVT_CIFX_LOADFIRMWARE <group___cmp_hilscher_c_i_f_x_itf___events_1ga9762b3aca111374f5ca23b81b2716886>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 11)

- #define :ref:`EVT_CIFX_XCHANNEL_OPEN <group___cmp_hilscher_c_i_f_x_itf___events_1ga706b565343a9396f79c2a8a4775c104c>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 12)

- #define :ref:`EVT_CIFX_XCHANNEL_CLOSE <group___cmp_hilscher_c_i_f_x_itf___events_1ga3e3d46842f753c479fe09f37229a427a>` :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 13)

- #define :ref:`CIFX_DIRECTORY_ENTRY <group___cmp_hilscher_c_i_f_x_itf___events_1ga46bdb2c2f1fc8a24c325f9b106a86723>` CIFX_DIRECTORYENTRY

.. _group___cmp_hilscher_c_i_f_x_itf___events-details:

Detailed Description
--------------------





Macro Definition Documentation
------------------------------
.. _group___cmp_hilscher_c_i_f_x_itf___events_1ga216a3c82b682f1f2d6cd18b51a93ead1:

#define EVT_DOWNLOAD_PROGRESS :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent on a file download to cifx, but only if no other callback is defined. (See cifx Device Driver Manual)

**Parameters**

+---------+-------------+-----------------------------------------------------------------------+
| [in]    | pEventParam | :ref:`EVTPARAM_LoadProgress <struct_e_v_t_p_a_r_a_m___load_progress>` |
+---------+-------------+-----------------------------------------------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1gad7d4fcf14d21c087dbca715f64c86b52:

#define EVT_UPLOAD_PROGRESS :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent on a file upload from cifx, but only if no other callback is defined. (See cifx Device Driver Manual)

**Parameters**

+---------+-------------+-----------------------------------------------------------------------+
| [in]    | pEventParam | :ref:`EVTPARAM_LoadProgress <struct_e_v_t_p_a_r_a_m___load_progress>` |
+---------+-------------+-----------------------------------------------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1gaf1e71439b27044488ae02f4ca9e297cb:

#define EVT_PACKET_UNHANDLED :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 3)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent if the cifx is bussy and cannot handle a packet, but only if no other callback is defined. (See cifx Device Driver Manual)

**Parameters**

+---------+-------------+-----------------------------------------------------------------------------+
| [in]    | pEventParam | :ref:`EVTPARAM_PacketUnhandled <struct_e_v_t_p_a_r_a_m___packet_unhandled>` |
+---------+-------------+-----------------------------------------------------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1gad27571477e88de3e0a8344db63cf1eca:

#define EVT_PACKET_INDICATION :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 4)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent when an indication was passed to the runtime system (cifx application). The user can decide, what should happen with the Indication. On default it is stored in the Indication Queue and the user can get the packet with the ChannelGetPacket service (ulPutInQueue != 0). If ulPutInQueue is 0, the packet is not stored in a queue. If the user sets the parameter ulGenerateAsyncEvent to 1, a asynchronous CAA_CB event, set in parameter eAsyncEvent (Source: CB_DRIVER) is generated. As an parameter hMsg is passed to the callback. IMPORTANT: If the user wants to use the packet in an asynchronous event, he has to call MBM_MsgAddRef for hMsg in the EVT_PACKET_INDICATION callback. In addition to that the user has to call MBM_MsgRelease in the async event callback. Otherwise the hMsg is already released, when the async callback is called or there is a memory leak.

**Parameters**

+---------+-------------+-----------------------------------------------------------------+
| [in]    | pEventParam | :ref:`CIFX_IndicationParam <struct_c_i_f_x___indication_param>` |
+---------+-------------+-----------------------------------------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1ga1c87466890f600527e12526e0afcabe2:

#define EVT_CARDS_INIT_DONE :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent, when all cards are detected.

**Parameters**

+---------+-------------+--------------------------------+
| [in]    | pEventParam | No Parameters, pEventParam = 0 |
+---------+-------------+--------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1gaf23aa3928b9709bc5eb3a418a29c8e31:

#define EVT_PACKET_CONFIRMATION :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 6)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent when an confirmation was passed to the runtime system (cifx application). The user can decide, what should happen with the Indication. On default it is stored in the confirmation Queue and the user can get the packet with the ChannelGetPacket service (ulPutInQueue != 0). If ulPutInQueue is 0, the packet is not stored in a queue. If the user sets the parameter ulGenerateAsyncEvent to 1, a asynchronous CAA_CB event, set in parameter eAsyncEvent (Source: CB_DRIVER) is generated. As an parameter hMsg is passed to the callback. IMPORTANT: If the user wants to use the packet in an asynchronous event, he has to call MBM_MsgAddRef for hMsg in the EVT_PACKET_INDICATION callback. In addition to that the user has to call MBM_MsgRelease in the async event callback. Otherwise the hMsg is already released, when the async callback is called or there is a memory leak.

**Parameters**

+---------+-------------+---------------------------------------------------------------------+
| [in]    | pEventParam | :ref:`CIFX_ConfirmationParam <struct_c_i_f_x___confirmation_param>` |
+---------+-------------+---------------------------------------------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1gac63164afe4a1bb70dfc87b0a7ec1fef0:

#define EVT_CIFX_INTERRUPTS_ENABLE :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 7)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent right before the interrupt for the specified card is enabled to do device or system specific stuff.

**Parameters**

+---------+-------------+----------------------------------------------------------------------------------------+
| [in]    | pEventParam | :ref:`EVTPARAM_CIFX_InterruptInfo <struct_e_v_t_p_a_r_a_m___c_i_f_x___interrupt_info>` |
+---------+-------------+----------------------------------------------------------------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1ga8768cc71bd8cbbd78efa5c24d484a554:

#define EVT_CIFX_INTERRUPTS_DISABLE :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 8)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent right before the interrupt for the specified card is disabled to do device or system specific stuff.

**Parameters**

+---------+-------------+----------------------------------------------------------------------------------------+
| [in]    | pEventParam | :ref:`EVTPARAM_CIFX_InterruptInfo <struct_e_v_t_p_a_r_a_m___c_i_f_x___interrupt_info>` |
+---------+-------------+----------------------------------------------------------------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1ga831ecf1a2cac321bec561efb53b2ff4a:

#define EVT_CIFX_CONFIGURE_DPM :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 9)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent to configure the DPM address of the card. In this case it is assumed, that it is no PCI card.

**Parameters**

+---------+-------------+----------------------------------------------------------------------------------------+
| [in]    | pEventParam | :ref:`EVTPARAM_CIFX_ConfigureDPM <struct_e_v_t_p_a_r_a_m___c_i_f_x___configure_d_p_m>` |
+---------+-------------+----------------------------------------------------------------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1gaf0fcbcdd2f36622e7c5d961225f2799f:

#define EVT_CIFX_GETFIRMWARE :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 10)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent to configure the correct firmware to the corresponding card. Optionally a firmware version can be returned to select from configured firmware files. See :ref:`EVTPARAM_CIFX_GetFirmware <struct_e_v_t_p_a_r_a_m___c_i_f_x___get_firmware>` .

**Parameters**

+---------+-------------+------------------------------------------------------------------------------------+
| [in]    | pEventParam | :ref:`EVTPARAM_CIFX_GetFirmware <struct_e_v_t_p_a_r_a_m___c_i_f_x___get_firmware>` |
+---------+-------------+------------------------------------------------------------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1ga9762b3aca111374f5ca23b81b2716886:

#define EVT_CIFX_LOADFIRMWARE :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 11)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent to (re)initialize the card and to load the firmware.

**Parameters**

+---------+-------------+--------------------------------------------------------------------------------------+
| [in]    | pEventParam | :ref:`EVTPARAM_CIFX_LoadFirmware <struct_e_v_t_p_a_r_a_m___c_i_f_x___load_firmware>` |
+---------+-------------+--------------------------------------------------------------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1ga706b565343a9396f79c2a8a4775c104c:

#define EVT_CIFX_XCHANNEL_OPEN :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 12)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent to provide communication channel for other customer-specific components.

**Parameters**

+---------+-------------+--------------------------------------------------------------------------------------+
| [in]    | pEventParam | :ref:`EVTPARAM_CIFX_xChannelOpen <struct_e_v_t_p_a_r_a_m___c_i_f_x__x_channel_open>` |
+---------+-------------+--------------------------------------------------------------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1ga3e3d46842f753c479fe09f37229a427a:

#define EVT_CIFX_XCHANNEL_CLOSE :ref:`MAKE_EVENTID <group___cmp_event_mgr_itf___convertmacro_1ga8f45ad6798a634d4e00140c12039007e>` ( :ref:`EVTCLASS_INFO <group___cmp_event_mgr_itf___eventclasses_1ga711863810010aec40693ca7c4643a025>` , 13)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Event is sent to inform other customer-specific components that a communication channel will be closed now.

**Parameters**

+---------+-------------+----------------------------------------------------------------------------------------+
| [in]    | pEventParam | :ref:`EVTPARAM_CIFX_xChannelClose <struct_e_v_t_p_a_r_a_m___c_i_f_x__x_channel_close>` |
+---------+-------------+----------------------------------------------------------------------------------------+

.. _group___cmp_hilscher_c_i_f_x_itf___events_1ga46bdb2c2f1fc8a24c325f9b106a86723:

#define CIFX_DIRECTORY_ENTRY CIFX_DIRECTORYENTRY
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. last line of group.rst template
.. last line of composition.rst template


