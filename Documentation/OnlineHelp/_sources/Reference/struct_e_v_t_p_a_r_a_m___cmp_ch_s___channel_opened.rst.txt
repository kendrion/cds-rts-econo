.. first line of composition.rst template

:orphan:

.. first line of struct.rst template

.. _struct_e_v_t_p_a_r_a_m___cmp_ch_s___channel_opened:

==============================================
EVTPARAM_CmpChS_ChannelOpened Struct Reference
==============================================

| #include ":ref:`CmpChannelServerItf.h <_cmp_channel_server_itf_8h>`"

Data Fields
-----------

- RTS_UI32 :ref:`ulChannelHandle <group___cmp_channel_server_itf_1ga7dfdba873668250fa2af3387dd3ead0c>`

Detailed Description
--------------------



Field Documentation
-------------------

.. _group___cmp_channel_server_itf_1ga7dfdba873668250fa2af3387dd3ead0c:

RTS_UI32 EVTPARAM_CmpChS_ChannelOpened::ulChannelHandle
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The channel handle is always a combination of two words (16 bit). The low word (ulChannelHandle masked with 0xFFFF) is the id of the "physical" channel. The highword is the id of the client using this channel (multiple clients may use the same channel in a round robin manner). A highword of 0xFFFF indicates, that the channel is completely closed and all clients have disconnected. In all other cases the channel is still open, only that client has disconnected. When attaching any resources to a specific channel (e.g. open files, logins, ...) the component should release the resource when the client detaches as well as release all clients resources when the channel is completely closed.

The documentation for this struct was generated from the following file:
------------------------------------------------------------------------

CmpChannelServerItf.h

.. last line of struct.rst template
.. last line of composition.rst template


