.. first line of composition.rst template

:orphan:

.. first line of group.rst template

.. _group___cmp_mem_g_c_itf:

===========
CmpMemGCItf
===========

.. contents::
    :local:
    :depth: 1

Interface of CmpMemGC.

Detailed Description
--------------------

Interface of the garbage collector, that detects memory leaks and memory overwrite operations.

**Copyright:**

Copyright (c) 2017-2020 CODESYS Development GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Modules
-------

- :ref:`Garbage collector entry <group___cmp_mem_g_c_itf___garbagecollectorentry>`

- :ref:`OperationID <group___cmp_mem_g_c_itf___operation_i_d>`

- :ref:`Settings <group___cmp_mem_g_c_itf___settings>`

Data Structures
---------------

- struct :ref:`ICmpMemGC_C <struct_i_cmp_mem_g_c___c>`

Macros
------

- #define :ref:`USE_MemGCGetSize <group___cmp_mem_g_c_itf_1gabe4373dbf494f445838496d6306e75c4>` :ref:`PFMEMGCGETSIZE <group___cmp_mem_g_c_itf_1ga6177c3923186f70e6586270e02fb6cab>` pfMemGCGetSize;

- #define :ref:`EXT_MemGCGetSize <group___cmp_mem_g_c_itf_1ga56b8bca940a8b62269ba72ba53271b4d>` extern :ref:`PFMEMGCGETSIZE <group___cmp_mem_g_c_itf_1ga6177c3923186f70e6586270e02fb6cab>` pfMemGCGetSize;

- #define :ref:`GET_MemGCGetSize <group___cmp_mem_g_c_itf_1ga8cf7a70e4076ac33c8a410500023c192>` s_pfCMGetAPI2( "MemGCGetSize", (RTS_VOID_FCTPTR *)&pfMemGCGetSize, (fl), 0, 0)

- #define :ref:`CAL_MemGCGetSize <group___cmp_mem_g_c_itf_1gaa853e7cf2e1a7d58bd4300567eb1d2e9>` pfMemGCGetSize

- #define :ref:`CHK_MemGCGetSize <group___cmp_mem_g_c_itf_1ga3e4857517188a1f3ca50a23400d0d539>` (pfMemGCGetSize != NULL)

- #define :ref:`EXP_MemGCGetSize <group___cmp_mem_g_c_itf_1ga7a6e812ff82f431a60ac21a9506ec52a>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCGetSize", (RTS_UINTPTR) :ref:`MemGCGetSize <group___cmp_mem_g_c_itf_1ga1f8bc38e83b27acf0f8edacb5f456b1f>` , 0, 0)

- #define :ref:`USE_MemGCGetCurrentHeapSize <group___cmp_mem_g_c_itf_1ga8cda805ae89afe8ca7b4256fb92e708b>` :ref:`PFMEMGCGETCURRENTHEAPSIZE <group___cmp_mem_g_c_itf_1ga31a72ed4f8fc3f9d663bb4dcf00f6d3b>` pfMemGCGetCurrentHeapSize;

- #define :ref:`EXT_MemGCGetCurrentHeapSize <group___cmp_mem_g_c_itf_1ga36177665d3ecc7fa45efb908e81c77ff>` extern :ref:`PFMEMGCGETCURRENTHEAPSIZE <group___cmp_mem_g_c_itf_1ga31a72ed4f8fc3f9d663bb4dcf00f6d3b>` pfMemGCGetCurrentHeapSize;

- #define :ref:`GET_MemGCGetCurrentHeapSize <group___cmp_mem_g_c_itf_1gafa7b29281461e361fadcfd04ef8662d6>` s_pfCMGetAPI2( "MemGCGetCurrentHeapSize", (RTS_VOID_FCTPTR *)&pfMemGCGetCurrentHeapSize, (fl), 0, 0)

- #define :ref:`CAL_MemGCGetCurrentHeapSize <group___cmp_mem_g_c_itf_1ga19130cfbe66216f3cf89643dc49c90d7>` pfMemGCGetCurrentHeapSize

- #define :ref:`CHK_MemGCGetCurrentHeapSize <group___cmp_mem_g_c_itf_1ga860f4b39c7822ebc265dadbf432613c0>` (pfMemGCGetCurrentHeapSize != NULL)

- #define :ref:`EXP_MemGCGetCurrentHeapSize <group___cmp_mem_g_c_itf_1gade5d3227787c8382af1f8cc285e4cbcb>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCGetCurrentHeapSize", (RTS_UINTPTR) :ref:`MemGCGetCurrentHeapSize <group___cmp_mem_g_c_itf_1ga60ee1fd135de3c40bb5ae1b197295acc>` , 0, 0)

- #define :ref:`USE_MemGCAdd <group___cmp_mem_g_c_itf_1ga500ca59cb33b7110336609a68adfce41>` :ref:`PFMEMGCADD <group___cmp_mem_g_c_itf_1ga5230465fada9b47d6fcb59de9d8982d9>` pfMemGCAdd;

- #define :ref:`EXT_MemGCAdd <group___cmp_mem_g_c_itf_1gac21088ed9173076816b7d8f24d775343>` extern :ref:`PFMEMGCADD <group___cmp_mem_g_c_itf_1ga5230465fada9b47d6fcb59de9d8982d9>` pfMemGCAdd;

- #define :ref:`GET_MemGCAdd <group___cmp_mem_g_c_itf_1ga90e63e208dc64f8fe236749909111781>` s_pfCMGetAPI2( "MemGCAdd", (RTS_VOID_FCTPTR *)&pfMemGCAdd, (fl), 0, 0)

- #define :ref:`CAL_MemGCAdd <group___cmp_mem_g_c_itf_1gaf95961764d57f4a7a135e967c32e7c53>` pfMemGCAdd

- #define :ref:`CHK_MemGCAdd <group___cmp_mem_g_c_itf_1ga1834a28b8c8482276de614809e935668>` (pfMemGCAdd != NULL)

- #define :ref:`EXP_MemGCAdd <group___cmp_mem_g_c_itf_1ga1ac0ba7e8317d66abc80175b87bb8645>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCAdd", (RTS_UINTPTR) :ref:`MemGCAdd <group___cmp_mem_g_c_itf_1ga7ee25cf542d295379942d00adc94f015>` , 0, 0)

- #define :ref:`USE_MemGCRemove <group___cmp_mem_g_c_itf_1gaee6ab257148584c459da01bad795d76f>` :ref:`PFMEMGCREMOVE <group___cmp_mem_g_c_itf_1ga71436a675358eb479fe752188c16ed5b>` pfMemGCRemove;

- #define :ref:`EXT_MemGCRemove <group___cmp_mem_g_c_itf_1ga63b17673d24d74ef8fb5f891f8e307fc>` extern :ref:`PFMEMGCREMOVE <group___cmp_mem_g_c_itf_1ga71436a675358eb479fe752188c16ed5b>` pfMemGCRemove;

- #define :ref:`GET_MemGCRemove <group___cmp_mem_g_c_itf_1gac0f0af337dbe96656aece0df883d7ba3>` s_pfCMGetAPI2( "MemGCRemove", (RTS_VOID_FCTPTR *)&pfMemGCRemove, (fl), 0, 0)

- #define :ref:`CAL_MemGCRemove <group___cmp_mem_g_c_itf_1ga519fca7b51000306ea1bf69979eb4d1f>` pfMemGCRemove

- #define :ref:`CHK_MemGCRemove <group___cmp_mem_g_c_itf_1ga0eb495c9466f832d68faa5f3bfa18067>` (pfMemGCRemove != NULL)

- #define :ref:`EXP_MemGCRemove <group___cmp_mem_g_c_itf_1ga3c0a95b4f27e4f9c9eae326067e84d49>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCRemove", (RTS_UINTPTR) :ref:`MemGCRemove <group___cmp_mem_g_c_itf_1ga06038a7a0fb34476c8a8da8717500de1>` , 0, 0)

- #define :ref:`USE_MemGCCheckBoundsAll <group___cmp_mem_g_c_itf_1ga79b33a7db0f6dc8af8773ac8765c6204>` :ref:`PFMEMGCCHECKBOUNDSALL <group___cmp_mem_g_c_itf_1ga9dcfbd207f48f69b1f9ee61ea2fb7181>` pfMemGCCheckBoundsAll;

- #define :ref:`EXT_MemGCCheckBoundsAll <group___cmp_mem_g_c_itf_1gaa996a7abd29510a8344f178ee1c2b6b1>` extern :ref:`PFMEMGCCHECKBOUNDSALL <group___cmp_mem_g_c_itf_1ga9dcfbd207f48f69b1f9ee61ea2fb7181>` pfMemGCCheckBoundsAll;

- #define :ref:`GET_MemGCCheckBoundsAll <group___cmp_mem_g_c_itf_1ga0e6e518bd6ef55d6102dbf8d52df836b>` s_pfCMGetAPI2( "MemGCCheckBoundsAll", (RTS_VOID_FCTPTR *)&pfMemGCCheckBoundsAll, (fl), 0, 0)

- #define :ref:`CAL_MemGCCheckBoundsAll <group___cmp_mem_g_c_itf_1ga577ebcd78aac8c8cdaa32d55913c4364>` pfMemGCCheckBoundsAll

- #define :ref:`CHK_MemGCCheckBoundsAll <group___cmp_mem_g_c_itf_1gadd39bbd13f770cf0189458878ef3b353>` (pfMemGCCheckBoundsAll != NULL)

- #define :ref:`EXP_MemGCCheckBoundsAll <group___cmp_mem_g_c_itf_1ga7dd3e0591f9bd1787b057c493102a2c8>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCCheckBoundsAll", (RTS_UINTPTR) :ref:`MemGCCheckBoundsAll <group___cmp_mem_g_c_itf_1gaf1c3529d243264089923f6f83617b11c>` , 0, 0)

- #define :ref:`USE_MemGCFindEntry <group___cmp_mem_g_c_itf_1ga10fb835eb30de68e7d5314ecc252a235>` :ref:`PFMEMGCFINDENTRY <group___cmp_mem_g_c_itf_1ga0f22dbf91ebc9169f9ad774932a74f81>` pfMemGCFindEntry;

- #define :ref:`EXT_MemGCFindEntry <group___cmp_mem_g_c_itf_1ga2e7bfb8d5f087a442fae54127a5a9f2f>` extern :ref:`PFMEMGCFINDENTRY <group___cmp_mem_g_c_itf_1ga0f22dbf91ebc9169f9ad774932a74f81>` pfMemGCFindEntry;

- #define :ref:`GET_MemGCFindEntry <group___cmp_mem_g_c_itf_1ga8b75b9ca5a6c8849596b6e49d09a37c6>` s_pfCMGetAPI2( "MemGCFindEntry", (RTS_VOID_FCTPTR *)&pfMemGCFindEntry, (fl), 0, 0)

- #define :ref:`CAL_MemGCFindEntry <group___cmp_mem_g_c_itf_1ga4869f1be306aaf4433f7ae4b5cb77045>` pfMemGCFindEntry

- #define :ref:`CHK_MemGCFindEntry <group___cmp_mem_g_c_itf_1ga81d47d42fc726d7ce1ca158cae7989b5>` (pfMemGCFindEntry != NULL)

- #define :ref:`EXP_MemGCFindEntry <group___cmp_mem_g_c_itf_1ga3c7fa97939484de38a5cdeae4ff083cd>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCFindEntry", (RTS_UINTPTR) :ref:`MemGCFindEntry <group___cmp_mem_g_c_itf_1ga40f046c74edad0a26468c89c443d9a12>` , 0, 0)

- #define :ref:`USE_MemGCGetHead <group___cmp_mem_g_c_itf_1ga70efa2c7a6f0fdb59335dc52df6d7e3b>` :ref:`PFMEMGCGETHEAD <group___cmp_mem_g_c_itf_1ga45c3bacd95ae70588e2240ad26d73ebc>` pfMemGCGetHead;

- #define :ref:`EXT_MemGCGetHead <group___cmp_mem_g_c_itf_1ga2f1c0c7b169b896cadb7c1609b9c0470>` extern :ref:`PFMEMGCGETHEAD <group___cmp_mem_g_c_itf_1ga45c3bacd95ae70588e2240ad26d73ebc>` pfMemGCGetHead;

- #define :ref:`GET_MemGCGetHead <group___cmp_mem_g_c_itf_1ga3e6b669e6d58b016eb99a78d676c9985>` s_pfCMGetAPI2( "MemGCGetHead", (RTS_VOID_FCTPTR *)&pfMemGCGetHead, (fl), 0, 0)

- #define :ref:`CAL_MemGCGetHead <group___cmp_mem_g_c_itf_1ga8f865506842ac0ba0ca007bd3b5c3a7f>` pfMemGCGetHead

- #define :ref:`CHK_MemGCGetHead <group___cmp_mem_g_c_itf_1gaae0d647b5edd9dd09e243550315b0e6c>` (pfMemGCGetHead != NULL)

- #define :ref:`EXP_MemGCGetHead <group___cmp_mem_g_c_itf_1ga6d251032a9e969b250b173e1d7946264>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCGetHead", (RTS_UINTPTR) :ref:`MemGCGetHead <group___cmp_mem_g_c_itf_1gac6fb18cd1a393fcdabfff4750712a238>` , 0, 0)

- #define :ref:`USE_MemGCGetMemBlock <group___cmp_mem_g_c_itf_1ga1f584554a21520b2de86b4d9546fd2d2>` :ref:`PFMEMGCGETMEMBLOCK <group___cmp_mem_g_c_itf_1ga27af5e310c7d6e23cbffc6f3efbf12d8>` pfMemGCGetMemBlock;

- #define :ref:`EXT_MemGCGetMemBlock <group___cmp_mem_g_c_itf_1ga61d742b1a234bd97f8c75291031b1951>` extern :ref:`PFMEMGCGETMEMBLOCK <group___cmp_mem_g_c_itf_1ga27af5e310c7d6e23cbffc6f3efbf12d8>` pfMemGCGetMemBlock;

- #define :ref:`GET_MemGCGetMemBlock <group___cmp_mem_g_c_itf_1ga6c9d453ec1aca31cd2e0d4bfddc1eb25>` s_pfCMGetAPI2( "MemGCGetMemBlock", (RTS_VOID_FCTPTR *)&pfMemGCGetMemBlock, (fl), 0, 0)

- #define :ref:`CAL_MemGCGetMemBlock <group___cmp_mem_g_c_itf_1ga3d5945755ab558b01ce7b08fcadad1a1>` pfMemGCGetMemBlock

- #define :ref:`CHK_MemGCGetMemBlock <group___cmp_mem_g_c_itf_1ga0cf80a9e192f27631a9276a99da83115>` (pfMemGCGetMemBlock != NULL)

- #define :ref:`EXP_MemGCGetMemBlock <group___cmp_mem_g_c_itf_1ga28f0773dd5043b541a0c66947eb1db11>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCGetMemBlock", (RTS_UINTPTR) :ref:`MemGCGetMemBlock <group___cmp_mem_g_c_itf_1ga1f449dc8405d0bd1dee31917fae0c526>` , 0, 0)

- #define :ref:`ITF_CmpMemGC <group___cmp_mem_g_c_itf_1ga86582cb442cb37a670fd4df9f4ab0b22>`

- #define :ref:`EXTITF_CmpMemGC <group___cmp_mem_g_c_itf_1ga1ca29b32731c337fbfd423e41765fb23>`

Typedefs
--------

- typedef RTS_SIZE(* :ref:`PFMEMGCGETSIZE <group___cmp_mem_g_c_itf_1ga6177c3923186f70e6586270e02fb6cab>`)(RTS_SIZE ulSize)

- typedef RTS_SIZE(* :ref:`PFMEMGCGETCURRENTHEAPSIZE <group___cmp_mem_g_c_itf_1ga31a72ed4f8fc3f9d663bb4dcf00f6d3b>`)(RTS_RESULT *pResult)

- typedef void *(* :ref:`PFMEMGCADD <group___cmp_mem_g_c_itf_1ga5230465fada9b47d6fcb59de9d8982d9>`)(char *pszComponentName, void *pMem, RTS_SIZE ulSizeGc)

- typedef void *(* :ref:`PFMEMGCREMOVE <group___cmp_mem_g_c_itf_1ga71436a675358eb479fe752188c16ed5b>`)(char *pszComponentName, void *pMem, RTS_RESULT *pResult)

- typedef RTS_RESULT(* :ref:`PFMEMGCCHECKBOUNDSALL <group___cmp_mem_g_c_itf_1ga9dcfbd207f48f69b1f9ee61ea2fb7181>`)(void)

- typedef :ref:`GARBAGE_COLLECTOR <group___cmp_mem_g_c_itf___garbagecollectorentry_1ga4144fc8972d13d1f89489889db6bd7cc>` *(* :ref:`PFMEMGCFINDENTRY <group___cmp_mem_g_c_itf_1ga0f22dbf91ebc9169f9ad774932a74f81>`)(void *pMem)

- typedef RTS_RESULT(* :ref:`PFMEMGCGETHEAD <group___cmp_mem_g_c_itf_1ga45c3bacd95ae70588e2240ad26d73ebc>`)(GARBAGE_COLLECTOR **ppHead)

- typedef void *(* :ref:`PFMEMGCGETMEMBLOCK <group___cmp_mem_g_c_itf_1ga27af5e310c7d6e23cbffc6f3efbf12d8>`)(GARBAGE_COLLECTOR *pGarbage)

- typedef :ref:`ICmpMemGC_C <struct_i_cmp_mem_g_c___c>` :ref:`ICmpMemGC <group___cmp_mem_g_c_itf_1ga26b8df387867906c93d69b4ccbb7bbdc>`

Functions
---------

- RTS_SIZE :ref:`MemGCGetSize <group___cmp_mem_g_c_itf_1ga1f8bc38e83b27acf0f8edacb5f456b1f>` (RTS_SIZE ulSize)

- RTS_SIZE :ref:`MemGCGetCurrentHeapSize <group___cmp_mem_g_c_itf_1ga60ee1fd135de3c40bb5ae1b197295acc>` (RTS_RESULT * pResult)

- void * :ref:`MemGCAdd <group___cmp_mem_g_c_itf_1ga7ee25cf542d295379942d00adc94f015>` (char * pszComponentName, void * pMem, RTS_SIZE ulSizeGc)

- void * :ref:`MemGCRemove <group___cmp_mem_g_c_itf_1ga06038a7a0fb34476c8a8da8717500de1>` (char * pszComponentName, void * pMem, RTS_RESULT * pResult)

- RTS_RESULT :ref:`MemGCCheckBoundsAll <group___cmp_mem_g_c_itf_1gaf1c3529d243264089923f6f83617b11c>` (void)

- :ref:`GARBAGE_COLLECTOR <group___cmp_mem_g_c_itf___garbagecollectorentry_1ga4144fc8972d13d1f89489889db6bd7cc>` * :ref:`MemGCFindEntry <group___cmp_mem_g_c_itf_1ga40f046c74edad0a26468c89c443d9a12>` (void * pMem)

- RTS_RESULT :ref:`MemGCGetHead <group___cmp_mem_g_c_itf_1gac6fb18cd1a393fcdabfff4750712a238>` (:ref:`GARBAGE_COLLECTOR <group___cmp_mem_g_c_itf___garbagecollectorentry_1ga4144fc8972d13d1f89489889db6bd7cc>` ** ppHead)

- void * :ref:`MemGCGetMemBlock <group___cmp_mem_g_c_itf_1ga1f449dc8405d0bd1dee31917fae0c526>` (:ref:`GARBAGE_COLLECTOR <group___cmp_mem_g_c_itf___garbagecollectorentry_1ga4144fc8972d13d1f89489889db6bd7cc>` * pGarbage)

Macro Definition Documentation
------------------------------
.. _group___cmp_mem_g_c_itf_1gabe4373dbf494f445838496d6306e75c4:

#define USE_MemGCGetSize :ref:`PFMEMGCGETSIZE <group___cmp_mem_g_c_itf_1ga6177c3923186f70e6586270e02fb6cab>` pfMemGCGetSize;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga56b8bca940a8b62269ba72ba53271b4d:

#define EXT_MemGCGetSize extern :ref:`PFMEMGCGETSIZE <group___cmp_mem_g_c_itf_1ga6177c3923186f70e6586270e02fb6cab>` pfMemGCGetSize;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga8cf7a70e4076ac33c8a410500023c192:

#define GET_MemGCGetSize s_pfCMGetAPI2( "MemGCGetSize", (RTS_VOID_FCTPTR *)&pfMemGCGetSize, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1gaa853e7cf2e1a7d58bd4300567eb1d2e9:

#define CAL_MemGCGetSize pfMemGCGetSize
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga3e4857517188a1f3ca50a23400d0d539:

#define CHK_MemGCGetSize (pfMemGCGetSize != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga7a6e812ff82f431a60ac21a9506ec52a:

#define EXP_MemGCGetSize s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCGetSize", (RTS_UINTPTR) :ref:`MemGCGetSize <group___cmp_mem_g_c_itf_1ga1f8bc38e83b27acf0f8edacb5f456b1f>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga8cda805ae89afe8ca7b4256fb92e708b:

#define USE_MemGCGetCurrentHeapSize :ref:`PFMEMGCGETCURRENTHEAPSIZE <group___cmp_mem_g_c_itf_1ga31a72ed4f8fc3f9d663bb4dcf00f6d3b>` pfMemGCGetCurrentHeapSize;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga36177665d3ecc7fa45efb908e81c77ff:

#define EXT_MemGCGetCurrentHeapSize extern :ref:`PFMEMGCGETCURRENTHEAPSIZE <group___cmp_mem_g_c_itf_1ga31a72ed4f8fc3f9d663bb4dcf00f6d3b>` pfMemGCGetCurrentHeapSize;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1gafa7b29281461e361fadcfd04ef8662d6:

#define GET_MemGCGetCurrentHeapSize s_pfCMGetAPI2( "MemGCGetCurrentHeapSize", (RTS_VOID_FCTPTR *)&pfMemGCGetCurrentHeapSize, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga19130cfbe66216f3cf89643dc49c90d7:

#define CAL_MemGCGetCurrentHeapSize pfMemGCGetCurrentHeapSize
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga860f4b39c7822ebc265dadbf432613c0:

#define CHK_MemGCGetCurrentHeapSize (pfMemGCGetCurrentHeapSize != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1gade5d3227787c8382af1f8cc285e4cbcb:

#define EXP_MemGCGetCurrentHeapSize s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCGetCurrentHeapSize", (RTS_UINTPTR) :ref:`MemGCGetCurrentHeapSize <group___cmp_mem_g_c_itf_1ga60ee1fd135de3c40bb5ae1b197295acc>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga500ca59cb33b7110336609a68adfce41:

#define USE_MemGCAdd :ref:`PFMEMGCADD <group___cmp_mem_g_c_itf_1ga5230465fada9b47d6fcb59de9d8982d9>` pfMemGCAdd;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1gac21088ed9173076816b7d8f24d775343:

#define EXT_MemGCAdd extern :ref:`PFMEMGCADD <group___cmp_mem_g_c_itf_1ga5230465fada9b47d6fcb59de9d8982d9>` pfMemGCAdd;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga90e63e208dc64f8fe236749909111781:

#define GET_MemGCAdd s_pfCMGetAPI2( "MemGCAdd", (RTS_VOID_FCTPTR *)&pfMemGCAdd, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1gaf95961764d57f4a7a135e967c32e7c53:

#define CAL_MemGCAdd pfMemGCAdd
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga1834a28b8c8482276de614809e935668:

#define CHK_MemGCAdd (pfMemGCAdd != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga1ac0ba7e8317d66abc80175b87bb8645:

#define EXP_MemGCAdd s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCAdd", (RTS_UINTPTR) :ref:`MemGCAdd <group___cmp_mem_g_c_itf_1ga7ee25cf542d295379942d00adc94f015>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1gaee6ab257148584c459da01bad795d76f:

#define USE_MemGCRemove :ref:`PFMEMGCREMOVE <group___cmp_mem_g_c_itf_1ga71436a675358eb479fe752188c16ed5b>` pfMemGCRemove;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga63b17673d24d74ef8fb5f891f8e307fc:

#define EXT_MemGCRemove extern :ref:`PFMEMGCREMOVE <group___cmp_mem_g_c_itf_1ga71436a675358eb479fe752188c16ed5b>` pfMemGCRemove;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1gac0f0af337dbe96656aece0df883d7ba3:

#define GET_MemGCRemove s_pfCMGetAPI2( "MemGCRemove", (RTS_VOID_FCTPTR *)&pfMemGCRemove, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga519fca7b51000306ea1bf69979eb4d1f:

#define CAL_MemGCRemove pfMemGCRemove
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga0eb495c9466f832d68faa5f3bfa18067:

#define CHK_MemGCRemove (pfMemGCRemove != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga3c0a95b4f27e4f9c9eae326067e84d49:

#define EXP_MemGCRemove s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCRemove", (RTS_UINTPTR) :ref:`MemGCRemove <group___cmp_mem_g_c_itf_1ga06038a7a0fb34476c8a8da8717500de1>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga79b33a7db0f6dc8af8773ac8765c6204:

#define USE_MemGCCheckBoundsAll :ref:`PFMEMGCCHECKBOUNDSALL <group___cmp_mem_g_c_itf_1ga9dcfbd207f48f69b1f9ee61ea2fb7181>` pfMemGCCheckBoundsAll;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1gaa996a7abd29510a8344f178ee1c2b6b1:

#define EXT_MemGCCheckBoundsAll extern :ref:`PFMEMGCCHECKBOUNDSALL <group___cmp_mem_g_c_itf_1ga9dcfbd207f48f69b1f9ee61ea2fb7181>` pfMemGCCheckBoundsAll;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga0e6e518bd6ef55d6102dbf8d52df836b:

#define GET_MemGCCheckBoundsAll s_pfCMGetAPI2( "MemGCCheckBoundsAll", (RTS_VOID_FCTPTR *)&pfMemGCCheckBoundsAll, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga577ebcd78aac8c8cdaa32d55913c4364:

#define CAL_MemGCCheckBoundsAll pfMemGCCheckBoundsAll
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1gadd39bbd13f770cf0189458878ef3b353:

#define CHK_MemGCCheckBoundsAll (pfMemGCCheckBoundsAll != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga7dd3e0591f9bd1787b057c493102a2c8:

#define EXP_MemGCCheckBoundsAll s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCCheckBoundsAll", (RTS_UINTPTR) :ref:`MemGCCheckBoundsAll <group___cmp_mem_g_c_itf_1gaf1c3529d243264089923f6f83617b11c>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga10fb835eb30de68e7d5314ecc252a235:

#define USE_MemGCFindEntry :ref:`PFMEMGCFINDENTRY <group___cmp_mem_g_c_itf_1ga0f22dbf91ebc9169f9ad774932a74f81>` pfMemGCFindEntry;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga2e7bfb8d5f087a442fae54127a5a9f2f:

#define EXT_MemGCFindEntry extern :ref:`PFMEMGCFINDENTRY <group___cmp_mem_g_c_itf_1ga0f22dbf91ebc9169f9ad774932a74f81>` pfMemGCFindEntry;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga8b75b9ca5a6c8849596b6e49d09a37c6:

#define GET_MemGCFindEntry s_pfCMGetAPI2( "MemGCFindEntry", (RTS_VOID_FCTPTR *)&pfMemGCFindEntry, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga4869f1be306aaf4433f7ae4b5cb77045:

#define CAL_MemGCFindEntry pfMemGCFindEntry
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga81d47d42fc726d7ce1ca158cae7989b5:

#define CHK_MemGCFindEntry (pfMemGCFindEntry != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga3c7fa97939484de38a5cdeae4ff083cd:

#define EXP_MemGCFindEntry s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCFindEntry", (RTS_UINTPTR) :ref:`MemGCFindEntry <group___cmp_mem_g_c_itf_1ga40f046c74edad0a26468c89c443d9a12>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga70efa2c7a6f0fdb59335dc52df6d7e3b:

#define USE_MemGCGetHead :ref:`PFMEMGCGETHEAD <group___cmp_mem_g_c_itf_1ga45c3bacd95ae70588e2240ad26d73ebc>` pfMemGCGetHead;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga2f1c0c7b169b896cadb7c1609b9c0470:

#define EXT_MemGCGetHead extern :ref:`PFMEMGCGETHEAD <group___cmp_mem_g_c_itf_1ga45c3bacd95ae70588e2240ad26d73ebc>` pfMemGCGetHead;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga3e6b669e6d58b016eb99a78d676c9985:

#define GET_MemGCGetHead s_pfCMGetAPI2( "MemGCGetHead", (RTS_VOID_FCTPTR *)&pfMemGCGetHead, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga8f865506842ac0ba0ca007bd3b5c3a7f:

#define CAL_MemGCGetHead pfMemGCGetHead
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1gaae0d647b5edd9dd09e243550315b0e6c:

#define CHK_MemGCGetHead (pfMemGCGetHead != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga6d251032a9e969b250b173e1d7946264:

#define EXP_MemGCGetHead s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCGetHead", (RTS_UINTPTR) :ref:`MemGCGetHead <group___cmp_mem_g_c_itf_1gac6fb18cd1a393fcdabfff4750712a238>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga1f584554a21520b2de86b4d9546fd2d2:

#define USE_MemGCGetMemBlock :ref:`PFMEMGCGETMEMBLOCK <group___cmp_mem_g_c_itf_1ga27af5e310c7d6e23cbffc6f3efbf12d8>` pfMemGCGetMemBlock;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga61d742b1a234bd97f8c75291031b1951:

#define EXT_MemGCGetMemBlock extern :ref:`PFMEMGCGETMEMBLOCK <group___cmp_mem_g_c_itf_1ga27af5e310c7d6e23cbffc6f3efbf12d8>` pfMemGCGetMemBlock;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga6c9d453ec1aca31cd2e0d4bfddc1eb25:

#define GET_MemGCGetMemBlock s_pfCMGetAPI2( "MemGCGetMemBlock", (RTS_VOID_FCTPTR *)&pfMemGCGetMemBlock, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga3d5945755ab558b01ce7b08fcadad1a1:

#define CAL_MemGCGetMemBlock pfMemGCGetMemBlock
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga0cf80a9e192f27631a9276a99da83115:

#define CHK_MemGCGetMemBlock (pfMemGCGetMemBlock != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga28f0773dd5043b541a0c66947eb1db11:

#define EXP_MemGCGetMemBlock s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"MemGCGetMemBlock", (RTS_UINTPTR) :ref:`MemGCGetMemBlock <group___cmp_mem_g_c_itf_1ga1f449dc8405d0bd1dee31917fae0c526>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga86582cb442cb37a670fd4df9f4ab0b22:

#define ITF_CmpMemGC
^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga1ca29b32731c337fbfd423e41765fb23:

#define EXTITF_CmpMemGC
^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___cmp_mem_g_c_itf_1ga6177c3923186f70e6586270e02fb6cab:

typedef RTS_SIZE( *  PFMEMGCGETSIZE) (RTS_SIZE ulSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga31a72ed4f8fc3f9d663bb4dcf00f6d3b:

typedef RTS_SIZE( *  PFMEMGCGETCURRENTHEAPSIZE) (RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga5230465fada9b47d6fcb59de9d8982d9:

typedef void*( *  PFMEMGCADD) (char *pszComponentName, void *pMem, RTS_SIZE ulSizeGc)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga71436a675358eb479fe752188c16ed5b:

typedef void*( *  PFMEMGCREMOVE) (char *pszComponentName, void *pMem, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga9dcfbd207f48f69b1f9ee61ea2fb7181:

typedef RTS_RESULT( *  PFMEMGCCHECKBOUNDSALL) (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga0f22dbf91ebc9169f9ad774932a74f81:

typedef GARBAGE_COLLECTOR*( *  PFMEMGCFINDENTRY) (void *pMem)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga45c3bacd95ae70588e2240ad26d73ebc:

typedef RTS_RESULT( *  PFMEMGCGETHEAD) (GARBAGE_COLLECTOR **ppHead)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga27af5e310c7d6e23cbffc6f3efbf12d8:

typedef void*( *  PFMEMGCGETMEMBLOCK) (GARBAGE_COLLECTOR *pGarbage)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_mem_g_c_itf_1ga26b8df387867906c93d69b4ccbb7bbdc:

typedef ICmpMemGC_C ICmpMemGC
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___cmp_mem_g_c_itf_1ga1f8bc38e83b27acf0f8edacb5f456b1f:

RTS_SIZE MemGCGetSize (RTS_SIZE ulSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to get size of a new heap memory block with garbage collection.

**Parameters**

+---------+--------+--------------------------------------------------+
| [in]    | ulSize | Size of the memory block, that should be checked |
+---------+--------+--------------------------------------------------+

**Returns:**

Number of bytes to allocate included the garbage memory overhead

.. _group___cmp_mem_g_c_itf_1ga60ee1fd135de3c40bb5ae1b197295acc:

RTS_SIZE MemGCGetCurrentHeapSize (RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to get total size of the currently allocated heap memory.

**Parameters**

+---------+---------+-----------------------+
| [out]   | pResult | Pointer to error code |
+---------+---------+-----------------------+

**Returns:**

Size of the memory in bytes that is currently allocated from the heap

.. _group___cmp_mem_g_c_itf_1ga7ee25cf542d295379942d00adc94f015:

void* MemGCAdd (char *pszComponentName, void *pMem, RTS_SIZE ulSizeGc)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to add a new heap memory block to the garbage collector.

**Parameters**

+---------+------------------+-------------------------------------------------------------------------------------------------+
| [in]    | pszComponentName | Component name, that allocates the memory                                                       |
+---------+------------------+-------------------------------------------------------------------------------------------------+
| [in]    | pMem             | Pointer to the memory block                                                                     |
+---------+------------------+-------------------------------------------------------------------------------------------------+
| [in]    | ulSizeGc         | Size of the memory block including the garbage collection overhead (see result of MemGCGetSize) |
+---------+------------------+-------------------------------------------------------------------------------------------------+

**Returns:**

Pointer to the memory data block

.. _group___cmp_mem_g_c_itf_1ga06038a7a0fb34476c8a8da8717500de1:

void* MemGCRemove (char *pszComponentName, void *pMem, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to remove a heap memory block from the garbage collector.

**Parameters**

+---------+------------------+-------------------------------------------+
| [in]    | pszComponentName | Component name, that allocates the memory |
+---------+------------------+-------------------------------------------+
| [in]    | pMem             | Pointer to the memory data block          |
+---------+------------------+-------------------------------------------+
| [out]   | pResult          | Pointer to error code                     |
+---------+------------------+-------------------------------------------+

**Returns:**

Pointer to the memory block to free

.. _group___cmp_mem_g_c_itf_1gaf1c3529d243264089923f6f83617b11c:

RTS_RESULT MemGCCheckBoundsAll (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to check all registered memory block bounds for overwrite actions.

**Returns:**

Error code

.. _group___cmp_mem_g_c_itf_1ga40f046c74edad0a26468c89c443d9a12:

GARBAGE_COLLECTOR* MemGCFindEntry (void *pMem)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to find original heap memory pointer from garbage collector.

**Parameters**

+---------+------+----------------------------------+
| [in]    | pMem | Pointer to the memory data block |
+---------+------+----------------------------------+

**Returns:**

Pointer to the garbage collector entry

.. _group___cmp_mem_g_c_itf_1gac6fb18cd1a393fcdabfff4750712a238:

RTS_RESULT MemGCGetHead (GARBAGE_COLLECTOR **ppHead)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to get the head node of the garbage collector to check for garbage memory.

**Parameters**

+---------+--------+-----------------------------------------------+
| [in]    | ppHead | Get first entry of the garbage collector list |
+---------+--------+-----------------------------------------------+

**Returns:**

Pointer to the garbage collector entry

.. _group___cmp_mem_g_c_itf_1ga1f449dc8405d0bd1dee31917fae0c526:

void* MemGCGetMemBlock (GARBAGE_COLLECTOR *pGarbage)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Routine to get the pointer to the real memory block.

**Parameters**

+---------+----------+-------------------------+
| [in]    | pGarbage | Garbage collector entry |
+---------+----------+-------------------------+

**Returns:**

Get memory block from the garbage collector entry

.. last line of group.rst template
.. last line of composition.rst template


