.. first line of composition.rst template

:orphan:

.. first line of group.rst template

.. _group___cmp_channel_client_itf:

===================
CmpChannelClientItf
===================

.. contents::
    :local:
    :depth: 1

Interface of CmpChannelClient.

Detailed Description
--------------------

Interface for the channel client.

**Copyright:**

Copyright (c) 2017-2020 CODESYS Development GmbH, Copyright (c) 1994-2016 3S-Smart Software Solutions GmbH. All rights reserved.

Data Structures
---------------

- struct :ref:`ICmpChannelClient_C <struct_i_cmp_channel_client___c>`

Macros
------

- #define :ref:`__EXTERNAL_DECL <group___cmp_channel_client_itf_1ga64f4ed6d0199763ae09623ec61623b61>`

- #define :ref:`USE_NetClientOpenChannel <group___cmp_channel_client_itf_1ga2ed272ccec5058a7508f381496b1b54f>` :ref:`PFNETCLIENTOPENCHANNEL <group___cmp_channel_client_itf_1ga8c7af8eec23b2c54ba46d226b52cf8df>` pfNetClientOpenChannel;

- #define :ref:`EXT_NetClientOpenChannel <group___cmp_channel_client_itf_1gae2fd911f9ecb3ac7a6f4e74c9269b97e>` extern :ref:`PFNETCLIENTOPENCHANNEL <group___cmp_channel_client_itf_1ga8c7af8eec23b2c54ba46d226b52cf8df>` pfNetClientOpenChannel;

- #define :ref:`GET_NetClientOpenChannel <group___cmp_channel_client_itf_1ga507f1a413b008dfda13d1d5ab80dee1e>` s_pfCMGetAPI2( "NetClientOpenChannel", (RTS_VOID_FCTPTR *)&pfNetClientOpenChannel, (fl), 0, 0)

- #define :ref:`CAL_NetClientOpenChannel <group___cmp_channel_client_itf_1ga5c47a8dd19605f6f9d003dff950f5928>` pfNetClientOpenChannel

- #define :ref:`CHK_NetClientOpenChannel <group___cmp_channel_client_itf_1gafff24625fac827e3db205226f828f18a>` (pfNetClientOpenChannel != NULL)

- #define :ref:`EXP_NetClientOpenChannel <group___cmp_channel_client_itf_1gadabf746c502ff26c7cb815ed8214161a>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientOpenChannel", (RTS_UINTPTR) :ref:`NetClientOpenChannel <group___cmp_channel_client_itf_1gab2aead3da2368d469348afeb5c46035e>` , 0, 0)

- #define :ref:`USE_NetClientOpenChannelResult <group___cmp_channel_client_itf_1gaaa3dafd00f737415f1100a62aabd21aa>` :ref:`PFNETCLIENTOPENCHANNELRESULT <group___cmp_channel_client_itf_1ga56134392f1f93d2d430632011a702fce>` pfNetClientOpenChannelResult;

- #define :ref:`EXT_NetClientOpenChannelResult <group___cmp_channel_client_itf_1ga5d63015715d1f03c6241641cb801b13e>` extern :ref:`PFNETCLIENTOPENCHANNELRESULT <group___cmp_channel_client_itf_1ga56134392f1f93d2d430632011a702fce>` pfNetClientOpenChannelResult;

- #define :ref:`GET_NetClientOpenChannelResult <group___cmp_channel_client_itf_1ga71cc3522af024d1a7f96b7cb8fca94b0>` s_pfCMGetAPI2( "NetClientOpenChannelResult", (RTS_VOID_FCTPTR *)&pfNetClientOpenChannelResult, (fl), 0, 0)

- #define :ref:`CAL_NetClientOpenChannelResult <group___cmp_channel_client_itf_1ga90961598d31e21ff69ee1d4e5901cb56>` pfNetClientOpenChannelResult

- #define :ref:`CHK_NetClientOpenChannelResult <group___cmp_channel_client_itf_1ga0c7cb44010fa0633bf2c246e993c1ea7>` (pfNetClientOpenChannelResult != NULL)

- #define :ref:`EXP_NetClientOpenChannelResult <group___cmp_channel_client_itf_1ga87af0c52e9464951caa0ef05e7e38c5c>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientOpenChannelResult", (RTS_UINTPTR) :ref:`NetClientOpenChannelResult <group___cmp_channel_client_itf_1ga52c68deb60b2e7f8894aa1dbf2003a5f>` , 0, 0)

- #define :ref:`USE_NetClientCloseChannel <group___cmp_channel_client_itf_1ga89755842bd5187c1423aef570402f353>` :ref:`PFNETCLIENTCLOSECHANNEL <group___cmp_channel_client_itf_1gac692c15c87b4589d9d73bb690fbd43e2>` pfNetClientCloseChannel;

- #define :ref:`EXT_NetClientCloseChannel <group___cmp_channel_client_itf_1gadac9507b7623c5b6846eab96f0f31599>` extern :ref:`PFNETCLIENTCLOSECHANNEL <group___cmp_channel_client_itf_1gac692c15c87b4589d9d73bb690fbd43e2>` pfNetClientCloseChannel;

- #define :ref:`GET_NetClientCloseChannel <group___cmp_channel_client_itf_1ga736742199925542ea253083fc3ea2a20>` s_pfCMGetAPI2( "NetClientCloseChannel", (RTS_VOID_FCTPTR *)&pfNetClientCloseChannel, (fl), 0, 0)

- #define :ref:`CAL_NetClientCloseChannel <group___cmp_channel_client_itf_1ga753694815ed4aff436d366c9d6c54772>` pfNetClientCloseChannel

- #define :ref:`CHK_NetClientCloseChannel <group___cmp_channel_client_itf_1ga6a6c03f181283603cd9168b4948e1986>` (pfNetClientCloseChannel != NULL)

- #define :ref:`EXP_NetClientCloseChannel <group___cmp_channel_client_itf_1ga3280bad39704b23262473edfbb898c9a>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientCloseChannel", (RTS_UINTPTR) :ref:`NetClientCloseChannel <group___cmp_channel_client_itf_1gabda2f025fe5ace90a3671692198e2e80>` , 0, 0)

- #define :ref:`USE_NetClientSend <group___cmp_channel_client_itf_1gacc0243ba6a52b593109ef345bf43bd4b>` :ref:`PFNETCLIENTSEND <group___cmp_channel_client_itf_1gad9756162ce66308f7edf476beebd9428>` pfNetClientSend;

- #define :ref:`EXT_NetClientSend <group___cmp_channel_client_itf_1ga9e1137c38210d84395f7961195f01590>` extern :ref:`PFNETCLIENTSEND <group___cmp_channel_client_itf_1gad9756162ce66308f7edf476beebd9428>` pfNetClientSend;

- #define :ref:`GET_NetClientSend <group___cmp_channel_client_itf_1ga5c943bdff4a4899509298c4b033474bb>` s_pfCMGetAPI2( "NetClientSend", (RTS_VOID_FCTPTR *)&pfNetClientSend, (fl), 0, 0)

- #define :ref:`CAL_NetClientSend <group___cmp_channel_client_itf_1ga9fd147f1e6c41164760f4072f784319d>` pfNetClientSend

- #define :ref:`CHK_NetClientSend <group___cmp_channel_client_itf_1ga2c0c0f6908ac0ae104e53a1c3559884f>` (pfNetClientSend != NULL)

- #define :ref:`EXP_NetClientSend <group___cmp_channel_client_itf_1ga846b5b98eecd5ea9e1c5fb27aedea06e>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientSend", (RTS_UINTPTR) :ref:`NetClientSend <group___cmp_channel_client_itf_1gaa72b2cdeaa16f9c6d0e9224ab80cfd65>` , 0, 0)

- #define :ref:`USE_NetClientGetStatus <group___cmp_channel_client_itf_1ga1ad5650c8ab51aae9b00245bd109a338>` :ref:`PFNETCLIENTGETSTATUS <group___cmp_channel_client_itf_1ga6961ac9a14ba79a87d29396a748e842a>` pfNetClientGetStatus;

- #define :ref:`EXT_NetClientGetStatus <group___cmp_channel_client_itf_1ga7145dc142255f7c79b8d803a332d169a>` extern :ref:`PFNETCLIENTGETSTATUS <group___cmp_channel_client_itf_1ga6961ac9a14ba79a87d29396a748e842a>` pfNetClientGetStatus;

- #define :ref:`GET_NetClientGetStatus <group___cmp_channel_client_itf_1gacb3fd6b764f0e5537950bb421a68e476>` s_pfCMGetAPI2( "NetClientGetStatus", (RTS_VOID_FCTPTR *)&pfNetClientGetStatus, (fl), 0, 0)

- #define :ref:`CAL_NetClientGetStatus <group___cmp_channel_client_itf_1gad399c413809f86691ea4062450bdcf8c>` pfNetClientGetStatus

- #define :ref:`CHK_NetClientGetStatus <group___cmp_channel_client_itf_1ga047895ef5c8dfefbabb91f43d774058e>` (pfNetClientGetStatus != NULL)

- #define :ref:`EXP_NetClientGetStatus <group___cmp_channel_client_itf_1ga2b311f43ebb7197ce726500e83c2640f>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientGetStatus", (RTS_UINTPTR) :ref:`NetClientGetStatus <group___cmp_channel_client_itf_1gad1e54850f18ac1f5202d2b43cf386230>` , 0, 0)

- #define :ref:`USE_NetClientGetChannel <group___cmp_channel_client_itf_1gad4767ab288f20e9bb5a7c14679bfb75a>` :ref:`PFNETCLIENTGETCHANNEL <group___cmp_channel_client_itf_1ga437f9af04deb95e8bdd98735bf7b0845>` pfNetClientGetChannel;

- #define :ref:`EXT_NetClientGetChannel <group___cmp_channel_client_itf_1ga5fe54808901dd56444cd8111ae05bb79>` extern :ref:`PFNETCLIENTGETCHANNEL <group___cmp_channel_client_itf_1ga437f9af04deb95e8bdd98735bf7b0845>` pfNetClientGetChannel;

- #define :ref:`GET_NetClientGetChannel <group___cmp_channel_client_itf_1ga48c45cb85ad8b8b990017ea8cde14138>` s_pfCMGetAPI2( "NetClientGetChannel", (RTS_VOID_FCTPTR *)&pfNetClientGetChannel, (fl), 0, 0)

- #define :ref:`CAL_NetClientGetChannel <group___cmp_channel_client_itf_1ga9ef61adc0fbb7b702c81e4a59fc58bf7>` pfNetClientGetChannel

- #define :ref:`CHK_NetClientGetChannel <group___cmp_channel_client_itf_1ga5685751afd9fbfdf8c2a7fba7f5befcb>` (pfNetClientGetChannel != NULL)

- #define :ref:`EXP_NetClientGetChannel <group___cmp_channel_client_itf_1gaabb4a152fd724f9768aa8eabf53b8b52>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientGetChannel", (RTS_UINTPTR) :ref:`NetClientGetChannel <group___cmp_channel_client_itf_1gad10cc3debf1828a0c443ffd0d248cb3d>` , 0, 0)

- #define :ref:`USE_NetClientReleaseChannel <group___cmp_channel_client_itf_1ga6284aa3f6222f6800498c1f330043d69>` :ref:`PFNETCLIENTRELEASECHANNEL <group___cmp_channel_client_itf_1gacb67a53ea6153de60c2fc24fa4957f94>` pfNetClientReleaseChannel;

- #define :ref:`EXT_NetClientReleaseChannel <group___cmp_channel_client_itf_1ga2ec9db10577c76a7a9eb25d225508700>` extern :ref:`PFNETCLIENTRELEASECHANNEL <group___cmp_channel_client_itf_1gacb67a53ea6153de60c2fc24fa4957f94>` pfNetClientReleaseChannel;

- #define :ref:`GET_NetClientReleaseChannel <group___cmp_channel_client_itf_1ga03ba3e0025221bde72d2835e7f5b847f>` s_pfCMGetAPI2( "NetClientReleaseChannel", (RTS_VOID_FCTPTR *)&pfNetClientReleaseChannel, (fl), 0, 0)

- #define :ref:`CAL_NetClientReleaseChannel <group___cmp_channel_client_itf_1gac18b4ed1ab7361ffd03627c0dcb42636>` pfNetClientReleaseChannel

- #define :ref:`CHK_NetClientReleaseChannel <group___cmp_channel_client_itf_1gaf7e6073618bbe621e0a0ee65cc2dee8e>` (pfNetClientReleaseChannel != NULL)

- #define :ref:`EXP_NetClientReleaseChannel <group___cmp_channel_client_itf_1ga1640da50d1b60fcb32ead577a02c19af>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientReleaseChannel", (RTS_UINTPTR) :ref:`NetClientReleaseChannel <group___cmp_channel_client_itf_1gae6c6377b671c1bf17cbd4c8891f821ee>` , 0, 0)

- #define :ref:`USE_NetClientHandleMetaResponse <group___cmp_channel_client_itf_1ga78031155d91bac1ad6b51639261fb053>` :ref:`PFNETCLIENTHANDLEMETARESPONSE <group___cmp_channel_client_itf_1gade23a8635fcc42daa2b97139aa4dd66b>` pfNetClientHandleMetaResponse;

- #define :ref:`EXT_NetClientHandleMetaResponse <group___cmp_channel_client_itf_1ga2bb2a48e38609812efb276ba408a725d>` extern :ref:`PFNETCLIENTHANDLEMETARESPONSE <group___cmp_channel_client_itf_1gade23a8635fcc42daa2b97139aa4dd66b>` pfNetClientHandleMetaResponse;

- #define :ref:`GET_NetClientHandleMetaResponse <group___cmp_channel_client_itf_1ga9ba40f386336377a11920d763fa97309>` s_pfCMGetAPI2( "NetClientHandleMetaResponse", (RTS_VOID_FCTPTR *)&pfNetClientHandleMetaResponse, (fl), 0, 0)

- #define :ref:`CAL_NetClientHandleMetaResponse <group___cmp_channel_client_itf_1gaf6ac838cbe546c718007e4af1d278ef8>` pfNetClientHandleMetaResponse

- #define :ref:`CHK_NetClientHandleMetaResponse <group___cmp_channel_client_itf_1ga9ee6043206a225c40567c12c5ca9f6ac>` (pfNetClientHandleMetaResponse != NULL)

- #define :ref:`EXP_NetClientHandleMetaResponse <group___cmp_channel_client_itf_1ga59e51c850f9a33ddd9f40485265468ba>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientHandleMetaResponse", (RTS_UINTPTR) :ref:`NetClientHandleMetaResponse <group___cmp_channel_client_itf_1ga20a4b4b14d10a20c0f16d35c3d7c6411>` , 0, 0)

- #define :ref:`USE_NetClientForEachChannel <group___cmp_channel_client_itf_1gacc94ac9ad4ce5a3f53b48400f1ef2767>` :ref:`PFNETCLIENTFOREACHCHANNEL <group___cmp_channel_client_itf_1gaf49c8601f3208b1ac4918a5095bb16a2>` pfNetClientForEachChannel;

- #define :ref:`EXT_NetClientForEachChannel <group___cmp_channel_client_itf_1gac19fa14f69f5c971c5671bb2ab16921c>` extern :ref:`PFNETCLIENTFOREACHCHANNEL <group___cmp_channel_client_itf_1gaf49c8601f3208b1ac4918a5095bb16a2>` pfNetClientForEachChannel;

- #define :ref:`GET_NetClientForEachChannel <group___cmp_channel_client_itf_1gadc90f06af2cb26600418f120d5ce843d>` s_pfCMGetAPI2( "NetClientForEachChannel", (RTS_VOID_FCTPTR *)&pfNetClientForEachChannel, (fl), 0, 0)

- #define :ref:`CAL_NetClientForEachChannel <group___cmp_channel_client_itf_1ga91be80d88aa7d888d6af9c21b8ba5fc6>` pfNetClientForEachChannel

- #define :ref:`CHK_NetClientForEachChannel <group___cmp_channel_client_itf_1ga8aea7da10cf9b971770772c91018f4d8>` (pfNetClientForEachChannel != NULL)

- #define :ref:`EXP_NetClientForEachChannel <group___cmp_channel_client_itf_1gaba8b0ad1362acdea919c7a08beaf396c>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientForEachChannel", (RTS_UINTPTR) :ref:`NetClientForEachChannel <group___cmp_channel_client_itf_1ga7c50783fe2fdaa41225be6767539123c>` , 0, 0)

- #define :ref:`USE_NetClientMessageReceived <group___cmp_channel_client_itf_1ga4474990dc16570ff6db194ca78c72c59>` :ref:`PFNETCLIENTMESSAGERECEIVED <group___cmp_channel_client_itf_1ga73b982ad965ee878071d388e971af7db>` pfNetClientMessageReceived;

- #define :ref:`EXT_NetClientMessageReceived <group___cmp_channel_client_itf_1gadb8a695e5a05e38d43c942ab5b2a946f>` extern :ref:`PFNETCLIENTMESSAGERECEIVED <group___cmp_channel_client_itf_1ga73b982ad965ee878071d388e971af7db>` pfNetClientMessageReceived;

- #define :ref:`GET_NetClientMessageReceived <group___cmp_channel_client_itf_1gaab681a69f218cd742886ea1a6cf228b0>` s_pfCMGetAPI2( "NetClientMessageReceived", (RTS_VOID_FCTPTR *)&pfNetClientMessageReceived, (fl), 0, 0)

- #define :ref:`CAL_NetClientMessageReceived <group___cmp_channel_client_itf_1gaa29234da652fa1af63c665b65b7621d1>` pfNetClientMessageReceived

- #define :ref:`CHK_NetClientMessageReceived <group___cmp_channel_client_itf_1ga15d7375350b0cfe44874feeccd4540ce>` (pfNetClientMessageReceived != NULL)

- #define :ref:`EXP_NetClientMessageReceived <group___cmp_channel_client_itf_1ga506f55a0c9b7554667147b1af48db0ba>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientMessageReceived", (RTS_UINTPTR) :ref:`NetClientMessageReceived <group___cmp_channel_client_itf_1gae8dfed35445ca89fc1a42993cd1de03a>` , 0, 0)

- #define :ref:`USE_NetClientChannelError <group___cmp_channel_client_itf_1gaf2b54938114dea403fca1fb6bc389a5e>` :ref:`PFNETCLIENTCHANNELERROR <group___cmp_channel_client_itf_1ga034ffa0ee35d286e4ae689e747e80297>` pfNetClientChannelError;

- #define :ref:`EXT_NetClientChannelError <group___cmp_channel_client_itf_1gaf056218beda114479c8cdd87588d5b8a>` extern :ref:`PFNETCLIENTCHANNELERROR <group___cmp_channel_client_itf_1ga034ffa0ee35d286e4ae689e747e80297>` pfNetClientChannelError;

- #define :ref:`GET_NetClientChannelError <group___cmp_channel_client_itf_1gae60d694dae9ae0144e5fd9d0f439d85b>` s_pfCMGetAPI2( "NetClientChannelError", (RTS_VOID_FCTPTR *)&pfNetClientChannelError, (fl), 0, 0)

- #define :ref:`CAL_NetClientChannelError <group___cmp_channel_client_itf_1ga7085f62d649709c6db4e1465b96b4905>` pfNetClientChannelError

- #define :ref:`CHK_NetClientChannelError <group___cmp_channel_client_itf_1gaef2d886746c9acb569369c5b9b09d829>` (pfNetClientChannelError != NULL)

- #define :ref:`EXP_NetClientChannelError <group___cmp_channel_client_itf_1ga6282bfe2d45859c184c5c2ed7f4091a5>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientChannelError", (RTS_UINTPTR) :ref:`NetClientChannelError <group___cmp_channel_client_itf_1ga36f2231e1baa39e5b195754f6ebb4387>` , 0, 0)

- #define :ref:`USE_NetClientRegisterAppInterface <group___cmp_channel_client_itf_1ga9cb236c66388f95722877a0718ffae0a>` :ref:`PFNETCLIENTREGISTERAPPINTERFACE <group___cmp_channel_client_itf_1ga71b10ab88f26772457ce1099441a800a>` pfNetClientRegisterAppInterface;

- #define :ref:`EXT_NetClientRegisterAppInterface <group___cmp_channel_client_itf_1gac69d55c63b48e687cb256cef53bd217a>` extern :ref:`PFNETCLIENTREGISTERAPPINTERFACE <group___cmp_channel_client_itf_1ga71b10ab88f26772457ce1099441a800a>` pfNetClientRegisterAppInterface;

- #define :ref:`GET_NetClientRegisterAppInterface <group___cmp_channel_client_itf_1gaa0b5a921fb9cbe20127f498f57c8262f>` s_pfCMGetAPI2( "NetClientRegisterAppInterface", (RTS_VOID_FCTPTR *)&pfNetClientRegisterAppInterface, (fl), 0, 0)

- #define :ref:`CAL_NetClientRegisterAppInterface <group___cmp_channel_client_itf_1ga2671bbc09109b39793925c24f7468cf8>` pfNetClientRegisterAppInterface

- #define :ref:`CHK_NetClientRegisterAppInterface <group___cmp_channel_client_itf_1ga407a0d1b7c7cb9a9aa200c6e23a75744>` (pfNetClientRegisterAppInterface != NULL)

- #define :ref:`EXP_NetClientRegisterAppInterface <group___cmp_channel_client_itf_1gacd1446623f3403e7324619bb630ec70c>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientRegisterAppInterface", (RTS_UINTPTR) :ref:`NetClientRegisterAppInterface <group___cmp_channel_client_itf_1ga05555228373562e05a8fd458171bcea2>` , 0, 0)

- #define :ref:`USE_NetClientUnregisterAppInterface <group___cmp_channel_client_itf_1gaa20464048561dbb9540d42b8f418b91b>` :ref:`PFNETCLIENTUNREGISTERAPPINTERFACE <group___cmp_channel_client_itf_1ga827ed81e07f1988b4f9dc9d55f6e4611>` pfNetClientUnregisterAppInterface;

- #define :ref:`EXT_NetClientUnregisterAppInterface <group___cmp_channel_client_itf_1gaed7c138ae57b80a5455261693491836d>` extern :ref:`PFNETCLIENTUNREGISTERAPPINTERFACE <group___cmp_channel_client_itf_1ga827ed81e07f1988b4f9dc9d55f6e4611>` pfNetClientUnregisterAppInterface;

- #define :ref:`GET_NetClientUnregisterAppInterface <group___cmp_channel_client_itf_1ga48ea26c39ed97168031cd8d3074ecca4>` s_pfCMGetAPI2( "NetClientUnregisterAppInterface", (RTS_VOID_FCTPTR *)&pfNetClientUnregisterAppInterface, (fl), 0, 0)

- #define :ref:`CAL_NetClientUnregisterAppInterface <group___cmp_channel_client_itf_1gae0e92876d2e3a2c46024d1f30697d9a5>` pfNetClientUnregisterAppInterface

- #define :ref:`CHK_NetClientUnregisterAppInterface <group___cmp_channel_client_itf_1ga5dbeff6aabec2b01b22a29294e6f7836>` (pfNetClientUnregisterAppInterface != NULL)

- #define :ref:`EXP_NetClientUnregisterAppInterface <group___cmp_channel_client_itf_1gafb255ddf3038f993cb5b151a85d78c79>` s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientUnregisterAppInterface", (RTS_UINTPTR) :ref:`NetClientUnregisterAppInterface <group___cmp_channel_client_itf_1ga22c1658c69a4ea5520f627b68a2c80e4>` , 0, 0)

- #define :ref:`ITF_CmpChannelClient <group___cmp_channel_client_itf_1ga285ec741943189deab9f7ef94f30c1c3>`

- #define :ref:`EXTITF_CmpChannelClient <group___cmp_channel_client_itf_1ga4d0559a2ff51701989c3862591f68d65>`

Typedefs
--------

- typedef int(* :ref:`PFNETCLIENTOPENCHANNEL <group___cmp_channel_client_itf_1ga8c7af8eec23b2c54ba46d226b52cf8df>`)(PEERADDRESS addrReceiver, RTS_UI32 dwCommBufferSize, RTS_UI32 *pdwReqId)

- typedef int(* :ref:`PFNETCLIENTOPENCHANNELRESULT <group___cmp_channel_client_itf_1ga56134392f1f93d2d430632011a702fce>`)(RTS_UI32 dwRequestId, unsigned short *pwChannelHandle, RTS_UI32 *pdwCommBufferSize, RTS_BOOL *pbBigEndianByteOrder)

- typedef int(* :ref:`PFNETCLIENTCLOSECHANNEL <group___cmp_channel_client_itf_1gac692c15c87b4589d9d73bb690fbd43e2>`)(unsigned short wChannelHandle)

- typedef int(* :ref:`PFNETCLIENTSEND <group___cmp_channel_client_itf_1gad9756162ce66308f7edf476beebd9428>`)(unsigned short wChannelHandle, PROTOCOL_DATA_UNIT pduData)

- typedef RTS_RESULT(* :ref:`PFNETCLIENTGETSTATUS <group___cmp_channel_client_itf_1ga6961ac9a14ba79a87d29396a748e842a>`)(unsigned short wChannelHandle, RTS_UI16 *pusStatus, RTS_UI8 *pbyScalingFactor, RTS_I32 *pnItemsComplete, RTS_I32 *pnTotalItems)

- typedef int(* :ref:`PFNETCLIENTGETCHANNEL <group___cmp_channel_client_itf_1ga437f9af04deb95e8bdd98735bf7b0845>`)(PEERADDRESS addrPeer, unsigned short wChannelId, CHANNELBUFFER **ppChBuffer)

- typedef int(* :ref:`PFNETCLIENTRELEASECHANNEL <group___cmp_channel_client_itf_1gacb67a53ea6153de60c2fc24fa4957f94>`)(CHANNELBUFFER *pChBuffer)

- typedef int(* :ref:`PFNETCLIENTHANDLEMETARESPONSE <group___cmp_channel_client_itf_1gade23a8635fcc42daa2b97139aa4dd66b>`)(RTS_HANDLE hRouter, PEERADDRESS addrSender, PROTOCOL_DATA_UNIT pduData)

- typedef void(* :ref:`PFNETCLIENTFOREACHCHANNEL <group___cmp_channel_client_itf_1gaf49c8601f3208b1ac4918a5095bb16a2>`)(PFCHANNELHANDLER pfChannelHandler, void *pParam)

- typedef int(* :ref:`PFNETCLIENTMESSAGERECEIVED <group___cmp_channel_client_itf_1ga73b982ad965ee878071d388e971af7db>`)(CHANNELBUFFER *pChBuffer, PROTOCOL_DATA_UNIT pduData)

- typedef int(* :ref:`PFNETCLIENTCHANNELERROR <group___cmp_channel_client_itf_1ga034ffa0ee35d286e4ae689e747e80297>`)(CHANNELBUFFER *pChBuffer, int nError)

- typedef RTS_RESULT(* :ref:`PFNETCLIENTREGISTERAPPINTERFACE <group___cmp_channel_client_itf_1ga71b10ab88f26772457ce1099441a800a>`)(unsigned short wChannelHandle, ICmpChannelClientApp *pIChannelClientApp)

- typedef RTS_RESULT(* :ref:`PFNETCLIENTUNREGISTERAPPINTERFACE <group___cmp_channel_client_itf_1ga827ed81e07f1988b4f9dc9d55f6e4611>`)(unsigned short wChannelHandle, ICmpChannelClientApp *pIChannelClientApp)

- typedef :ref:`ICmpChannelClient_C <struct_i_cmp_channel_client___c>` :ref:`ICmpChannelClient <group___cmp_channel_client_itf_1gaee641198e12a3ff2354ce1c213212cb6>`

Functions
---------

- int :ref:`NetClientOpenChannel <group___cmp_channel_client_itf_1gab2aead3da2368d469348afeb5c46035e>` (:ref:`PEERADDRESS <struct_p_e_e_r_a_d_d_r_e_s_s>`  addrReceiver, RTS_UI32 dwCommBufferSize, RTS_UI32 * pdwReqId)

- int :ref:`NetClientOpenChannelResult <group___cmp_channel_client_itf_1ga52c68deb60b2e7f8894aa1dbf2003a5f>` (RTS_UI32 dwRequestId, unsigned short * pwChannelHandle, RTS_UI32 * pdwCommBufferSize, RTS_BOOL * pbBigEndianByteOrder)

- int :ref:`NetClientCloseChannel <group___cmp_channel_client_itf_1gabda2f025fe5ace90a3671692198e2e80>` (unsigned short wChannelHandle)

- int :ref:`NetClientSend <group___cmp_channel_client_itf_1gaa72b2cdeaa16f9c6d0e9224ab80cfd65>` (unsigned short wChannelHandle, :ref:`PROTOCOL_DATA_UNIT <struct_p_r_o_t_o_c_o_l___d_a_t_a___u_n_i_t>`  pduData)

- RTS_RESULT :ref:`NetClientGetStatus <group___cmp_channel_client_itf_1gad1e54850f18ac1f5202d2b43cf386230>` (unsigned short wChannelHandle, RTS_UI16 * pusStatus, RTS_UI8 * pbyScalingFactor, RTS_I32 * pnItemsComplete, RTS_I32 * pnTotalItems)

- int :ref:`NetClientGetChannel <group___cmp_channel_client_itf_1gad10cc3debf1828a0c443ffd0d248cb3d>` (:ref:`PEERADDRESS <struct_p_e_e_r_a_d_d_r_e_s_s>`  addrPeer, unsigned short wChannelId, :ref:`CHANNELBUFFER <struct_c_h_a_n_n_e_l_b_u_f_f_e_r>` ** ppChBuffer)

- int :ref:`NetClientReleaseChannel <group___cmp_channel_client_itf_1gae6c6377b671c1bf17cbd4c8891f821ee>` (:ref:`CHANNELBUFFER <struct_c_h_a_n_n_e_l_b_u_f_f_e_r>` * pChBuffer)

- int :ref:`NetClientHandleMetaResponse <group___cmp_channel_client_itf_1ga20a4b4b14d10a20c0f16d35c3d7c6411>` (RTS_HANDLE hRouter, :ref:`PEERADDRESS <struct_p_e_e_r_a_d_d_r_e_s_s>`  addrSender, :ref:`PROTOCOL_DATA_UNIT <struct_p_r_o_t_o_c_o_l___d_a_t_a___u_n_i_t>`  pduData)

- void :ref:`NetClientForEachChannel <group___cmp_channel_client_itf_1ga7c50783fe2fdaa41225be6767539123c>` (:ref:`PFCHANNELHANDLER <group___cmp_channel_mgr_itf_1ga8c4811d959c773e621773f2fa54e04a4>`  pfChannelHandler, void * pParam)

- int :ref:`NetClientMessageReceived <group___cmp_channel_client_itf_1gae8dfed35445ca89fc1a42993cd1de03a>` (:ref:`CHANNELBUFFER <struct_c_h_a_n_n_e_l_b_u_f_f_e_r>` * pChBuffer, :ref:`PROTOCOL_DATA_UNIT <struct_p_r_o_t_o_c_o_l___d_a_t_a___u_n_i_t>`  pduData)

- int :ref:`NetClientChannelError <group___cmp_channel_client_itf_1ga36f2231e1baa39e5b195754f6ebb4387>` (:ref:`CHANNELBUFFER <struct_c_h_a_n_n_e_l_b_u_f_f_e_r>` * pChBuffer, int nError)

- RTS_RESULT :ref:`NetClientRegisterAppInterface <group___cmp_channel_client_itf_1ga05555228373562e05a8fd458171bcea2>` (unsigned short wChannelHandle, :ref:`ICmpChannelClientApp <group___cmp_channel_client_app_itf_1ga2ede08f9cd29e5620f0901e49fa96f42>` * pIChannelClientApp)

- RTS_RESULT :ref:`NetClientUnregisterAppInterface <group___cmp_channel_client_itf_1ga22c1658c69a4ea5520f627b68a2c80e4>` (unsigned short wChannelHandle, :ref:`ICmpChannelClientApp <group___cmp_channel_client_app_itf_1ga2ede08f9cd29e5620f0901e49fa96f42>` * pIChannelClientApp)

Macro Definition Documentation
------------------------------
.. _group___cmp_channel_client_itf_1ga64f4ed6d0199763ae09623ec61623b61:

#define __EXTERNAL_DECL
^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga2ed272ccec5058a7508f381496b1b54f:

#define USE_NetClientOpenChannel :ref:`PFNETCLIENTOPENCHANNEL <group___cmp_channel_client_itf_1ga8c7af8eec23b2c54ba46d226b52cf8df>` pfNetClientOpenChannel;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gae2fd911f9ecb3ac7a6f4e74c9269b97e:

#define EXT_NetClientOpenChannel extern :ref:`PFNETCLIENTOPENCHANNEL <group___cmp_channel_client_itf_1ga8c7af8eec23b2c54ba46d226b52cf8df>` pfNetClientOpenChannel;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga507f1a413b008dfda13d1d5ab80dee1e:

#define GET_NetClientOpenChannel s_pfCMGetAPI2( "NetClientOpenChannel", (RTS_VOID_FCTPTR *)&pfNetClientOpenChannel, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga5c47a8dd19605f6f9d003dff950f5928:

#define CAL_NetClientOpenChannel pfNetClientOpenChannel
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gafff24625fac827e3db205226f828f18a:

#define CHK_NetClientOpenChannel (pfNetClientOpenChannel != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gadabf746c502ff26c7cb815ed8214161a:

#define EXP_NetClientOpenChannel s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientOpenChannel", (RTS_UINTPTR) :ref:`NetClientOpenChannel <group___cmp_channel_client_itf_1gab2aead3da2368d469348afeb5c46035e>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaaa3dafd00f737415f1100a62aabd21aa:

#define USE_NetClientOpenChannelResult :ref:`PFNETCLIENTOPENCHANNELRESULT <group___cmp_channel_client_itf_1ga56134392f1f93d2d430632011a702fce>` pfNetClientOpenChannelResult;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga5d63015715d1f03c6241641cb801b13e:

#define EXT_NetClientOpenChannelResult extern :ref:`PFNETCLIENTOPENCHANNELRESULT <group___cmp_channel_client_itf_1ga56134392f1f93d2d430632011a702fce>` pfNetClientOpenChannelResult;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga71cc3522af024d1a7f96b7cb8fca94b0:

#define GET_NetClientOpenChannelResult s_pfCMGetAPI2( "NetClientOpenChannelResult", (RTS_VOID_FCTPTR *)&pfNetClientOpenChannelResult, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga90961598d31e21ff69ee1d4e5901cb56:

#define CAL_NetClientOpenChannelResult pfNetClientOpenChannelResult
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga0c7cb44010fa0633bf2c246e993c1ea7:

#define CHK_NetClientOpenChannelResult (pfNetClientOpenChannelResult != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga87af0c52e9464951caa0ef05e7e38c5c:

#define EXP_NetClientOpenChannelResult s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientOpenChannelResult", (RTS_UINTPTR) :ref:`NetClientOpenChannelResult <group___cmp_channel_client_itf_1ga52c68deb60b2e7f8894aa1dbf2003a5f>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga89755842bd5187c1423aef570402f353:

#define USE_NetClientCloseChannel :ref:`PFNETCLIENTCLOSECHANNEL <group___cmp_channel_client_itf_1gac692c15c87b4589d9d73bb690fbd43e2>` pfNetClientCloseChannel;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gadac9507b7623c5b6846eab96f0f31599:

#define EXT_NetClientCloseChannel extern :ref:`PFNETCLIENTCLOSECHANNEL <group___cmp_channel_client_itf_1gac692c15c87b4589d9d73bb690fbd43e2>` pfNetClientCloseChannel;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga736742199925542ea253083fc3ea2a20:

#define GET_NetClientCloseChannel s_pfCMGetAPI2( "NetClientCloseChannel", (RTS_VOID_FCTPTR *)&pfNetClientCloseChannel, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga753694815ed4aff436d366c9d6c54772:

#define CAL_NetClientCloseChannel pfNetClientCloseChannel
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga6a6c03f181283603cd9168b4948e1986:

#define CHK_NetClientCloseChannel (pfNetClientCloseChannel != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga3280bad39704b23262473edfbb898c9a:

#define EXP_NetClientCloseChannel s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientCloseChannel", (RTS_UINTPTR) :ref:`NetClientCloseChannel <group___cmp_channel_client_itf_1gabda2f025fe5ace90a3671692198e2e80>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gacc0243ba6a52b593109ef345bf43bd4b:

#define USE_NetClientSend :ref:`PFNETCLIENTSEND <group___cmp_channel_client_itf_1gad9756162ce66308f7edf476beebd9428>` pfNetClientSend;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga9e1137c38210d84395f7961195f01590:

#define EXT_NetClientSend extern :ref:`PFNETCLIENTSEND <group___cmp_channel_client_itf_1gad9756162ce66308f7edf476beebd9428>` pfNetClientSend;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga5c943bdff4a4899509298c4b033474bb:

#define GET_NetClientSend s_pfCMGetAPI2( "NetClientSend", (RTS_VOID_FCTPTR *)&pfNetClientSend, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga9fd147f1e6c41164760f4072f784319d:

#define CAL_NetClientSend pfNetClientSend
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga2c0c0f6908ac0ae104e53a1c3559884f:

#define CHK_NetClientSend (pfNetClientSend != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga846b5b98eecd5ea9e1c5fb27aedea06e:

#define EXP_NetClientSend s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientSend", (RTS_UINTPTR) :ref:`NetClientSend <group___cmp_channel_client_itf_1gaa72b2cdeaa16f9c6d0e9224ab80cfd65>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga1ad5650c8ab51aae9b00245bd109a338:

#define USE_NetClientGetStatus :ref:`PFNETCLIENTGETSTATUS <group___cmp_channel_client_itf_1ga6961ac9a14ba79a87d29396a748e842a>` pfNetClientGetStatus;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga7145dc142255f7c79b8d803a332d169a:

#define EXT_NetClientGetStatus extern :ref:`PFNETCLIENTGETSTATUS <group___cmp_channel_client_itf_1ga6961ac9a14ba79a87d29396a748e842a>` pfNetClientGetStatus;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gacb3fd6b764f0e5537950bb421a68e476:

#define GET_NetClientGetStatus s_pfCMGetAPI2( "NetClientGetStatus", (RTS_VOID_FCTPTR *)&pfNetClientGetStatus, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gad399c413809f86691ea4062450bdcf8c:

#define CAL_NetClientGetStatus pfNetClientGetStatus
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga047895ef5c8dfefbabb91f43d774058e:

#define CHK_NetClientGetStatus (pfNetClientGetStatus != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga2b311f43ebb7197ce726500e83c2640f:

#define EXP_NetClientGetStatus s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientGetStatus", (RTS_UINTPTR) :ref:`NetClientGetStatus <group___cmp_channel_client_itf_1gad1e54850f18ac1f5202d2b43cf386230>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gad4767ab288f20e9bb5a7c14679bfb75a:

#define USE_NetClientGetChannel :ref:`PFNETCLIENTGETCHANNEL <group___cmp_channel_client_itf_1ga437f9af04deb95e8bdd98735bf7b0845>` pfNetClientGetChannel;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga5fe54808901dd56444cd8111ae05bb79:

#define EXT_NetClientGetChannel extern :ref:`PFNETCLIENTGETCHANNEL <group___cmp_channel_client_itf_1ga437f9af04deb95e8bdd98735bf7b0845>` pfNetClientGetChannel;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga48c45cb85ad8b8b990017ea8cde14138:

#define GET_NetClientGetChannel s_pfCMGetAPI2( "NetClientGetChannel", (RTS_VOID_FCTPTR *)&pfNetClientGetChannel, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga9ef61adc0fbb7b702c81e4a59fc58bf7:

#define CAL_NetClientGetChannel pfNetClientGetChannel
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga5685751afd9fbfdf8c2a7fba7f5befcb:

#define CHK_NetClientGetChannel (pfNetClientGetChannel != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaabb4a152fd724f9768aa8eabf53b8b52:

#define EXP_NetClientGetChannel s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientGetChannel", (RTS_UINTPTR) :ref:`NetClientGetChannel <group___cmp_channel_client_itf_1gad10cc3debf1828a0c443ffd0d248cb3d>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga6284aa3f6222f6800498c1f330043d69:

#define USE_NetClientReleaseChannel :ref:`PFNETCLIENTRELEASECHANNEL <group___cmp_channel_client_itf_1gacb67a53ea6153de60c2fc24fa4957f94>` pfNetClientReleaseChannel;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga2ec9db10577c76a7a9eb25d225508700:

#define EXT_NetClientReleaseChannel extern :ref:`PFNETCLIENTRELEASECHANNEL <group___cmp_channel_client_itf_1gacb67a53ea6153de60c2fc24fa4957f94>` pfNetClientReleaseChannel;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga03ba3e0025221bde72d2835e7f5b847f:

#define GET_NetClientReleaseChannel s_pfCMGetAPI2( "NetClientReleaseChannel", (RTS_VOID_FCTPTR *)&pfNetClientReleaseChannel, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gac18b4ed1ab7361ffd03627c0dcb42636:

#define CAL_NetClientReleaseChannel pfNetClientReleaseChannel
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaf7e6073618bbe621e0a0ee65cc2dee8e:

#define CHK_NetClientReleaseChannel (pfNetClientReleaseChannel != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga1640da50d1b60fcb32ead577a02c19af:

#define EXP_NetClientReleaseChannel s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientReleaseChannel", (RTS_UINTPTR) :ref:`NetClientReleaseChannel <group___cmp_channel_client_itf_1gae6c6377b671c1bf17cbd4c8891f821ee>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga78031155d91bac1ad6b51639261fb053:

#define USE_NetClientHandleMetaResponse :ref:`PFNETCLIENTHANDLEMETARESPONSE <group___cmp_channel_client_itf_1gade23a8635fcc42daa2b97139aa4dd66b>` pfNetClientHandleMetaResponse;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga2bb2a48e38609812efb276ba408a725d:

#define EXT_NetClientHandleMetaResponse extern :ref:`PFNETCLIENTHANDLEMETARESPONSE <group___cmp_channel_client_itf_1gade23a8635fcc42daa2b97139aa4dd66b>` pfNetClientHandleMetaResponse;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga9ba40f386336377a11920d763fa97309:

#define GET_NetClientHandleMetaResponse s_pfCMGetAPI2( "NetClientHandleMetaResponse", (RTS_VOID_FCTPTR *)&pfNetClientHandleMetaResponse, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaf6ac838cbe546c718007e4af1d278ef8:

#define CAL_NetClientHandleMetaResponse pfNetClientHandleMetaResponse
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga9ee6043206a225c40567c12c5ca9f6ac:

#define CHK_NetClientHandleMetaResponse (pfNetClientHandleMetaResponse != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga59e51c850f9a33ddd9f40485265468ba:

#define EXP_NetClientHandleMetaResponse s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientHandleMetaResponse", (RTS_UINTPTR) :ref:`NetClientHandleMetaResponse <group___cmp_channel_client_itf_1ga20a4b4b14d10a20c0f16d35c3d7c6411>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gacc94ac9ad4ce5a3f53b48400f1ef2767:

#define USE_NetClientForEachChannel :ref:`PFNETCLIENTFOREACHCHANNEL <group___cmp_channel_client_itf_1gaf49c8601f3208b1ac4918a5095bb16a2>` pfNetClientForEachChannel;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gac19fa14f69f5c971c5671bb2ab16921c:

#define EXT_NetClientForEachChannel extern :ref:`PFNETCLIENTFOREACHCHANNEL <group___cmp_channel_client_itf_1gaf49c8601f3208b1ac4918a5095bb16a2>` pfNetClientForEachChannel;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gadc90f06af2cb26600418f120d5ce843d:

#define GET_NetClientForEachChannel s_pfCMGetAPI2( "NetClientForEachChannel", (RTS_VOID_FCTPTR *)&pfNetClientForEachChannel, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga91be80d88aa7d888d6af9c21b8ba5fc6:

#define CAL_NetClientForEachChannel pfNetClientForEachChannel
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga8aea7da10cf9b971770772c91018f4d8:

#define CHK_NetClientForEachChannel (pfNetClientForEachChannel != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaba8b0ad1362acdea919c7a08beaf396c:

#define EXP_NetClientForEachChannel s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientForEachChannel", (RTS_UINTPTR) :ref:`NetClientForEachChannel <group___cmp_channel_client_itf_1ga7c50783fe2fdaa41225be6767539123c>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga4474990dc16570ff6db194ca78c72c59:

#define USE_NetClientMessageReceived :ref:`PFNETCLIENTMESSAGERECEIVED <group___cmp_channel_client_itf_1ga73b982ad965ee878071d388e971af7db>` pfNetClientMessageReceived;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gadb8a695e5a05e38d43c942ab5b2a946f:

#define EXT_NetClientMessageReceived extern :ref:`PFNETCLIENTMESSAGERECEIVED <group___cmp_channel_client_itf_1ga73b982ad965ee878071d388e971af7db>` pfNetClientMessageReceived;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaab681a69f218cd742886ea1a6cf228b0:

#define GET_NetClientMessageReceived s_pfCMGetAPI2( "NetClientMessageReceived", (RTS_VOID_FCTPTR *)&pfNetClientMessageReceived, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaa29234da652fa1af63c665b65b7621d1:

#define CAL_NetClientMessageReceived pfNetClientMessageReceived
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga15d7375350b0cfe44874feeccd4540ce:

#define CHK_NetClientMessageReceived (pfNetClientMessageReceived != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga506f55a0c9b7554667147b1af48db0ba:

#define EXP_NetClientMessageReceived s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientMessageReceived", (RTS_UINTPTR) :ref:`NetClientMessageReceived <group___cmp_channel_client_itf_1gae8dfed35445ca89fc1a42993cd1de03a>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaf2b54938114dea403fca1fb6bc389a5e:

#define USE_NetClientChannelError :ref:`PFNETCLIENTCHANNELERROR <group___cmp_channel_client_itf_1ga034ffa0ee35d286e4ae689e747e80297>` pfNetClientChannelError;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaf056218beda114479c8cdd87588d5b8a:

#define EXT_NetClientChannelError extern :ref:`PFNETCLIENTCHANNELERROR <group___cmp_channel_client_itf_1ga034ffa0ee35d286e4ae689e747e80297>` pfNetClientChannelError;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gae60d694dae9ae0144e5fd9d0f439d85b:

#define GET_NetClientChannelError s_pfCMGetAPI2( "NetClientChannelError", (RTS_VOID_FCTPTR *)&pfNetClientChannelError, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga7085f62d649709c6db4e1465b96b4905:

#define CAL_NetClientChannelError pfNetClientChannelError
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaef2d886746c9acb569369c5b9b09d829:

#define CHK_NetClientChannelError (pfNetClientChannelError != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga6282bfe2d45859c184c5c2ed7f4091a5:

#define EXP_NetClientChannelError s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientChannelError", (RTS_UINTPTR) :ref:`NetClientChannelError <group___cmp_channel_client_itf_1ga36f2231e1baa39e5b195754f6ebb4387>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga9cb236c66388f95722877a0718ffae0a:

#define USE_NetClientRegisterAppInterface :ref:`PFNETCLIENTREGISTERAPPINTERFACE <group___cmp_channel_client_itf_1ga71b10ab88f26772457ce1099441a800a>` pfNetClientRegisterAppInterface;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gac69d55c63b48e687cb256cef53bd217a:

#define EXT_NetClientRegisterAppInterface extern :ref:`PFNETCLIENTREGISTERAPPINTERFACE <group___cmp_channel_client_itf_1ga71b10ab88f26772457ce1099441a800a>` pfNetClientRegisterAppInterface;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaa0b5a921fb9cbe20127f498f57c8262f:

#define GET_NetClientRegisterAppInterface s_pfCMGetAPI2( "NetClientRegisterAppInterface", (RTS_VOID_FCTPTR *)&pfNetClientRegisterAppInterface, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga2671bbc09109b39793925c24f7468cf8:

#define CAL_NetClientRegisterAppInterface pfNetClientRegisterAppInterface
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga407a0d1b7c7cb9a9aa200c6e23a75744:

#define CHK_NetClientRegisterAppInterface (pfNetClientRegisterAppInterface != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gacd1446623f3403e7324619bb630ec70c:

#define EXP_NetClientRegisterAppInterface s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientRegisterAppInterface", (RTS_UINTPTR) :ref:`NetClientRegisterAppInterface <group___cmp_channel_client_itf_1ga05555228373562e05a8fd458171bcea2>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaa20464048561dbb9540d42b8f418b91b:

#define USE_NetClientUnregisterAppInterface :ref:`PFNETCLIENTUNREGISTERAPPINTERFACE <group___cmp_channel_client_itf_1ga827ed81e07f1988b4f9dc9d55f6e4611>` pfNetClientUnregisterAppInterface;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaed7c138ae57b80a5455261693491836d:

#define EXT_NetClientUnregisterAppInterface extern :ref:`PFNETCLIENTUNREGISTERAPPINTERFACE <group___cmp_channel_client_itf_1ga827ed81e07f1988b4f9dc9d55f6e4611>` pfNetClientUnregisterAppInterface;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga48ea26c39ed97168031cd8d3074ecca4:

#define GET_NetClientUnregisterAppInterface s_pfCMGetAPI2( "NetClientUnregisterAppInterface", (RTS_VOID_FCTPTR *)&pfNetClientUnregisterAppInterface, (fl), 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gae0e92876d2e3a2c46024d1f30697d9a5:

#define CAL_NetClientUnregisterAppInterface pfNetClientUnregisterAppInterface
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga5dbeff6aabec2b01b22a29294e6f7836:

#define CHK_NetClientUnregisterAppInterface (pfNetClientUnregisterAppInterface != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gafb255ddf3038f993cb5b151a85d78c79:

#define EXP_NetClientUnregisterAppInterface s_pfCMRegisterAPI( (const CMP_EXT_FUNCTION_REF*)"NetClientUnregisterAppInterface", (RTS_UINTPTR) :ref:`NetClientUnregisterAppInterface <group___cmp_channel_client_itf_1ga22c1658c69a4ea5520f627b68a2c80e4>` , 0, 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga285ec741943189deab9f7ef94f30c1c3:

#define ITF_CmpChannelClient
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga4d0559a2ff51701989c3862591f68d65:

#define EXTITF_CmpChannelClient
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___cmp_channel_client_itf_1ga8c7af8eec23b2c54ba46d226b52cf8df:

typedef int( *  PFNETCLIENTOPENCHANNEL) (PEERADDRESS addrReceiver, RTS_UI32 dwCommBufferSize, RTS_UI32 *pdwReqId)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga56134392f1f93d2d430632011a702fce:

typedef int( *  PFNETCLIENTOPENCHANNELRESULT) (RTS_UI32 dwRequestId, unsigned short *pwChannelHandle, RTS_UI32 *pdwCommBufferSize, RTS_BOOL *pbBigEndianByteOrder)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gac692c15c87b4589d9d73bb690fbd43e2:

typedef int( *  PFNETCLIENTCLOSECHANNEL) (unsigned short wChannelHandle)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gad9756162ce66308f7edf476beebd9428:

typedef int( *  PFNETCLIENTSEND) (unsigned short wChannelHandle, PROTOCOL_DATA_UNIT pduData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga6961ac9a14ba79a87d29396a748e842a:

typedef RTS_RESULT( *  PFNETCLIENTGETSTATUS) (unsigned short wChannelHandle, RTS_UI16 *pusStatus, RTS_UI8 *pbyScalingFactor, RTS_I32 *pnItemsComplete, RTS_I32 *pnTotalItems)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga437f9af04deb95e8bdd98735bf7b0845:

typedef int( *  PFNETCLIENTGETCHANNEL) (PEERADDRESS addrPeer, unsigned short wChannelId, CHANNELBUFFER **ppChBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gacb67a53ea6153de60c2fc24fa4957f94:

typedef int( *  PFNETCLIENTRELEASECHANNEL) (CHANNELBUFFER *pChBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gade23a8635fcc42daa2b97139aa4dd66b:

typedef int( *  PFNETCLIENTHANDLEMETARESPONSE) (RTS_HANDLE hRouter, PEERADDRESS addrSender, PROTOCOL_DATA_UNIT pduData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaf49c8601f3208b1ac4918a5095bb16a2:

typedef void( *  PFNETCLIENTFOREACHCHANNEL) (PFCHANNELHANDLER pfChannelHandler, void *pParam)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga73b982ad965ee878071d388e971af7db:

typedef int( *  PFNETCLIENTMESSAGERECEIVED) (CHANNELBUFFER *pChBuffer, PROTOCOL_DATA_UNIT pduData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga034ffa0ee35d286e4ae689e747e80297:

typedef int( *  PFNETCLIENTCHANNELERROR) (CHANNELBUFFER *pChBuffer, int nError)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga71b10ab88f26772457ce1099441a800a:

typedef RTS_RESULT( *  PFNETCLIENTREGISTERAPPINTERFACE) (unsigned short wChannelHandle, ICmpChannelClientApp *pIChannelClientApp)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1ga827ed81e07f1988b4f9dc9d55f6e4611:

typedef RTS_RESULT( *  PFNETCLIENTUNREGISTERAPPINTERFACE) (unsigned short wChannelHandle, ICmpChannelClientApp *pIChannelClientApp)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gaee641198e12a3ff2354ce1c213212cb6:

typedef ICmpChannelClient_C ICmpChannelClient
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___cmp_channel_client_itf_1gab2aead3da2368d469348afeb5c46035e:

int NetClientOpenChannel (PEERADDRESS addrReceiver, RTS_UI32 dwCommBufferSize, RTS_UI32 *pdwReqId)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Request a new channel to node addrReceiver . This function is executed asynchronously. To get the result of this call use NetClientOpenChannelResult.

**Parameters**

+---------+------------------+-------------------------------------------------------------------------------------------------------------+
| [in]    | addrReceiver     | Open a channel to this node                                                                                 |
+---------+------------------+-------------------------------------------------------------------------------------------------------------+
| [in]    | dwCommBufferSize | Requested size of the communication buffer                                                                  |
+---------+------------------+-------------------------------------------------------------------------------------------------------------+
| [out]   | pdwReqId         | Set to a unique request id. Use this id in NetClientOpenChannelResult to determine the result of this call. |
+---------+------------------+-------------------------------------------------------------------------------------------------------------+

**Returns:**

  - ERR_OK, if the channel has been established

  - ERR_PENDING, if the function hasn't completed yet.

  - ERR_NOBUFFER, if we're low on memory.

  - ERR_CHC_NUMCHANNELS, if buffers for an additional channel are not available. Possibly a smaller communication buffer could work. Also, this error condition might be temporarily and could change if memory is freed elsewhere.

.. _group___cmp_channel_client_itf_1ga52c68deb60b2e7f8894aa1dbf2003a5f:

int NetClientOpenChannelResult (RTS_UI32 dwRequestId, unsigned short *pwChannelHandle, RTS_UI32 *pdwCommBufferSize, RTS_BOOL *pbBigEndianByteOrder)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get the result of a NetClientOpenChannel request.

**Parameters**

+---------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | dwRequestId          | The request id assigned by the NetClientOpenChannel request.                                                                                                                        |
+---------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pwChannelHandle      | Identifies the newly created channel.                                                                                                                                               |
+---------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pdwCommBufferSize    | The communication buffer used for this channel.                                                                                                                                     |
+---------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pbBigEndianByteOrder | True if the target system uses big endian byte order. Since that is typically used by motorola processors (PowerPC etc.), it sometimes is also referred to as "Motorola byte order" |
+---------+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

ERR_OK, channel has been established ERR_PENDING, is still in progress ERR_FAILED, channel could not be created

.. _group___cmp_channel_client_itf_1gabda2f025fe5ace90a3671692198e2e80:

int NetClientCloseChannel (unsigned short wChannelHandle)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Close a channel. This function is executed synchronously

**Parameters**

+---------+----------------+-----------------------+
| [in]    | wChannelHandle | Handle to the channel |
+---------+----------------+-----------------------+

**Returns:**

An error code, if the handle could not be closed.

.. _group___cmp_channel_client_itf_1gaa72b2cdeaa16f9c6d0e9224ab80cfd65:

int NetClientSend (unsigned short wChannelHandle, PROTOCOL_DATA_UNIT pduData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Send a message. This call will fail, if

  - the channel is not in send mode

  - the channel is already sending

  - the size of the data is greater then the communication buffer size returned by NetClientOpenChannel

**Parameters**

+---------+----------------+----------------------------------------------------------------------------------------------------------------------+
| [in]    | wChannelHandle | Handle to a channel as returned by NetClientOpenChannel                                                              |
+---------+----------------+----------------------------------------------------------------------------------------------------------------------+
| [in]    | pduData        | The data to be sent. The buffer pointed to by pduData may not be changed until the package has been sent completely. |
+---------+----------------+----------------------------------------------------------------------------------------------------------------------+

.. _group___cmp_channel_client_itf_1gad1e54850f18ac1f5202d2b43cf386230:

RTS_RESULT NetClientGetStatus (unsigned short wChannelHandle, RTS_UI16 *pusStatus, RTS_UI8 *pbyScalingFactor, RTS_I32 *pnItemsComplete, RTS_I32 *pnTotalItems)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get the current status of an active channel.

**Parameters**

+---------+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | wChannelHandle   | Handle to a channel as returned by NetClientOpenChannel                                                                                                                                                  |
+---------+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pusStatus        | Is set to the current progress state. The PROGRESS_xxx constants define valid values.                                                                                                                    |
+---------+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pbyScalingFactor | Provides the scaling factor for pnItemsComplete and pnTotalItems. These values have been scaled down by dividing them through 2^ScalingFactor (i.e. they have been right shifted by ScalingFactor bits). |
+---------+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pnItemsComplete  | Number of items completed (eg. the number of bytes transfered).                                                                                                                                          |
+---------+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pnTotalItems     | Total number of item. Is set to -1 if unknown.                                                                                                                                                           |
+---------+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

error code

.. _group___cmp_channel_client_itf_1gad10cc3debf1828a0c443ffd0d248cb3d:

int NetClientGetChannel (PEERADDRESS addrPeer, unsigned short wChannelId, CHANNELBUFFER **ppChBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_channel_client_itf_1gae6c6377b671c1bf17cbd4c8891f821ee:

int NetClientReleaseChannel (CHANNELBUFFER *pChBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Release a channel buffer returned by NetServerGetChannel. This buffer may not be used after calling this function. Use NetServerGetChannel to acquire access to this channel again.

**Parameters**

+---------+-----------+-------------------------------+
| [in]    | pChBuffer | The channel buffer to release |
+---------+-----------+-------------------------------+

.. _group___cmp_channel_client_itf_1ga20a4b4b14d10a20c0f16d35c3d7c6411:

int NetClientHandleMetaResponse (RTS_HANDLE hRouter, PEERADDRESS addrSender, PROTOCOL_DATA_UNIT pduData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Called by the L4Base component each time a meta-response arrives.

**Parameters**

+---------+------------+----------------------------+
| [in]    | addrSender | The sender of the response |
+---------+------------+----------------------------+
| [in]    | pduData    | The response itself        |
+---------+------------+----------------------------+

.. _group___cmp_channel_client_itf_1ga7c50783fe2fdaa41225be6767539123c:

void NetClientForEachChannel (PFCHANNELHANDLER pfChannelHandler, void *pParam)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Calls the pfChannelHandler once for each active server channel

**Parameters**

+---------+------------------+-----------------------------------------------+
| [in]    | pfChannelHandler | Function to be called for each channel        |
+---------+------------------+-----------------------------------------------+
| [inout] | pParam           | This parameter is passed to pfChannelHandler. |
+---------+------------------+-----------------------------------------------+

.. _group___cmp_channel_client_itf_1gae8dfed35445ca89fc1a42993cd1de03a:

int NetClientMessageReceived (CHANNELBUFFER *pChBuffer, PROTOCOL_DATA_UNIT pduData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Called by the L4Base component whenever a complete L7 message arrived on a client channel

**Parameters**

+---------+------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | addrSender | Sender of the message                                                                                                                                                                                                          |
+---------+------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pduData    | Content of the message. The client must copy the contents of the message before sending the next message, since the data pointed to by pData will be valid only until the next message has been sent or the channel is closed. |
+---------+------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. _group___cmp_channel_client_itf_1ga36f2231e1baa39e5b195754f6ebb4387:

int NetClientChannelError (CHANNELBUFFER *pChBuffer, int nError)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Called when a unrecoverable error occurs for pfChBuffer, e.g. ERR_CHANNEL_BROKEN. The channel must be closed by the net client.

**Parameters**

+---------+--------+-----------+
| [in]    | nError | The error |
+---------+--------+-----------+

.. _group___cmp_channel_client_itf_1ga05555228373562e05a8fd458171bcea2:

RTS_RESULT NetClientRegisterAppInterface (unsigned short wChannelHandle, ICmpChannelClientApp *pIChannelClientApp)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to register a handler interface

**Parameters**

+---------+--------------------+-----------------------------------------------------------+
| [in]    | wChannelHandle     | Channel handle that was retrieved by NetClientOpenChannel |
+---------+--------------------+-----------------------------------------------------------+
| [in]    | pIChannelClientApp | Interface pointer                                         |
+---------+--------------------+-----------------------------------------------------------+

**Returns:**

error code

.. _group___cmp_channel_client_itf_1ga22c1658c69a4ea5520f627b68a2c80e4:

RTS_RESULT NetClientUnregisterAppInterface (unsigned short wChannelHandle, ICmpChannelClientApp *pIChannelClientApp)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to register a handler interface

**Parameters**

+---------+--------------------+-----------------------------------------------------------+
| [in]    | wChannelHandle     | Channel handle that was retrieved by NetClientOpenChannel |
+---------+--------------------+-----------------------------------------------------------+
| [in]    | pIChannelClientApp | Interface pointer                                         |
+---------+--------------------+-----------------------------------------------------------+

**Returns:**

error code

.. last line of group.rst template
.. last line of composition.rst template


