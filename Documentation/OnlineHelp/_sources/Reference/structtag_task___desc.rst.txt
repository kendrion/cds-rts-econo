.. first line of composition.rst template

:orphan:

.. first line of struct.rst template

.. _structtag_task___desc:

=============================
tagTask_Desc Struct Reference
=============================

| #include ":ref:`CmpIecTaskItf.h <_cmp_iec_task_itf_8h>`"

Data Fields
-----------

- int :ref:`iId <group___cmp_iec_task_itf_1ga24e360e8a0af9e7602e55fa6b515500f>`
- int :ref:`bIgnoreWatchdogInCycle <group___cmp_iec_task_itf_1gad3fd2a59b4663bbf32f0cdaef8dd41f6>`
- RTS_HANDLE :ref:`hSlotPOUPool <group___cmp_iec_task_itf_1gadd9fd65587e0517422be83f973fb92d4>`
- RTS_HANDLE :ref:`hIecTask <group___cmp_iec_task_itf_1ga52fcf44afe1d3df8b4dc12f5aa82fd78>`
- RTS_HANDLE :ref:`hSched <group___cmp_iec_task_itf_1ga3bb380fb0e8608781308b1fefe9e2591>`
- :ref:`APPLICATION <group___cmp_app_itf___applicationdescription_1gac7bd19d792c2ff88bf331821dd1978b7>` * :ref:`pAppl <group___cmp_iec_task_itf_1gad3e19e44f543093e0124d7f4251401ef>`
- struct :ref:`tagTask_Info <structtag_task___info>` * :ref:`pInfo <group___cmp_iec_task_itf_1ga9f00e14b13430d98f195a54bfc24c5ef>`
- :ref:`RegContext <group___sys_except_itf___exceptioncontext_1gab00884ef66266dc256618d479aade118>` :ref:`Context <group___cmp_iec_task_itf_1ga2e67c4849b45c7d1b35a7fa59cb3c51e>`
- :ref:`RTS_SYSTIME <group___sys_time_itf_1ga10c9d9a4c57129d83432fb02923858bf>` :ref:`tCycleStart <group___cmp_iec_task_itf_1gad5eb47cbd883842d40de0eb47d7516ea>`
- :ref:`RTS_SYSTIME <group___sys_time_itf_1ga10c9d9a4c57129d83432fb02923858bf>` :ref:`tAccumulatedCycleTime <group___cmp_iec_task_itf_1gaa59cdd96b03570aa8ef5c30e0e446831>`
- RTS_UI32 :ref:`ulStackSize <group___cmp_iec_task_itf_1ga5dc0435dbd7ce64829513f5e5191d63e>`
- unsigned char :ref:`StaticSlotPool <group___cmp_iec_task_itf_1ga4021cbb9d061bca11fe3a0a84e0715b3>`[(sizeof(RTS_PCB)+2 *8+(10) *ALIGN_SIZE(sizeof(SlotPOU), 8)+(10) *sizeof(RTS_BCB))]
- void * :ref:`pCppInstance <group___cmp_iec_task_itf_1gaa9a82cb8dc3fb83af2f906c3d6f8d06f>`
- RTS_UI32 :ref:`ulWatchdogCycleCount <group___cmp_iec_task_itf_1ga4235cafdbb18be3c082a5c827e019667>`
- RTS_UI32 :ref:`ulFlags <group___cmp_iec_task_itf_1ga4df6e7ae545a7c48560c8ce10a7ecc5b>`
- int :ref:`iWatchdogHitCount <group___cmp_iec_task_itf_1ga6d654e4a4e49b3a53ee711904cd32830>`
- RTS_I32 :ref:`iWatchdogDisable2Ref <group___cmp_iec_task_itf_1ga1163b2e92e448b3eca8df40c6b0f2f05>`
- RTS_HANDLE :ref:`hTracePacket <group___cmp_iec_task_itf_1ga82a843b1d3ca8fdb358b48ab5fb1145d>`
- RTS_HANDLE :ref:`hTraceRecord <group___cmp_iec_task_itf_1gac15452dbaebeb2104cdbcc26cca76ba3>`
- RTS_HANDLE :ref:`hJitterTracePacket <group___cmp_iec_task_itf_1gadf70edf2aa71c97d8800bc2d2aa6b4be>`
- RTS_HANDLE :ref:`hTRLatency <group___cmp_iec_task_itf_1ga8734ea191475c7977a39c94a8faf5d4f>`
- RTS_HANDLE :ref:`hTRPeriodicJitter <group___cmp_iec_task_itf_1gab8ba537e61102142af551d105f1ce8f1>`
- RTS_HANDLE :ref:`hTRMinReleaseTimeJitter <group___cmp_iec_task_itf_1ga7bb57e1b53a25e7816376e792b2c32cb>`
- :ref:`SEHContext <group___sys_except_itf___s_e_h_context_1ga1f27ab33af4d1aa88d9097c5d8215c22>` * :ref:`pSEHContextHead <group___cmp_iec_task_itf_1ga1526a47931af5a2d3f0cb110cffcdb46>`
- RTS_I32 :ref:`nEnterWriteLock <group___cmp_iec_task_itf_1ga412be95c55ffea7fd454104a7c7ddffb>`
- RTS_HANDLE :ref:`hRWLSync <group___cmp_iec_task_itf_1ga805cafab19295d7be1d3e29c2514a1bc>`
- :ref:`RTS_SYSTIME <group___sys_time_itf_1ga10c9d9a4c57129d83432fb02923858bf>` :ref:`tReleaseTargetMin <group___cmp_iec_task_itf_1gaaec8982ba77226726eaad6d5e96a2486>`
- RTS_BOOL :ref:`bJitterValuesAreInitalized <group___cmp_iec_task_itf_1ga30f866b07f2d60b9f2366dc0e5a36f1b>`
- :ref:`RTS_SYSTIME <group___sys_time_itf_1ga10c9d9a4c57129d83432fb02923858bf>` :ref:`tReleasePrevious <group___cmp_iec_task_itf_1ga5adb3c1e61a47e8868f16fecdb13ad72>`
- :ref:`RTS_SYSTIME <group___sys_time_itf_1ga10c9d9a4c57129d83432fb02923858bf>` :ref:`tPeriod <group___cmp_iec_task_itf_1gaf59037ea758f8f037012be9ba4e4758b>`
- :ref:`RTS_SYSTIME <group___sys_time_itf_1ga10c9d9a4c57129d83432fb02923858bf>` :ref:`tInvocation <group___cmp_iec_task_itf_1gae858196fefaa2cce5c607582d2948f63>`
- RTS_I64 :ref:`i64CurrentMinReleaseTimeJitter <group___cmp_iec_task_itf_1gad6db6f2a05e35ce8c9eff9cb6378ed3b>`
- RTS_I64 :ref:`i64MinMinReleaseTimeJitter <group___cmp_iec_task_itf_1ga20b02b354e5916e711cfbb53a061c5c9>`
- RTS_I64 :ref:`i64MaxMinReleaseTimeJitter <group___cmp_iec_task_itf_1ga4bce582b44c3e00067d59d1cb5675d87>`
- :ref:`RTS_SYSTIME <group___sys_time_itf_1ga10c9d9a4c57129d83432fb02923858bf>` :ref:`tCurrentLatency <group___cmp_iec_task_itf_1gaa985cd8ea559f06c3881df952f60f983>`
- :ref:`RTS_SYSTIME <group___sys_time_itf_1ga10c9d9a4c57129d83432fb02923858bf>` :ref:`tMinLatency <group___cmp_iec_task_itf_1ga294bc7deeadb23842d94284dd6480e0d>`
- :ref:`RTS_SYSTIME <group___sys_time_itf_1ga10c9d9a4c57129d83432fb02923858bf>` :ref:`tMaxLatency <group___cmp_iec_task_itf_1gaf05cf98f6977dd9518cc7fda72c3bbfd>`

Detailed Description
--------------------

<SIL2>

Task Description

The different measured jitter terms are defined in RTS Docu: CODESYSControl V3: Manual: Overview of the Kernel Components and Main Functions: Jitter of IEC Tasks.

See: :ref:&#96;ov_kernel_iec_task_jitter&#96;

The measured jitter values J_per_current, J_per_min, and J_per_max are stored in the struct :ref:`tagTask_Info <structtag_task___info>` . All other measured jitter and latency values are stored in this struct :ref:`tagTask_Desc <structtag_task___desc>` .

Field Documentation
-------------------

.. _group___cmp_iec_task_itf_1ga24e360e8a0af9e7602e55fa6b515500f:

int tagTask_Desc::iId
^^^^^^^^^^^^^^^^^^^^^

Unique identifier of the IEC task. HIWORD is the application ID and LOWORD the task ID (see :ref:`IecTaskCalculateId() <group___cmp_iec_task_itf_1ga2defc0b0b2f479dea946e115b0f900a4>` )

.. _group___cmp_iec_task_itf_1gad3fd2a59b4663bbf32f0cdaef8dd41f6:

int tagTask_Desc::bIgnoreWatchdogInCycle
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

TRUE = Disable watchdog for the rest of the cycle

.. _group___cmp_iec_task_itf_1gadd9fd65587e0517422be83f973fb92d4:

RTS_HANDLE tagTask_Desc::hSlotPOUPool
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Pointer to the static memory for a memory pool from a static memory buffer Handle to the memory pool created from StaticSlotPool

.. _group___cmp_iec_task_itf_1ga52fcf44afe1d3df8b4dc12f5aa82fd78:

RTS_HANDLE tagTask_Desc::hIecTask
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Handle of the IEC task

.. _group___cmp_iec_task_itf_1ga3bb380fb0e8608781308b1fefe9e2591:

RTS_HANDLE tagTask_Desc::hSched
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Scheduler task handle

.. _group___cmp_iec_task_itf_1gad3e19e44f543093e0124d7f4251401ef:

APPLICATION* tagTask_Desc::pAppl
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Pointer to the application description

.. _group___cmp_iec_task_itf_1ga9f00e14b13430d98f195a54bfc24c5ef:

struct tagTask_Info* tagTask_Desc::pInfo
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Pointer to the task info

.. _group___cmp_iec_task_itf_1ga2e67c4849b45c7d1b35a7fa59cb3c51e:

RegContext tagTask_Desc::Context
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Current register context (exception context) of the task, if the task is suspended

.. _group___cmp_iec_task_itf_1gad5eb47cbd883842d40de0eb47d7516ea:

RTS_SYSTIME tagTask_Desc::tCycleStart
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

t_r: current release time of the task in microseconds

.. _group___cmp_iec_task_itf_1gaa59cdd96b03570aa8ef5c30e0e446831:

RTS_SYSTIME tagTask_Desc::tAccumulatedCycleTime
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Accumulated cycle time

.. _group___cmp_iec_task_itf_1ga5dc0435dbd7ce64829513f5e5191d63e:

RTS_UI32 tagTask_Desc::ulStackSize
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Reserved stack size for an IEC task (CMPIECTASK_STACK_SIZE) + additional stack size (CMPIECTASK_STACK_SIZE_ADDITIONAL)

.. _group___cmp_iec_task_itf_1ga4021cbb9d061bca11fe3a0a84e0715b3:

unsigned char tagTask_Desc::StaticSlotPool[(sizeof(RTS_PCB)+2 * 8+( 10) *ALIGN_SIZE(sizeof(SlotPOU), 8)+( 10) *sizeof(RTS_BCB))]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_iec_task_itf_1gaa9a82cb8dc3fb83af2f906c3d6f8d06f:

void* tagTask_Desc::pCppInstance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Internal usage for C++

.. _group___cmp_iec_task_itf_1ga4235cafdbb18be3c082a5c827e019667:

RTS_UI32 tagTask_Desc::ulWatchdogCycleCount
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

last IEC task cycle count, when the watchdog was checked

.. _group___cmp_iec_task_itf_1ga4df6e7ae545a7c48560c8ce10a7ecc5b:

RTS_UI32 tagTask_Desc::ulFlags
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Used by the macros above

.. _group___cmp_iec_task_itf_1ga6d654e4a4e49b3a53ee711904cd32830:

int tagTask_Desc::iWatchdogHitCount
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Number of times the watchdog was hit

.. _group___cmp_iec_task_itf_1ga1163b2e92e448b3eca8df40c6b0f2f05:

RTS_I32 tagTask_Desc::iWatchdogDisable2Ref
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Counter for IecTaskDisableWatchdog2 calls without a matching IecTaskEnableWatchdog2 call

.. _group___cmp_iec_task_itf_1ga82a843b1d3ca8fdb358b48ab5fb1145d:

RTS_HANDLE tagTask_Desc::hTracePacket
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Handle to the trace packet for IEC-task tracing (see setting "EnableTaskTrace")

.. _group___cmp_iec_task_itf_1gac15452dbaebeb2104cdbcc26cca76ba3:

RTS_HANDLE tagTask_Desc::hTraceRecord
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Handle to the trace record for IEC-task tracing (see setting "EnableTaskTrace")

.. _group___cmp_iec_task_itf_1gadf70edf2aa71c97d8800bc2d2aa6b4be:

RTS_HANDLE tagTask_Desc::hJitterTracePacket
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

IEC task jitter trace package handle (see setting "EnableTaskTrace")

.. _group___cmp_iec_task_itf_1ga8734ea191475c7977a39c94a8faf5d4f:

RTS_HANDLE tagTask_Desc::hTRLatency
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

trace record handle for the current IEC task latency (see setting "EnableTaskTrace")

.. _group___cmp_iec_task_itf_1gab8ba537e61102142af551d105f1ce8f1:

RTS_HANDLE tagTask_Desc::hTRPeriodicJitter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

trace record handle for the current IEC task periodic jitter trace (see setting "EnableTaskTrace")

.. _group___cmp_iec_task_itf_1ga7bb57e1b53a25e7816376e792b2c32cb:

RTS_HANDLE tagTask_Desc::hTRMinReleaseTimeJitter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

trace record handle for the current IEC task jitter based on t_r_min (see setting "EnableTaskTrace")

.. _group___cmp_iec_task_itf_1ga1526a47931af5a2d3f0cb110cffcdb46:

SEHContext* tagTask_Desc::pSEHContextHead
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Pointer to the head of the registered exception frames

.. _group___cmp_iec_task_itf_1ga412be95c55ffea7fd454104a7c7ddffb:

RTS_I32 tagTask_Desc::nEnterWriteLock
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Needed when SYSREADWRITELOCK_NOTIMPLEMENTED

.. _group___cmp_iec_task_itf_1ga805cafab19295d7be1d3e29c2514a1bc:

RTS_HANDLE tagTask_Desc::hRWLSync
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Handle to the semaphore needed when SYSREADWRITELOCK_NOTIMPLEMENTED

.. _group___cmp_iec_task_itf_1gaaec8982ba77226726eaad6d5e96a2486:

RTS_SYSTIME tagTask_Desc::tReleaseTargetMin
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

t_r_target_min in microseconds = t_r_min + nT0: target task release time based on the task release time with the maximum negative periodic jitter (J_per_min) with (nT0) being a multiple of the ideal period and n being the number of cycles that have elapsed since the reference value t_r_min (respective J_per_min) was set

.. _group___cmp_iec_task_itf_1ga30f866b07f2d60b9f2366dc0e5a36f1b:

RTS_BOOL tagTask_Desc::bJitterValuesAreInitalized
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

t_r_target_min is initialized

.. _group___cmp_iec_task_itf_1ga5adb3c1e61a47e8868f16fecdb13ad72:

RTS_SYSTIME tagTask_Desc::tReleasePrevious
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

t_r_previous: previous release time of the task in microseconds

.. _group___cmp_iec_task_itf_1gaf59037ea758f8f037012be9ba4e4758b:

RTS_SYSTIME tagTask_Desc::tPeriod
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

T_per in microseconds: task period = t_r - t_r_previous

.. _group___cmp_iec_task_itf_1gae858196fefaa2cce5c607582d2948f63:

RTS_SYSTIME tagTask_Desc::tInvocation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

t_i: invocation time of the task in microseconds

.. _group___cmp_iec_task_itf_1gad6db6f2a05e35ce8c9eff9cb6378ed3b:

RTS_I64 tagTask_Desc::i64CurrentMinReleaseTimeJitter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

J_t_r_min_current in microseconds = t_r - (t_r_min + nCycSince_t_r_minT0): deviation of the current task release time from the target task release time based on the task release time with the maximum negative periodic jitter

.. _group___cmp_iec_task_itf_1ga20b02b354e5916e711cfbb53a061c5c9:

RTS_I64 tagTask_Desc::i64MinMinReleaseTimeJitter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

J_t_r_min_min in microseconds

.. _group___cmp_iec_task_itf_1ga4bce582b44c3e00067d59d1cb5675d87:

RTS_I64 tagTask_Desc::i64MaxMinReleaseTimeJitter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

J_t_r_min_max in microseconds

.. _group___cmp_iec_task_itf_1gaa985cd8ea559f06c3881df952f60f983:

RTS_SYSTIME tagTask_Desc::tCurrentLatency
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

L_current: Latency [in microseconds] is the delay between the invocation of a task [t_i] and the actual start of its execution (release) [t_r].

.. _group___cmp_iec_task_itf_1ga294bc7deeadb23842d94284dd6480e0d:

RTS_SYSTIME tagTask_Desc::tMinLatency
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

L_min: minimum latency in microseconds

.. _group___cmp_iec_task_itf_1gaf05cf98f6977dd9518cc7fda72c3bbfd:

RTS_SYSTIME tagTask_Desc::tMaxLatency
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

L_max: maximum latency in microseconds

The documentation for this struct was generated from the following file:
------------------------------------------------------------------------

CmpIecTaskItf.h

.. last line of struct.rst template
.. last line of composition.rst template


